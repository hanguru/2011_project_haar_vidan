#ifndef _REDWOOD_API_H_
#define _REDWOOD_API_H_
typedef enum {
	JPEG_FPS_LEVEL_6 = 0,
	JPEG_FPS_LEVEL_10,
	JPEG_FPS_LEVEL_15,
	JPEG_FPS_LEVEL_20,
	JPEG_FPS_LEVEL_24,
	JPEG_FPS_LEVEL_30
} JPEG_FPS_LEVEL;

typedef struct video_param {
	unsigned int res_width;
	unsigned int res_height;
	unsigned char jpeg_quality;
	unsigned char isFlipEnable;
	unsigned char isAvataCaptureMode;
	JPEG_FPS_LEVEL jpeg_fps_level;
} video_param_t;

typedef enum {
	AUDIO_FREQ_16KHZ = 0,
	AUDIO_FREQ_12KHZ
} AUDIO_FREQ_TYPE;

typedef struct audio_param {
	AUDIO_FREQ_TYPE audio_freq_type;
} audio_param_t;

int redwood_system_init(void);

int redwood_system_exit(void);

int redwood_video_start(video_param_t *vParm);

int redwood_video_stop(void);

int redwood_audio_start(audio_param_t *aParm);

int redwood_audio_stop(void);

void redwood_h264_callback_register(void (*func)(unsigned int dataLen, char *dataBuf));

void redwood_jpeg_callback_register(void (*func)(unsigned int dataLen, char *dataBuf));

void redwood_pcm_callback_register(void (*func)(unsigned int dataLen, char *dataBuf));

void redwood_keyframe_request(void);

void redwood_bitrate_set(int bps);

void redwood_framerate_set(int framerate);

void redwood_input_db_set(unsigned char input_db);

void redwood_agc_gain_set(unsigned char r26, 
						  unsigned char r27, 
						  unsigned char r28,
						  unsigned char r29,
						  unsigned char r30,
						  unsigned char r31);

void redwood_audio_mute_set(unsigned char isMuted);

void redwood_video_zoom_set(unsigned char zoomLevel); // Zoom Level must be from 0 to 3 -- Initial Setting zoom level 0.

void redwood_video_flip_set(unsigned char isFlipEnable);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 																												//
//												Video Setting API												//
//	==========================================================================================================	//
//	*Contrast(11) 			: 0(-5) 1(-4) 2(-3) 3(-2) 4(-1) 5(0) 6(1) 7(2) 8(3) 9(4) 10(5)						//
//	*Brightness(11) 		: 0(-5) 1(-4) 2(-3) 3(-2) 4(-1) 5(0) 6(1) 7(2) 8(3) 9(4) 10(5) 						//
//  *Saturation(11)			: 0(-5) 1(-4) 2(-3) 3(-2) 4(-1) 5(0) 6(1) 7(2) 8(3) 9(4) 10(5) 						//						
//  *Sharpness(11)			: 0(-5) 1(-4) 2(-3) 3(-2) 4(-1) 5(0) 6(1) 7(2) 8(3) 9(4) 10(5) 						//
//  *Hue(11)				: 0(-5) 1(-4) 2(-3) 3(-2) 4(-1) 5(0) 6(1) 7(2) 8(3) 9(4) 10(5) 						//
//  *Gamma(11)				: 0(default) 1(1.2) 2(1.3) 3(1.4) 4(1.5) 5(1.6) 6(1.7) 7(1.8) 8(1.9) 9(2.0) 10(2.1)	//
//  *White Balance(11)		: ON/OFF - 0 1 2 3 4 5 6 7 8 9 10													//
//  *Auto Exposure(11)		: ON/OFF - 0 1 2 3 4 5 6 7 8 9 10													//
//  *Power Line Freq.(2)	: 0(50Hz) 1(60Hz)																	// 
// 																												//	
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Contrast
void redwood_video_contrast_set(unsigned int level); 	
//Brightness
void redwood_video_brightness_set(unsigned int level); 
//Saturation
void redwood_video_saturation_set(unsigned int level); 
//Sharpness
void redwood_video_sharpness_set(unsigned int level); 
//Hue
void redwood_video_hue_set(unsigned int level); 
//Gamma
void redwood_video_gamma_set(unsigned int level); 
//White Balance
void redwood_video_white_balance_set(unsigned int level); 
void redwood_video_auto_white_balance_set(unsigned int isAuto);
//Auto Exposure
void redwood_video_exposure_set(unsigned int level); 
void redwood_video_auto_exposure_set(unsigned int isAuto);
//Power Line Freq.
void redwood_video_power_line_freq_set(unsigned int level);

/***************************************************************/
/*																					*/
/*						Firmware Upgrade API									*/
/*																					*/
/***************************************************************/
int redwood_firmware_upgrade(char *romfilepath); 
int redwood_firmware_version_check(char *strVersion); 


#endif


