	.file	"lencod.c"
	.stabs	"/home/hanguru/2011_project_original/lgdtv_vidan4110_fw_capp_project/software/vi_fw_project/",100,0,2,.Ltext0
	.stabs	"internal/lencod.c",100,0,2,.Ltext0
.section .internalrom, "ax"
.Ltext0:
	.stabs	"gcc2_compiled.",60,0,0,0
	.stabs	"int:t(0,1)=r(0,1);-2147483648;2147483647;",128,0,0,0
	.stabs	"char:t(0,2)=r(0,2);0;127;",128,0,0,0
	.stabs	"long int:t(0,3)=r(0,3);-2147483648;2147483647;",128,0,0,0
	.stabs	"unsigned int:t(0,4)=r(0,4);0;037777777777;",128,0,0,0
	.stabs	"long unsigned int:t(0,5)=r(0,5);0;037777777777;",128,0,0,0
	.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,0
	.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
	.stabs	"short int:t(0,8)=@s16;r(0,8);-32768;32767;",128,0,0,0
	.stabs	"short unsigned int:t(0,9)=@s16;r(0,9);0;65535;",128,0,0,0
	.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
	.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
	.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
	.stabs	"double:t(0,13)=r(0,1);8;0;",128,0,0,0
	.stabs	"long double:t(0,14)=r(0,1);8;0;",128,0,0,0
	.stabs	"void:t(0,15)=(0,15)",128,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/stdio.h",130,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/include/stddef.h",130,0,0,0
	.stabs	"size_t:t(2,1)=(0,5)",128,0,214,0
	.stabn	162,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/include/stdarg.h",130,0,0,0
	.stabs	"__gnuc_va_list:t(3,1)=(3,2)=*(0,15)",128,0,43,0
	.stabn	162,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/sys/reent.h",130,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/sys/_types.h",130,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/sys/lock.h",130,0,0,0
	.stabs	"_LOCK_T:t(6,1)=(0,1)",128,0,6,0
	.stabs	"_LOCK_RECURSIVE_T:t(6,2)=(0,1)",128,0,7,0
	.stabn	162,0,0,0
	.stabs	"_off_t:t(5,1)=(0,3)",128,0,14,0
	.stabs	"_off64_t:t(5,2)=(0,6)",128,0,15,0
	.stabs	"_ssize_t:t(5,3)=(0,1)",128,0,18,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/include/stddef.h",130,0,0,0
	.stabs	"wint_t:t(7,1)=(0,4)",128,0,355,0
	.stabn	162,0,0,0
	.stabs	"_mbstate_t:t(5,4)=(5,5)=s8__count:(0,1),0,32;__value:(5,6)=u4__wch:(7,1),0,32;__wchb:(5,7)=ar(5,8)=r(5,8);0;037777777777;;0;3;(0,11),0,32;;,32,32;;",128,0,35,0
	.stabs	"_flock_t:t(5,9)=(6,2)",128,0,37,0
	.stabs	"_iconv_t:t(5,10)=(5,11)=*(0,15)",128,0,40,0
	.stabn	162,0,0,0
	.stabs	"__ULong:t(4,1)=(0,5)",128,0,19,0
	.stabs	"_Bigint:T(4,2)=s24_next:(4,3)=*(4,2),0,32;_k:(0,1),32,32;_maxwds:(0,1),64,32;_sign:(0,1),96,32;_wds:(0,1),128,32;_x:(4,4)=ar(5,8);0;0;(4,1),160,32;;",128,0,0,0
	.stabs	"__tm:T(4,5)=s36__tm_sec:(0,1),0,32;__tm_min:(0,1),32,32;__tm_hour:(0,1),64,32;__tm_mday:(0,1),96,32;__tm_mon:(0,1),128,32;__tm_year:(0,1),160,32;__tm_wday:(0,1),192,32;__tm_yday:(0,1),224,32;__tm_isdst:(0,1),256,32;;",128,0,0,0
	.stabs	"_on_exit_args:T(4,6)=s264_fnargs:(4,7)=ar(5,8);0;31;(5,11),0,1024;_dso_handle:(4,7),1024,1024;_fntypes:(4,1),2048,32;_is_cxa:(4,1),2080,32;;",128,0,0,0
	.stabs	"_atexit:T(4,8)=s400_next:(4,9)=*(4,8),0,32;_ind:(0,1),32,32;_fns:(4,10)=ar(5,8);0;31;(4,11)=*(4,12)=f(0,15),64,1024;_on_exit_args:(4,6),1088,2112;;",128,0,0,0
	.stabs	"__sbuf:T(4,13)=s8_base:(4,14)=*(0,11),0,32;_size:(0,1),32,32;;",128,0,0,0
	.stabs	"_fpos_t:t(4,15)=(0,3)",128,0,111,0
	.stabs	"__sFILE:T(4,16)=s92_p:(4,14),0,32;_r:(0,1),32,32;_w:(0,1),64,32;_flags:(0,8),96,16;_file:(0,8),112,16;_bf:(4,13),128,64;_lbfsize:(0,1),192,32;_cookie:(5,11),224,32;_read:(4,17)=*(4,18)=f(0,1),256,32;_write:(4,19)=*(4,20)=f(0,1),288,32;_seek:(4,21)=*(4,22)=f(4,15),320,32;_close:(4,23)=*(4,24)=f(0,1),352,32;_ub:(4,13),384,64;_up:(4,14),448,32;_ur:(0,1),480,32;_ubuf:(4,25)=ar(5,8);0;2;(0,11),512,24;_nbuf:(4,26)=ar(5,8);0;0;(0,11),536,8;_lb:(4,13),544,64;_blksize:(0,1),608,32;_offset:(0,1),640,32;_data:(4,27)=*(4,28)=xs_reent:,672,32;_lock:(5,9),704,32;;",128,0,0,0
	.stabs	"__FILE:t(4,29)=(4,16)",128,0,259,0
	.stabs	"_glue:T(4,30)=s12_next:(4,31)=*(4,30),0,32;_niobs:(0,1),32,32;_iobs:(4,32)=*(4,29),64,32;;",128,0,0,0
	.stabs	"_rand48:T(4,33)=s16_seed:(4,34)=ar(5,8);0;2;(0,9),0,48;_mult:(4,34),48,48;_add:(0,9),96,16;;",128,0,0,0
	.stabs	"_reent:T(4,28)=s1024_errno:(0,1),0,32;_stdin:(4,32),32,32;_stdout:(4,32),64,32;_stderr:(4,32),96,32;_inc:(0,1),128,32;_emergency:(4,35)=ar(5,8);0;24;(0,2),160,200;_current_category:(0,1),384,32;_current_locale:(4,36)=*(4,37)=k(0,2),416,32;__sdidinit:(0,1),448,32;__cleanup:(4,38)=*(4,39)=f(0,15),480,32;_result:(4,3),512,32;_result_k:(0,1),544,32;_p5s:(4,3),576,32;_freelist:(4,40)=*(4,3),608,32;_cvtlen:(0,1),640,32;_cvtbuf:(4,41)=*(0,2),672,32;_new:(4,42)=u240_reent:(4,43)=s208_unused_rand:(0,4),0,32;_strtok_last:(4,41),32,32;_asctime_buf:(4,44)=ar(5,8);0;25;(0,2),64,208;_localtime_buf:(4,5),288,288;_gamma_signgam:(0,1),576,32;_rand_next:(0,7),640,64;_r48:(4,33),704,128;_mblen_state:(5,4),832,64;_mbtowc_state:(5,4),896,64;_wctomb_state:(5,4),960,64;_l64a_buf:(4,45)=ar(5,8);0;7;(0,2),1024,64;_signal_buf:(4,46)=ar(5,8);0;23;(0,2),1088,192;_getdate_err:(0,1),1280,32;_mbrlen_state:(5,4),1312,64;_mbrtowc_state:(5,4),1376,64;_mbsrtowcs_state:(5,4),1440,64;_wcrtomb_state:(5,4),1504,64;_wcsrtombs_state:(5,4),1568,64;;,0,1664;_unused:(4,47)=s240_nextf:(4,48)=ar(5,8);0;29;(4,14),0,960;_nmalloc:(4,49)=ar(5,8);0;29;(0,4),960,960;;,0,1920;;,704,1920;_atexit:(4,9),2624,32;_atexit0:(4,8),2656,3200;_sig_func:(4,50)=*(4,51)=*(4,52)=f(0,15),5856,32;__sglue:(4,30),5888,96;__sf:(4,53)=ar(5,8);0;2;(4,29),5984,2208;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/sys/types.h",130,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/machine/_types.h",130,0,0,0
	.stabs	"__int8_t:t(9,1)=(0,10)",128,0,26,0
	.stabs	"__uint8_t:t(9,2)=(0,11)",128,0,27,0
	.stabs	"__int16_t:t(9,3)=(0,8)",128,0,36,0
	.stabs	"__uint16_t:t(9,4)=(0,9)",128,0,37,0
	.stabs	"__int_least16_t:t(9,5)=(9,3)",128,0,46,0
	.stabs	"__uint_least16_t:t(9,6)=(9,4)",128,0,47,0
	.stabs	"__int32_t:t(9,7)=(0,1)",128,0,58,0
	.stabs	"__uint32_t:t(9,8)=(0,4)",128,0,59,0
	.stabs	"__int_least32_t:t(9,9)=(9,7)",128,0,76,0
	.stabs	"__uint_least32_t:t(9,10)=(9,8)",128,0,77,0
	.stabs	"__int64_t:t(9,11)=(0,6)",128,0,99,0
	.stabs	"__uint64_t:t(9,12)=(0,7)",128,0,100,0
	.stabn	162,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/include/stddef.h",130,0,0,0
	.stabs	"ptrdiff_t:t(10,1)=(0,3)",128,0,152,0
	.stabs	"wchar_t:t(10,2)=(0,1)",128,0,326,0
	.stabn	162,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/machine/types.h",130,0,0,0
	.stabs	"__off_t:t(11,1)=(0,3)",128,0,19,0
	.stabs	"__pid_t:t(11,2)=(0,1)",128,0,20,0
	.stabs	"__loff_t:t(11,3)=(0,6)",128,0,22,0
	.stabn	162,0,0,0
	.stabs	"u_char:t(8,1)=(0,11)",128,0,92,0
	.stabs	"u_short:t(8,2)=(0,9)",128,0,93,0
	.stabs	"u_int:t(8,3)=(0,4)",128,0,94,0
	.stabs	"u_long:t(8,4)=(0,5)",128,0,95,0
	.stabs	"ushort:t(8,5)=(0,9)",128,0,99,0
	.stabs	"uint:t(8,6)=(0,4)",128,0,100,0
	.stabs	"clock_t:t(8,7)=(0,5)",128,0,104,0
	.stabs	"time_t:t(8,8)=(0,3)",128,0,109,0
	.stabs	"timespec:T(8,9)=s8tv_sec:(8,8),0,32;tv_nsec:(0,3),32,32;;",128,0,0,0
	.stabs	"itimerspec:T(8,10)=s16it_interval:(8,9),0,64;it_value:(8,9),64,64;;",128,0,0,0
	.stabs	"daddr_t:t(8,11)=(0,3)",128,0,125,0
	.stabs	"caddr_t:t(8,12)=(4,41)",128,0,126,0
	.stabs	"ino_t:t(8,13)=(0,9)",128,0,135,0
	.stabs	"dev_t:t(8,14)=(0,8)",128,0,169,0
	.stabs	"off_t:t(8,15)=(0,3)",128,0,174,0
	.stabs	"uid_t:t(8,16)=(0,9)",128,0,176,0
	.stabs	"gid_t:t(8,17)=(0,9)",128,0,177,0
	.stabs	"pid_t:t(8,18)=(0,1)",128,0,180,0
	.stabs	"key_t:t(8,19)=(0,3)",128,0,182,0
	.stabs	"ssize_t:t(8,20)=(5,3)",128,0,184,0
	.stabs	"mode_t:t(8,21)=(0,4)",128,0,198,0
	.stabs	"nlink_t:t(8,22)=(0,9)",128,0,203,0
	.stabs	"fd_mask:t(8,23)=(0,3)",128,0,225,0
	.stabs	"_types_fd_set:T(8,24)=s8fds_bits:(8,25)=ar(5,8);0;1;(8,23),0,64;;",128,0,0,0
	.stabs	"_types_fd_set:t(8,26)=(8,24)",128,0,235,0
	.stabs	"clockid_t:t(8,27)=(0,5)",128,0,256,0
	.stabs	"timer_t:t(8,28)=(0,5)",128,0,261,0
	.stabs	"useconds_t:t(8,29)=(0,3)",128,0,265,0
	.stabn	162,0,0,0
	.stabs	"FILE:t(1,1)=(4,29)",128,0,50,0
	.stabs	"fpos_t:t(1,2)=(4,15)",128,0,59,0
	.stabn	162,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/stdlib.h",130,0,0,0
	.stabs	"div_t:t(12,1)=(12,2)=s8quot:(0,1),0,32;rem:(0,1),32,32;;",128,0,32,0
	.stabs	"ldiv_t:t(12,3)=(12,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,38,0
	.stabs	"lldiv_t:t(12,5)=(12,6)=s16quot:(0,6),0,64;rem:(0,6),64,64;;",128,0,45,0
	.stabn	162,0,0,0
	.stabs	"src/global.h",130,0,0,0
	.stabs	"src/defines.h",130,0,0,0
	.stabs	"byte:t(14,1)=(0,11)",128,0,24,0
	.stabn	162,0,0,0
	.stabs	"src/parsetcommon.h",130,0,0,0
	.stabs	" :T(15,1)=eFALSE:0,TRUE:1,;",128,0,0,0
	.stabs	"Boolean:t(15,2)=(15,1)",128,0,33,0
	.stabs	"pic_parameter_set_rbsp_t:t(15,3)=(15,4)=s4num_ref_idx_l0_active_minus1:(0,4),0,32;;",128,0,40,0
	.stabs	"seq_parameter_set_rbsp_t:t(15,5)=(15,6)=s8pic_width_in_mbs_minus1:(0,4),0,32;pic_height_in_map_units_minus1:(0,4),32,32;;",128,0,48,0
	.stabn	162,0,0,0
	.stabs	" :T(13,1)=eINTER_MB:0,INTRA_MB_4x4:1,INTRA_MB_16x16:2,;",128,0,0,0
	.stabs	"IntraInterDecision:t(13,2)=(13,1)",128,0,58,0
	.stabs	" :T(13,3)=eP_SLICE:0,I_SLICE:1,;",128,0,0,0
	.stabs	"SliceType:t(13,4)=(13,3)",128,0,63,0
	.stabs	"pix_pos:T(13,5)=s24available:(0,1),0,32;mb_addr:(0,1),32,32;x:(0,1),64,32;y:(0,1),96,32;pos_x:(0,1),128,32;pos_y:(0,1),160,32;;",128,0,0,0
	.stabs	"PixelPos:t(13,6)=(13,5)",128,0,73,0
	.stabs	"syntaxelement:T(13,7)=s24value1:(0,1),0,32;value2:(0,1),32,32;len:(0,1),64,32;inf:(0,1),96,32;bitpattern:(0,4),128,32;mapping:(13,8)=*(13,9)=f(0,15),160,32;;",128,0,0,0
	.stabs	"SyntaxElement:t(13,10)=(13,7)",128,0,87,0
	.stabs	"macroblock:T(13,11)=s300currSEnr:(0,1),0,32;delta_qp:(0,1),32,32;qp:(0,1),64,32;mb_type:(0,1),96,32;mvd:(13,12)=ar(5,8);0;3;(13,13)=ar(5,8);0;3;(13,14)=ar(5,8);0;1;(0,1),128,1024;intra_pred_modes:(13,15)=ar(5,8);0;15;(0,1),1152,512;cbp:(0,1),1664,32;cbp_blk:(0,1),1696,32;b8mode:(13,16)=ar(5,8);0;3;(0,1),1728,128;b8pdir:(13,16),1856,128;lf_disable:(0,1),1984,32;lf_alpha_c0_offset:(0,1),2016,32;lf_beta_offset:(0,1),2048,32;c_ipred_mode:(0,1),2080,32;IntraChromaPredModeFlag:(0,1),2112,32;mbAddrA:(0,1),2144,32;mbAddrB:(0,1),2176,32;mbAddrC:(0,1),2208,32;mbAddrD:(0,1),2240,32;mbAvailA:(0,1),2272,32;mbAvailB:(0,1),2304,32;mbAvailC:(0,1),2336,32;mbAvailD:(0,1),2368,32;;",128,0,0,0
	.stabs	"Macroblock:t(13,17)=(13,11)",128,0,115,0
	.stabs	"prev_macroblock:T(13,18)=s20qp:(0,1),0,32;mb_type:(0,1),32,32;cbp_blk:(0,1),64,32;lf_alpha_c0_offset:(0,1),96,32;lf_beta_offset:(0,1),128,32;;",128,0,0,0
	.stabs	"Prev_Macroblock:t(13,19)=(13,18)",128,0,125,0
	.stabs	"Slice:t(13,20)=(13,21)=s12qp:(0,1),0,32;start_mb_nr:(0,1),32,32;num_mb:(0,1),64,32;;",128,0,135,0
	.stabs	"Picture:t(13,22)=(13,23)=s8no_slices:(0,1),0,32;slices:(13,24)=*(13,20),32,32;;",128,0,143,0
	.stabs	"Sourceframe:t(13,25)=(13,26)=s20x_size:(0,1),0,32;y_framesize:(0,1),32,32;yf:(4,41),64,32;uf:(4,41),96,32;vf:(4,41),128,32;;",128,0,153,0
	.stabs	"input_par:T(13,27)=s160qp0:(0,1),0,32;qpN:(0,1),32,32;jumpd:(0,1),64,32;img_width:(0,1),96,32;img_height:(0,1),128,32;cam_width:(0,1),160,32;cam_height:(0,1),192,32;cb_offset:(0,1),224,32;blc_size:(13,28)=ar(5,8);0;7;(13,14),256,512;intra_period:(0,1),768,32;LFSendParameters:(0,1),800,32;LFDisableIdc:(0,1),832,32;LFAlphaC0Offset:(0,1),864,32;LFBetaOffset:(0,1),896,32;RCEnable:(0,1),928,32;bit_rate0:(0,1),960,32;bit_rate1:(0,1),992,32;bit_rate:(0,1),1024,32;PrevBitRate:(0,1),1056,32;FrameRate:(0,1),1088,32;SeinitialQP0:(0,1),1120,32;SeinitialQP1:(0,1),1152,32;SeinitialQP:(0,1),1184,32;slice_mode:(0,1),1216,32;slice_argument:(0,1),1248,32;;",128,0,0,0
	.stabs	"InputParameters:t(13,29)=(13,27)",128,0,218,0
	.stabs	"img_par:T(13,30)=s872number:(0,1),0,32;current_mb_nr:(0,1),32,32;total_number_mb:(0,1),64,32;type:(0,1),96,32;qp:(0,1),128,32;prev_qp:(0,1),160,32;width:(0,1),192,32;width_cr:(0,1),224,32;height:(0,1),256,32;height_cr:(0,1),288,32;mb_x:(0,1),320,32;mb_y:(0,1),352,32;block_x:(0,1),384,32;block_y:(0,1),416,32;subblock_x:(0,1),448,32;subblock_y:(0,1),480,32;pix_x:(0,1),512,32;pix_y:(0,1),544,32;mb_y_upd:(0,1),576,32;cod_counter:(0,1),608,32;currentSlice:(13,24),640,32;mb_data_q:(13,17),672,2400;mb_data_h:(13,19),3072,160;mb_data_v:(13,31)=*(13,19),3232,32;MB_SyntaxElements:(13,32)=ar(5,8);0;9;(13,10),3264,1920;num_ref_idx_l0_active:(0,1),5184,32;num_ref_idx_l1_active:(0,1),5216,32;i16offset:(0,1),5248,32;pic_order_cnt_lsb:(0,4),5280,32;framepoc:(0,1),5312,32;frame_num:(0,4),5344,32;PicWidthInMbs0:(0,4),5376,32;FrameHeightInMbs0:(0,4),5408,32;FrameSizeInMbs0:(0,4),5440,32;PicWidthInMbs1:(0,4),5472,32;FrameHeightInMbs1:(0,4),5504,32;FrameSizeInMbs1:(0,4),5536,32;PicWidthInMbs:(0,4),5568,32;FrameHeightInMbs:(0,4),5600,32;PicSizeInMbs:(0,4),5632,32;FrameSizeInMbs:(0,4),5664,32;nal_reference_idc:(0,1),5696,32;prev_mb_x:(0,1),5728,32;prev_mb_y:(0,1),5760,32;prev_prev_mb_x:(0,1),5792,32;prev_prev_mb_y:(0,1),5824,32;next_mb_x:(0,1),5856,32;next_mb_y:(0,1),5888,32;number_mb_per_row:(0,1),5920,32;number_mb_per_row_mul_four:(0,1),5952,32;number_mb_per_row_mul_six:(0,1),5984,32;prevf_enc_time:(0,1),6016,32;targetfr_enc_time:(0,1),6048,32;targetmb_enc_time:(0,1),6080,32;avg_mb_enc_time_of_line:(13,33)=*(0,1),6112,32;Frame_Total_Number_MB:(0,1),6144,32;framerate:(0,1),6176,32;NumberofCodedPFrame0:(0,1),6208,32;NumberofCodedPFrame1:(0,1),6240,32;NumberofCodedPFrame:(0,1),6272,32;NumberofGOP0:(0,1),6304,32;NumberofGOP1:(0,1),6336,32;NumberofGOP:(0,1),6368,32;MADofMB:(13,33),6400,32;TotalQpforPPicture0:(0,1),6432,32;TotalQpforPPicture1:(0,1),6464,32;TotalQpforPPicture:(0,1),6496,32;NumberofPPicture0:(0,1),6528,32;NumberofPPicture1:(0,1),6560,32;NumberofPPicture:(0,1),6592,32;NumberofHeaderBits0:(0,1),6624,32;NumberofHeaderBits1:(0,1),6656,32;NumberofHeaderBits:(0,1),6688,32;NumberofTextureBits0:(0,1),6720,32;NumberofTextureBits1:(0,1),6752,32;NumberofTextureBits:(0,1),6784,32;width_offset:(0,1),6816,32;height_offset:(0,1),6848,32;cam_width:(0,1),6880,32;cam_height:(0,1),6912,32;cb_offset:(0,1),6944,32;;",128,0,0,0
	.stabs	"ImageParameters:t(13,34)=(13,30)",128,0,356,0
	.stabn	162,0,0,0
	.stabs	"ucos/task_manage.h",130,0,0,0
	.stabs	"ucos/ucos_ii.h",130,0,0,0
	.stabs	"ucos/os_cpu.h",130,0,0,0
	.stabs	"BOOLEAN:t(18,1)=(0,11)",128,0,9,0
	.stabs	"INT8U:t(18,2)=(0,11)",128,0,10,0
	.stabs	"INT8S:t(18,3)=(0,2)",128,0,11,0
	.stabs	"INT16U:t(18,4)=(0,9)",128,0,12,0
	.stabs	"INT16S:t(18,5)=(0,8)",128,0,13,0
	.stabs	"INT32U:t(18,6)=(0,5)",128,0,14,0
	.stabs	"INT32S:t(18,7)=(0,3)",128,0,15,0
	.stabs	"VBOOLEAN:t(18,8)=(18,9)=B(0,11)",128,0,16,0
	.stabs	"OS_STK:t(18,10)=(0,4)",128,0,17,0
	.stabs	"OS_CPU_SR:t(18,11)=(0,4)",128,0,18,0
	.stabn	162,0,0,0
	.stabs	"ucos/os_cfg.h",130,0,0,0
	.stabs	"OS_FLAGS:t(19,1)=(18,4)",128,0,112,0
	.stabn	162,0,0,0
	.stabs	"os_event:T(17,1)=s44OSEventType:(18,2),0,8;OSEventGrp:(18,2),8,8;OSEventCnt:(18,4),16,16;OSEventPtr:(5,11),32,32;OSEventTbl:(17,2)=ar(5,8);0;0;(18,2),64,8;OSEventName:(17,3)=ar(5,8);0;31;(0,2),72,256;;",128,0,0,0
	.stabs	"OS_EVENT:t(17,4)=(17,1)",128,0,257,0
	.stabs	"os_sem_data:T(17,5)=s4OSCnt:(18,4),0,16;OSEventTbl:(17,2),16,8;OSEventGrp:(18,2),24,8;;",128,0,0,0
	.stabs	"OS_SEM_DATA:t(17,6)=(17,5)",128,0,387,0
	.stabs	"os_stk_data:T(17,7)=s8OSFree:(18,6),0,32;OSUsed:(18,6),32,32;;",128,0,0,0
	.stabs	"OS_STK_DATA:t(17,8)=(17,7)",128,0,400,0
	.stabs	"os_tcb:T(17,9)=s96OSTCBStkPtr:(17,10)=*(18,10),0,32;OSTCBExtPtr:(5,11),32,32;OSTCBStkBottom:(17,10),64,32;OSTCBStkSize:(18,6),96,32;OSTCBOpt:(18,4),128,16;OSTCBId:(18,4),144,16;OSTCBNext:(17,11)=*(17,9),160,32;OSTCBPrev:(17,11),192,32;OSTCBEventPtr:(17,12)=*(17,4),224,32;OSTCBDly:(18,4),256,16;OSTCBStat:(18,2),272,8;OSTCBPendTO:(18,1),280,8;OSTCBPrio:(18,2),288,8;OSTCBX:(18,2),296,8;OSTCBY:(18,2),304,8;OSTCBBitX:(18,2),312,8;OSTCBBitY:(18,2),320,8;OSTCBDelReq:(18,2),328,8;OSTCBCtxSwCtr:(18,6),352,32;OSTCBCyclesTot:(18,6),384,32;OSTCBCyclesStart:(18,6),416,32;OSTCBStkBase:(17,10),448,32;OSTCBStkUsed:(18,6),480,32;OSTCBTaskName:(17,3),512,256;;",128,0,0,0
	.stabs	"OS_TCB:t(17,13)=(17,9)",128,0,464,0
	.stabn	162,0,0,0
	.stabn	162,0,0,0
	.stabs	"jpeg/jpeglib.h",130,0,0,0
	.stabs	"jpeg/jconfig.h",130,0,0,0
	.stabs	"boolean:t(21,1)=(0,11)",128,0,22,0
	.stabn	162,0,0,0
	.stabs	"jpeg/jmorecfg.h",130,0,0,0
	.stabs	"JSAMPLE:t(22,1)=(0,11)",128,0,60,0
	.stabs	"JCOEF:t(22,2)=(0,8)",128,0,86,0
	.stabs	"JOCTET:t(22,3)=(0,11)",128,0,97,0
	.stabs	"UINT8:t(22,4)=(0,11)",128,0,122,0
	.stabs	"UINT16:t(22,5)=(0,9)",128,0,134,0
	.stabs	"INT16:t(22,6)=(0,8)",128,0,142,0
	.stabs	"INT32:t(22,7)=(0,1)",128,0,148,0
	.stabs	"JDIMENSION:t(22,8)=(0,4)",128,0,158,0
	.stabn	162,0,0,0
	.stabs	"JSAMPROW:t(20,1)=(20,2)=*(22,1)",128,0,81,0
	.stabs	"JSAMPARRAY:t(20,3)=(20,4)=*(20,1)",128,0,82,0
	.stabs	"JSAMPIMAGE:t(20,5)=(20,6)=*(20,3)",128,0,83,0
	.stabs	"JBLOCK:t(20,7)=(20,8)=ar(5,8);0;63;(22,2)",128,0,85,0
	.stabs	"JBLOCKROW:t(20,9)=(20,10)=*(20,7)",128,0,86,0
	.stabs	"JBLOCKARRAY:t(20,11)=(20,12)=*(20,9)",128,0,87,0
	.stabs	"JBLOCKIMAGE:t(20,13)=(20,14)=*(20,11)",128,0,88,0
	.stabs	"JCOEFPTR:t(20,15)=(20,16)=*(22,2)",128,0,90,0
	.stabs	"JQUANT_TBL:t(20,17)=(20,18)=s132quantval:(20,19)=ar(5,8);0;63;(22,5),0,1024;sent_table:(21,1),1024,8;;",128,0,110,0
	.stabs	"JHUFF_TBL:t(20,20)=(20,21)=s276bits:(20,22)=ar(5,8);0;16;(22,4),0,136;huffval:(20,23)=ar(5,8);0;255;(22,4),136,2048;sent_table:(21,1),2184,8;;",128,0,126,0
	.stabs	"jpeg_component_info:t(20,24)=(20,25)=s80component_id:(0,1),0,32;component_index:(0,1),32,32;h_samp_factor:(0,1),64,32;v_samp_factor:(0,1),96,32;quant_tbl_no:(0,1),128,32;dc_tbl_no:(0,1),160,32;ac_tbl_no:(0,1),192,32;width_in_blocks:(22,8),224,32;height_in_blocks:(22,8),256,32;DCT_scaled_size:(0,1),288,32;downsampled_width:(22,8),320,32;downsampled_height:(22,8),352,32;component_needed:(21,1),384,8;MCU_width:(0,1),416,32;MCU_height:(0,1),448,32;MCU_blocks:(0,1),480,32;MCU_sample_width:(0,1),512,32;last_col_width:(0,1),544,32;last_row_height:(0,1),576,32;quant_table:(20,26)=*(20,17),608,32;;",128,0,194,0
	.stabs	"jpeg_saved_marker_ptr:t(20,27)=(20,28)=*(20,29)=xsjpeg_marker_struct:",128,0,202,0
	.stabs	"jpeg_marker_struct:T(20,29)=s20next:(20,27),0,32;marker:(22,4),32,8;original_length:(0,4),64,32;data_length:(0,4),96,32;data:(20,30)=*(22,3),128,32;;",128,0,0,0
	.stabs	" :T(20,31)=eJCS_UNKNOWN:0,JCS_GRAYSCALE:1,JCS_RGB:2,JCS_YCbCr:3,JCS_CMYK:4,JCS_YCCK:5,;",128,0,0,0
	.stabs	"J_COLOR_SPACE:t(20,32)=(20,31)",128,0,222,0
	.stabs	" :T(20,33)=eJDCT_ISLOW:0,JDCT_IFAST:1,JDCT_FLOAT:2,;",128,0,0,0
	.stabs	"J_DCT_METHOD:t(20,34)=(20,33)",128,0,230,0
	.stabs	" :T(20,35)=eJDITHER_NONE:0,JDITHER_ORDERED:1,JDITHER_FS:2,;",128,0,0,0
	.stabs	"J_DITHER_MODE:t(20,36)=(20,35)",128,0,245,0
	.stabs	"jpeg_common_struct:T(20,37)=s8is_decompressor:(21,1),0,8;global_state:(0,1),32,32;;",128,0,0,0
	.stabs	"j_common_ptr:t(20,38)=(20,39)=*(20,37)",128,0,269,0
	.stabs	"j_compress_ptr:t(20,40)=(20,41)=*(20,42)=xsjpeg_compress_struct:",128,0,270,0
	.stabs	"j_decompress_ptr:t(20,43)=(20,44)=*(20,45)=xsjpeg_decompress_struct:",128,0,271,0
	.stabs	"jpeg_compress_struct:T(20,42)=s184is_decompressor:(21,1),0,8;global_state:(0,1),32,32;dest:(20,46)=*(20,47)=xsjpeg_destination_mgr:,64,32;image_width:(22,8),96,32;image_height:(22,8),128,32;input_components:(0,1),160,32;in_color_space:(20,32),192,32;input_gamma:(0,13),256,64;data_precision:(0,1),320,32;num_components:(0,1),352,32;jpeg_color_space:(20,32),384,32;comp_info:(20,48)=*(20,24),416,32;quant_tbl_ptrs:(20,49)=ar(5,8);0;1;(20,26),448,64;dc_huff_tbl_ptrs:(20,50)=ar(5,8);0;1;(20,51)=*(20,20),512,64;ac_huff_tbl_ptrs:(20,50),576,64;write_JFIF_header:(21,1),640,8;JFIF_major_version:(22,4),648,8;JFIF_minor_version:(22,4),656,8;density_unit:(22,4),664,8;X_density:(22,5),672,16;Y_density:(22,5),688,16;max_h_samp_factor:(0,1),704,32;max_v_samp_factor:(0,1),736,32;total_iMCU_rows:(22,8),768,32;comps_in_scan:(0,1),800,32;cur_comp_info:(20,52)=ar(5,8);0;3;(20,48),832,128;MCUs_per_row:(22,8),960,32;MCU_rows_in_scan:(22,8),992,32;blocks_in_MCU:(0,1),1024,32;MCU_membership:(20,53)=ar(5,8);0;5;(0,1),1056,192;master:(20,54)=*(20,55)=xsjpeg_comp_master:,1248,32;coef:(20,56)=*(20,57)=xsjpeg_c_coef_controller:,1280,32;marker:(20,58)=*(20,59)=xsjpeg_marker_writer:,1312,32;fdct:(20,60)=*(20,61)=xsjpeg_forward_dct:,1344,32;entropy:(20,62)=*(20,63)=xsjpeg_entropy_encoder:,1376,32;script_space_size:(0,1),1408,32;;",128,0,0,0
	.stabs	"jpeg_decompress_struct:T(20,45)=s272is_decompressor:(21,1),0,8;global_state:(0,1),32,32;buffer:(20,64)=ar(5,8);0;2;(20,3),64,96;src:(20,65)=*(20,66)=xsjpeg_source_mgr:,160,32;image_width:(22,8),192,32;image_height:(22,8),224,32;num_components:(0,1),256,32;jpeg_color_space:(20,32),288,32;out_color_space:(20,32),320,32;scale_num:(0,4),352,32;scale_denom:(0,4),384,32;output_gamma:(0,13),448,64;raw_data_out:(21,1),512,8;desired_number_of_colors:(0,1),544,32;output_width:(22,8),576,32;output_height:(22,8),608,32;out_color_components:(0,1),640,32;output_components:(0,1),672,32;actual_number_of_colors:(0,1),704,32;colormap:(20,3),736,32;output_scanline:(22,8),768,32;input_scan_number:(0,1),800,32;input_iMCU_row:(22,8),832,32;output_scan_number:(0,1),864,32;output_iMCU_row:(22,8),896,32;quant_tbl_ptrs:(20,49),928,64;dc_huff_tbl_ptrs:(20,50),992,64;ac_huff_tbl_ptrs:(20,50),1056,64;data_precision:(0,1),1120,32;comp_info:(20,48),1152,32;saw_JFIF_marker:(21,1),1184,8;JFIF_major_version:(22,4),1192,8;JFIF_minor_version:(22,4),1200,8;density_unit:(22,4),1208,8;X_density:(22,5),1216,16;Y_density:(22,5),1232,16;saw_Adobe_marker:(21,1),1248,8;Adobe_transform:(22,4),1256,8;marker_list:(20,27),1280,32;max_h_samp_factor:(0,1),1312,32;max_v_samp_factor:(0,1),1344,32;min_DCT_scaled_size:(0,1),1376,32;total_iMCU_rows:(22,8),1408,32;comps_in_scan:(0,1),1440,32;cur_comp_info:(20,52),1472,128;MCUs_per_row:(22,8),1600,32;MCU_rows_in_scan:(22,8),1632,32;blocks_in_MCU:(0,1),1664,32;MCU_membership:(20,53),1696,192;Ss:(0,1),1888,32;Se:(0,1),1920,32;Ah:(0,1),1952,32;Al:(0,1),1984,32;unread_marker:(0,1),2016,32;coef:(20,67)=*(20,68)=xsjpeg_d_coef_controller:,2048,32;inputctl:(20,69)=*(20,70)=xsjpeg_input_controller:,2080,32;marker:(20,71)=*(20,72)=xsjpeg_marker_reader:,2112,32;entropy:(20,73)=*(20,74)=xsjpeg_entropy_decoder:,2144,32;;",128,0,0,0
	.stabs	"jpeg_error_mgr:T(20,75)=s8msg_code:(0,1),0,32;error_cnt:(0,1),32,32;;",128,0,0,0
	.stabs	"jpeg_destination_mgr:T(20,47)=s8next_output_byte:(20,30),0,32;free_in_buffer:(0,4),32,32;;",128,0,0,0
	.stabs	"jpeg_source_mgr:T(20,66)=s8next_input_byte:(20,76)=*(20,77)=k(22,3),0,32;bytes_in_buffer:(0,4),32,32;;",128,0,0,0
	.stabs	"jvirt_sarray_ptr:t(20,78)=(20,79)=*(20,80)=xsjvirt_sarray_control:",128,0,759,0
	.stabs	"jvirt_barray_ptr:t(20,81)=(20,82)=*(20,83)=xsjvirt_barray_control:",128,0,760,0
	.stabs	"jpeg_marker_parser_method:t(20,84)=(20,85)=*(20,86)=f(21,1)",128,0,781,0
	.stabn	162,0,0,0
	.stabs	"interface/usb.h",130,0,0,0
	.stabs	"EndpointDescriptorObj:t(23,1)=(23,2)=s24num:(0,1),0,32;enabled:(0,1),32,32;type:(0,1),64,32;maxpacketsize:(0,1),96,32;pid:(0,1),128,32;dir:(0,1),160,32;;",128,0,427,0
	.stabs	"IntfDescriptorObj:t(23,3)=(23,4)=s12Class:(0,1),0,32;SubClass:(0,1),32,32;Protocol:(0,1),64,32;;",128,0,433,0
	.stabs	" :T(23,5)=eMSD_BOT:0,MSD_CBI:1,;",128,0,0,0
	.stabs	"MsdDeviceType:t(23,6)=(23,5)",128,0,438,0
	.stabs	" :T(23,7)=eDISCONNECTED:0,FS_CONNECT:1,HS_CONNECT:2,LS_CONNECT:3,SUSPENDED:4,RESUMING:5,;",128,0,0,0
	.stabs	"UsbConnectionType:t(23,8)=(23,7)",128,0,447,0
	.stabs	"tUsbHostObj:t(23,9)=(23,10)=s164VID:(0,1),0,32;PID:(0,1),32,32;DevClass:(0,1),64,32;Intf:(23,3),96,96;Address:(0,1),192,32;NumEp:(0,1),224,32;enumerated:(0,1),256,32;resume_complete:(0,1),288,32;suspended:(0,1),320,32;configured:(0,1),352,32;OtgSupport:(0,1),384,32;InterfaceType:(0,1),416,32;EP0:(23,1),448,192;EPIIn:(23,1),640,192;EPBIn:(23,1),832,192;EPBOut:(23,1),1024,192;EPcsw:(23,11)=*(23,1),1216,32;connection:(23,8),1248,32;MsdType:(23,6),1280,32;;",128,0,469,0
	.stabs	" :T(23,12)=eDEFAULT:0,B_IDLE:1,B_SRP_INIT:2,B_PERIPHERAL:3,B_WAIT_ACON:4,B_HOST:5,A_IDLE:6,A_WAIT_VRISE:7,A_WAIT_BCON:8,A_HOST:9,A_HOST_REG:10,A_SUSPEND:11,A_RESUME:12,A_PERIPHERAL:13,A_WAIT_VFALL:14,A_VBUS_ERR:15,;",128,0,0,0
	.stabs	"tOtgStateType:t(23,13)=(23,12)",128,0,488,0
	.stabs	" :T(23,14)=eDEV_UNCONFIGURED:0,DEV_ADDRESSED:1,DEV_CONFIGURED:2,DEV_SUSPENDED:3,DEV_RESUME:4,HST_UNCONNECTED:5,HST_CONNECTED:6,;",128,0,0,0
	.stabs	"tUsbStateType:t(23,15)=(23,14)",128,0,498,0
	.stabs	"tOtgInfoObj:t(23,16)=(23,17)=s24SrpSupport:(0,1),0,32;HnpSupport:(0,1),32,32;hnp_enabled:(0,1),64,32;b_hnp_enable:(0,1),96,32;a_hnp_support:(0,1),128,32;a_alt_hnp_support:(0,1),160,32;;",128,0,507,0
	.stabs	"tUsbDeviceObj:t(23,18)=(23,19)=s20set_halt:(0,1),0,32;Device_Config_Value:(0,1),32,32;ep0_max_pl:(0,1),64,32;max_pl:(0,1),96,32;set_remote_wakeup:(0,1),128,32;;",128,0,515,0
	.stabs	"tUsbSystemObj:t(23,20)=(23,21)=s240DeviceState:(23,15),0,32;MainState:(23,13),32,32;otg_support:(0,1),64,32;is_host:(0,1),96,32;RegularHost:(0,1),128,32;gpout_shadow:(0,1),160,32;rxBuffer:(0,4),192,32;txBuffer:(0,4),224,32;OtgConfig:(23,16),256,192;Host:(23,9),448,1312;Dev:(23,18),1760,160;;",128,0,529,0
	.stabn	162,0,0,0
	.stabs	"interface/commandProcess.h",130,0,0,0
	.stabs	" :T(24,1)=eUSB_COMMAND_FIRMWARE_VERSION_CHECK_FAIL:-9,USB_COMMAND_FIRMWARE_UPLOAD_FAIL:-8,USB_COMMAND_FIRMWARE_SET_LENGTH_FAIL:-7,USB_COMMAND_FIRMWARE_SDRAM_WRITE_FAIL:-6,USB_COMMAND_VIDEOAPISET_FAIL:-5,USB_COMMAND_STREAM_NOT_READY:-4,USB_COMMAND_I2C_FAIL:-3,USB_COMMAND_UNDEFINED_COMMAND:-2,USB_COMMAND_FAIL:-1,USB_COMMAND_SUCCESS:0,;",128,0,0,0
	.stabs	" :T(24,2)=eINTERNAL_REGISTER_READ:16,INTERNAL_REGISTER_WRITE:17,HIF_REGISTER_READ:32,HIF_REGISTER_WRITE:33,HIF_REGISTER_BIT_SET:34,HIF_REGISTER_BIT_RESET:35,I2C_MASTER_READ:48,I2C_MASTER_WRITE:49,STREAM_GET_JPEG_LENGTH:64,STREAM_GET_H264_LENGTH:65,STREAM_GET_PCMIN_LENGTH:66,COMMAND_VIDEO_START:80,COMMAND_VIDEO_STOP:81,COMMAND_AUDIO_START:82,COMMAND_AUDIO_STOP:83,COMMAND_FIRMWARE_SDRAM_WRITE:84,COMMAND_FIRMWARE_SET_LENGTH:85,COMMAND_FIRMWARE_UPLOAD:86,COMMAND_FIRMWARE_VERSION_CHECK:87,VIDEO_API_SET:96,;",128,0,0,0
	.stabs	"VIDEO_STREAM_BUF:t(24,3)=(24,4)=s24len:(24,5)=ar(5,8);0;1;(24,6)=B(0,1),0,64;address:(24,5),64,64;full:(24,7)=ar(5,8);0;1;(24,8)=B(0,2),128,16;set_idx:(24,8),144,8;get_idx:(24,8),152,8;count:(24,8),160,8;;",128,0,55,0
	.stabs	"PCM_STREAM_BUF:t(24,9)=(24,10)=s96len:(24,11)=ar(5,8);0;9;(24,6),0,320;address:(24,11),320,320;full:(24,12)=ar(5,8);0;9;(24,8),640,80;set_idx:(24,8),720,8;get_idx:(24,8),728,8;count:(24,8),736,8;;",128,0,66,0
	.stabn	162,0,0,0
	.stabs	"interface/sensor_set.h",130,0,0,0
	.stabs	" :T(25,1)=eWRONG_LEVEL:-2,VIDEOAPISET_FAIL:-1,VIDEOAPISET_SUCCESS:0,;",128,0,0,0
	.stabs	" :T(25,2)=ePROP_CONTRAST:0,PROP_BRIGHTNESS:1,PROP_SATURATION:2,PROP_SHARPNESS:3,PROP_HUE:4,PROP_GAMMA:5,PROP_WHITE_BALANCE:6,PROP_EXPOSURE:7,PROP_POWER_LINE_FREQ:8,;",128,0,0,0
	.stabs	"VIDEO_PROP_TYPE:t(25,3)=(25,2)",128,0,23,0
	.stabs	" :T(25,4)=ePROP_LEVEL_0:0,PROP_LEVEL_1:1,PROP_LEVEL_2:2,PROP_LEVEL_3:3,PROP_LEVEL_4:4,PROP_LEVEL_5:5,PROP_LEVEL_6:6,PROP_LEVEL_7:7,PROP_LEVEL_8:8,PROP_LEVEL_9:9,PROP_LEVEL_10:10,PROP_AUTO_ON:11,PROP_AUTO_OFF:12,PROP_DEFAULT:13,;",128,0,0,0
	.stabs	"VIDEO_PROP_LEVEL:t(25,5)=(25,4)",128,0,41,0
	.stabn	162,0,0,0
	.stabs	"interface/i2c_operation.h",130,0,0,0
	.stabs	" :T(26,1)=eI2C_NACK:-2,I2C_TIMEOUT:-1,I2C_SUCCESS:0,;",128,0,0,0
	.stabn	162,0,0,0
.proc _set_img_size_to_dmac
	.stabs	"set_img_size_to_dmac:F(0,15)",36,0,136,_set_img_size_to_dmac
	.stabs	"width:P(0,1)",64,0,136,3
	.stabs	"height:P(0,1)",64,0,136,4
	.global _set_img_size_to_dmac
	.type	_set_img_size_to_dmac, @function
_set_img_size_to_dmac:
	.stabd	46,0,0
	.stabn	68,0,136,.LM0-.LFBB1
.LM0:
.LFBB1:
	.stabn	68,0,137,.LM1-.LFBB1
.LM1:
	b.slli  	r4,r4,4
	b.andi  	r4,r4,65280
	b.srai  	r3,r3,4
	b.andi  	r3,r3,255
	b.or    	r4,r4,r3
	bw.sw    	-2147418104(r0),r4	   # movsi store
	.stabn	68,0,138,.LM2-.LFBB1
.LM2:
	bw.sw    	-2147418100(r0),r4	   # movsi store
	.stabn	68,0,139,.LM3-.LFBB1
.LM3:
	bw.sw    	-2147352432(r0),r4	   # movsi store
	.stabn	68,0,140,.LM4-.LFBB1
.LM4:
	b.jr    	r9
	.size	_set_img_size_to_dmac, .-_set_img_size_to_dmac
.Lscope1:
	.stabs	"",36,0,0,.Lscope1-.LFBB1
	.stabd	78,0,0
.proc _free_img
	.stabs	"free_img:F(0,15)",36,0,953,_free_img
	.global _free_img
	.type	_free_img, @function
_free_img:
	.stabd	46,0,0
	.stabn	68,0,953,.LM5-.LFBB2
.LM5:
.LFBB2:
	.stabn	68,0,955,.LM6-.LFBB2
.LM6:
	b.jr    	r9
	.size	_free_img, .-_free_img
.Lscope2:
	.stabs	"",36,0,0,.Lscope2-.LFBB2
	.stabd	78,0,0
.proc _simpleRateControl
	.stabs	"simpleRateControl:F(0,15)",36,0,1205,_simpleRateControl
	.global _simpleRateControl
	.type	_simpleRateControl, @function
_simpleRateControl:
	.stabd	46,0,0
	.stabn	68,0,1205,.LM7-.LFBB3
.LM7:
.LFBB3:
	.stabn	68,0,1212,.LM8-.LFBB3
.LM8:
	bw.lwz   	r6,-536735480(r0)	    # movsi load
	bw.lwz   	r7,-536735476(r0)	    # movsi load
	b.slli  	r7,r7,8
	b.andi  	r7,r7,65280
	b.andi  	r6,r6,255
	b.or    	r7,r7,r6
	b.slli  	r7,r7,10
	.stabn	68,0,1213,.LM9-.LFBB3
.LM9:
	bw.lwz   	r6,(_max_bit_rate_value)(r0)	    # movsi load
	b.sfgts  	r7,r6
	b.cmov  	r6,r6,r7
	bw.sw    	(_target_bit_rate)(r0),r6	   # movsi store
	.stabn	68,0,1214,.LM10-.LFBB3
.LM10:
	bw.lwz   	r24,-536735472(r0)	    # movsi load
	bw.sw    	(_target_frame_rate)(r0),r24	   # movsi store
	.stabn	68,0,1216,.LM11-.LFBB3
.LM11:
	b.mov  	r4,r6	     # movsi
	bw.lwz   	r7,(_prev_target_bit_rate.4313)(r0)	    # movsi load
	b.beq   	r6,r7,.L8
	.stabn	68,0,1219,.LM12-.LFBB3
.LM12:
	b.ori  	r6,r0,1024000	  # movsi imm i
	b.bles   	r4,r6,.L10
	.stabn	68,0,1221,.LM13-.LFBB3
.LM13:
	b.ori  	r7,r0,29	  # movsi imm J
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	bw.sw    	(_input)(r0),r7	   # movsi store
	b.j    	.L8
.L10:
	.stabn	68,0,1223,.LM14-.LFBB3
.LM14:
	b.ori  	r7,r0,921600	  # movsi imm i
	b.bles   	r4,r7,.L12
	.stabn	68,0,1225,.LM15-.LFBB3
.LM15:
	b.ori  	r7,r0,30	  # movsi imm J
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	bw.sw    	(_input)(r0),r7	   # movsi store
	b.j    	.L8
.L12:
	.stabn	68,0,1227,.LM16-.LFBB3
.LM16:
	b.ori  	r6,r0,819200	  # movsi imm i
	b.bles   	r4,r6,.L14
	.stabn	68,0,1229,.LM17-.LFBB3
.LM17:
	b.ori  	r7,r0,32	  # movsi imm J
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	bw.sw    	(_input)(r0),r7	   # movsi store
	b.j    	.L8
.L14:
	.stabn	68,0,1231,.LM18-.LFBB3
.LM18:
	b.ori  	r7,r0,716800	  # movsi imm i
	b.bles   	r4,r7,.L16
	.stabn	68,0,1233,.LM19-.LFBB3
.LM19:
	b.ori  	r7,r0,34	  # movsi imm J
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	bw.sw    	(_input)(r0),r7	   # movsi store
	b.j    	.L8
.L16:
	.stabn	68,0,1235,.LM20-.LFBB3
.LM20:
	b.ori  	r6,r0,614400	  # movsi imm i
	b.bles   	r4,r6,.L18
	.stabn	68,0,1236,.LM21-.LFBB3
.LM21:
	b.ori  	r7,r0,36	  # movsi imm J
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	bw.sw    	(_input)(r0),r7	   # movsi store
	b.j    	.L8
.L18:
	.stabn	68,0,1237,.LM22-.LFBB3
.LM22:
	b.ori  	r7,r0,512000	  # movsi imm i
	b.bles   	r4,r7,.L20
	.stabn	68,0,1238,.LM23-.LFBB3
.LM23:
	b.ori  	r7,r0,39	  # movsi imm J
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	bw.sw    	(_input)(r0),r7	   # movsi store
	b.j    	.L8
.L20:
	.stabn	68,0,1239,.LM24-.LFBB3
.LM24:
	b.ori  	r6,r0,409600	  # movsi imm i
	b.bles   	r4,r6,.L22
	.stabn	68,0,1240,.LM25-.LFBB3
.LM25:
	b.ori  	r7,r0,41	  # movsi imm J
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	bw.sw    	(_input)(r0),r7	   # movsi store
	b.j    	.L8
.L22:
	.stabn	68,0,1241,.LM26-.LFBB3
.LM26:
	b.ori  	r7,r0,307200	  # movsi imm i
	b.bles   	r4,r7,.L24
	.stabn	68,0,1242,.LM27-.LFBB3
.LM27:
	b.ori  	r7,r0,43	  # movsi imm J
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	bw.sw    	(_input)(r0),r7	   # movsi store
	b.j    	.L8
.L24:
	.stabn	68,0,1243,.LM28-.LFBB3
.LM28:
	b.ori  	r6,r0,204800	  # movsi imm i
	b.bles   	r4,r6,.L26
	.stabn	68,0,1244,.LM29-.LFBB3
.LM29:
	b.ori  	r7,r0,45	  # movsi imm J
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	bw.sw    	(_input)(r0),r7	   # movsi store
	b.j    	.L8
.L26:
	.stabn	68,0,1245,.LM30-.LFBB3
.LM30:
	b.ori  	r7,r0,102400	  # movsi imm i
	b.bles   	r4,r7,.L28
	.stabn	68,0,1246,.LM31-.LFBB3
.LM31:
	b.ori  	r7,r0,47	  # movsi imm J
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	bw.sw    	(_input)(r0),r7	   # movsi store
	b.j    	.L8
.L28:
	.stabn	68,0,1248,.LM32-.LFBB3
.LM32:
	b.ori  	r7,r0,49	  # movsi imm J
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	bw.sw    	(_input)(r0),r7	   # movsi store
.L8:
	.stabn	68,0,1252,.LM33-.LFBB3
.LM33:
	b.div   	r7,r4,r24
	b.addi  	r5,r7,7
	b.sfltsi 	r7,0
	b.cmov  	r5,r5,r7
	b.srai  	r5,r5,3
	bw.sw    	(_target_one_frame_size_byte)(r0),r5	   # movsi store
	.stabn	68,0,1253,.LM34-.LFBB3
.LM34:
	bw.lwz   	r7,-536735472(r0)	    # movsi load
	b.div   	r7,r4,r7
	b.addi  	r6,r7,7
	b.sfltsi 	r7,0
	b.cmov  	r6,r6,r7
	b.srai  	r6,r6,3
	bw.sw    	(_orig_target_one_frame_size_byte)(r0),r6	   # movsi store
	.stabn	68,0,1255,.LM35-.LFBB3
.LM35:
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.slli  	r7,r7,2
	b.addi  	r7,r7,_h264DualStreamBuf
	b.lwz   	r7,0(r7)	    # movsi load
	.stabn	68,0,1258,.LM36-.LFBB3
.LM36:
	b.sub   	r23,r7,r5
	bw.sw    	(_diff_one_frame_size_byte)(r0),r23	   # movsi store
	.stabn	68,0,1259,.LM37-.LFBB3
.LM37:
	bw.lwz   	r25,(_diff_one_frame_size_byte_prev1)(r0)	    # movsi load
	bw.lwz   	r27,(_diff_one_frame_size_byte_prev2)(r0)	    # movsi load
	b.add   	r6,r27,r25
	b.srai  	r5,r6,1
	bw.sw    	(_diff_two_frame_size_byte)(r0),r5	   # movsi store
	.stabn	68,0,1261,.LM38-.LFBB3
.LM38:
	bw.lwz   	r26,(_diff_one_frame_size_byte_prev3)(r0)	    # movsi load
	bw.lwz   	r7,(_diff_one_frame_size_byte_prev4)(r0)	    # movsi load
	b.add   	r7,r7,r26
	b.add   	r7,r7,r6
	b.srai  	r7,r7,2
	bw.sw    	(_diff_four_frame_size_byte)(r0),r7	   # movsi store
	.stabn	68,0,1266,.LM39-.LFBB3
.LM39:
	b.addi 	r6,r0,-2048	  # movsi imm I
	b.bges   	r23,r6,.L30
	.stabn	68,0,1276,.LM40-.LFBB3
.LM40:
	b.addi 	r6,r0,-4096	  # movsi imm I
	b.bges   	r7,r6,.L32
	.stabn	68,0,1277,.LM41-.LFBB3
.LM41:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-6
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L32:
	.stabn	68,0,1278,.LM42-.LFBB3
.LM42:
	b.addi 	r6,r0,-2048	  # movsi imm I
	b.bges   	r7,r6,.L35
	.stabn	68,0,1279,.LM43-.LFBB3
.LM43:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-5
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L35:
	.stabn	68,0,1280,.LM44-.LFBB3
.LM44:
	b.addi 	r6,r0,-1024	  # movsi imm I
	b.bges   	r7,r6,.L37
	.stabn	68,0,1281,.LM45-.LFBB3
.LM45:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-4
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L37:
	.stabn	68,0,1283,.LM46-.LFBB3
.LM46:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-3
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L30:
	.stabn	68,0,1285,.LM47-.LFBB3
.LM47:
	b.addi 	r6,r0,2048	  # movsi imm I
	b.bles   	r23,r6,.L39
	.stabn	68,0,1295,.LM48-.LFBB3
.LM48:
	b.addi 	r6,r0,4096	  # movsi imm I
	b.bles   	r7,r6,.L41
	.stabn	68,0,1296,.LM49-.LFBB3
.LM49:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,6
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L41:
	.stabn	68,0,1297,.LM50-.LFBB3
.LM50:
	b.addi 	r6,r0,2048	  # movsi imm I
	b.bles   	r7,r6,.L43
	.stabn	68,0,1298,.LM51-.LFBB3
.LM51:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,5
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L43:
	.stabn	68,0,1299,.LM52-.LFBB3
.LM52:
	b.addi 	r6,r0,1024	  # movsi imm I
	b.bles   	r7,r6,.L45
	.stabn	68,0,1300,.LM53-.LFBB3
.LM53:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,4
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L45:
	.stabn	68,0,1302,.LM54-.LFBB3
.LM54:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,3
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L39:
	.stabn	68,0,1338,.LM55-.LFBB3
.LM55:
	b.addi 	r6,r0,-1024	  # movsi imm I
	b.bges   	r23,r6,.L47
	.stabn	68,0,1342,.LM56-.LFBB3
.LM56:
	b.addi 	r6,r0,-4096	  # movsi imm I
	b.bges   	r7,r6,.L49
	.stabn	68,0,1343,.LM57-.LFBB3
.LM57:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-6
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L49:
	.stabn	68,0,1344,.LM58-.LFBB3
.LM58:
	b.addi 	r6,r0,-2048	  # movsi imm I
	b.bges   	r7,r6,.L51
	.stabn	68,0,1345,.LM59-.LFBB3
.LM59:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-5
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L51:
	.stabn	68,0,1346,.LM60-.LFBB3
.LM60:
	b.addi 	r6,r0,-1024	  # movsi imm I
	b.bges   	r7,r6,.L53
	.stabn	68,0,1347,.LM61-.LFBB3
.LM61:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-4
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L53:
	.stabn	68,0,1348,.LM62-.LFBB3
.LM62:
	b.addi 	r6,r0,-512	  # movsi imm I
	b.bges   	r7,r6,.L55
	.stabn	68,0,1349,.LM63-.LFBB3
.LM63:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-3
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L55:
	.stabn	68,0,1350,.LM64-.LFBB3
.LM64:
	b.bgesi  	r7,0,.L57
	.stabn	68,0,1351,.LM65-.LFBB3
.LM65:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-2
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L57:
	.stabn	68,0,1352,.LM66-.LFBB3
.LM66:
	b.addi 	r6,r0,512	  # movsi imm I
	b.bgts   	r7,r6,.L34
	.stabn	68,0,1355,.LM67-.LFBB3
.LM67:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L47:
	.stabn	68,0,1357,.LM68-.LFBB3
.LM68:
	b.addi 	r6,r0,1024	  # movsi imm I
	b.bles   	r23,r6,.L61
	.stabn	68,0,1363,.LM69-.LFBB3
.LM69:
	b.addi 	r6,r0,4096	  # movsi imm I
	b.bles   	r7,r6,.L63
	.stabn	68,0,1364,.LM70-.LFBB3
.LM70:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,6
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L63:
	.stabn	68,0,1365,.LM71-.LFBB3
.LM71:
	b.addi 	r6,r0,2048	  # movsi imm I
	b.bles   	r7,r6,.L65
	.stabn	68,0,1366,.LM72-.LFBB3
.LM72:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,5
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L65:
	.stabn	68,0,1367,.LM73-.LFBB3
.LM73:
	b.addi 	r6,r0,1024	  # movsi imm I
	b.bles   	r7,r6,.L67
	.stabn	68,0,1368,.LM74-.LFBB3
.LM74:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,4
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L67:
	.stabn	68,0,1369,.LM75-.LFBB3
.LM75:
	b.addi 	r6,r0,512	  # movsi imm I
	b.bles   	r7,r6,.L69
	.stabn	68,0,1370,.LM76-.LFBB3
.LM76:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,3
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L69:
	.stabn	68,0,1371,.LM77-.LFBB3
.LM77:
	b.blesi  	r7,0,.L71
	.stabn	68,0,1372,.LM78-.LFBB3
.LM78:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,2
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L71:
	.stabn	68,0,1373,.LM79-.LFBB3
.LM79:
	b.addi 	r6,r0,-512	  # movsi imm I
	b.blts   	r7,r6,.L34
	.stabn	68,0,1376,.LM80-.LFBB3
.LM80:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L61:
	.stabn	68,0,1398,.LM81-.LFBB3
.LM81:
	b.addi 	r6,r0,-512	  # movsi imm I
	b.bges   	r23,r6,.L75
	.stabn	68,0,1400,.LM82-.LFBB3
.LM82:
	b.addi 	r6,r0,-4096	  # movsi imm I
	b.bges   	r7,r6,.L77
	.stabn	68,0,1401,.LM83-.LFBB3
.LM83:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-4
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L77:
	.stabn	68,0,1402,.LM84-.LFBB3
.LM84:
	b.addi 	r6,r0,-2048	  # movsi imm I
	b.bges   	r7,r6,.L79
	.stabn	68,0,1403,.LM85-.LFBB3
.LM85:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-3
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L79:
	.stabn	68,0,1404,.LM86-.LFBB3
.LM86:
	b.addi 	r6,r0,-1024	  # movsi imm I
	b.bges   	r7,r6,.L81
	.stabn	68,0,1405,.LM87-.LFBB3
.LM87:
	b.addi 	r6,r0,768	  # movsi imm I
	b.bles   	r7,r6,.L83
	.stabn	68,0,1406,.LM88-.LFBB3
.LM88:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-2
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L83:
	.stabn	68,0,1408,.LM89-.LFBB3
.LM89:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-3
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L81:
	.stabn	68,0,1409,.LM90-.LFBB3
.LM90:
	b.addi 	r6,r0,-378	  # movsi imm I
	b.bges   	r7,r6,.L85
	.stabn	68,0,1410,.LM91-.LFBB3
.LM91:
	b.addi 	r6,r0,378	  # movsi imm I
	b.bles   	r7,r6,.L87
	.stabn	68,0,1411,.LM92-.LFBB3
.LM92:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L87:
	.stabn	68,0,1412,.LM93-.LFBB3
.LM93:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-2
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L85:
	.stabn	68,0,1413,.LM94-.LFBB3
.LM94:
	b.addi 	r6,r0,378	  # movsi imm I
	b.bgts   	r7,r6,.L34
	.stabn	68,0,1419,.LM95-.LFBB3
.LM95:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L75:
	.stabn	68,0,1421,.LM96-.LFBB3
.LM96:
	b.addi 	r6,r0,512	  # movsi imm I
	b.bles   	r23,r6,.L91
	.stabn	68,0,1423,.LM97-.LFBB3
.LM97:
	b.addi 	r6,r0,4096	  # movsi imm I
	b.bles   	r7,r6,.L93
	.stabn	68,0,1424,.LM98-.LFBB3
.LM98:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,4
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L95
.L93:
	.stabn	68,0,1425,.LM99-.LFBB3
.LM99:
	b.addi 	r6,r0,2048	  # movsi imm I
	b.bles   	r7,r6,.L96
	.stabn	68,0,1426,.LM100-.LFBB3
.LM100:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,3
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L95
.L96:
	.stabn	68,0,1427,.LM101-.LFBB3
.LM101:
	b.addi 	r6,r0,1024	  # movsi imm I
	b.bles   	r7,r6,.L98
	.stabn	68,0,1428,.LM102-.LFBB3
.LM102:
	b.addi 	r6,r0,-768	  # movsi imm I
	b.bges   	r7,r6,.L100
	.stabn	68,0,1429,.LM103-.LFBB3
.LM103:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,2
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L95
.L100:
	.stabn	68,0,1431,.LM104-.LFBB3
.LM104:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,3
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L95
.L98:
	.stabn	68,0,1432,.LM105-.LFBB3
.LM105:
	b.addi 	r6,r0,378	  # movsi imm I
	b.bles   	r7,r6,.L95
	.stabn	68,0,1433,.LM106-.LFBB3
.LM106:
	b.addi 	r6,r0,-378	  # movsi imm I
	b.bges   	r7,r6,.L104
	.stabn	68,0,1434,.LM107-.LFBB3
.LM107:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L95
.L104:
	.stabn	68,0,1436,.LM108-.LFBB3
.LM108:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,2
	bw.sw    	(_input+4)(r0),r7	   # movsi store
.L95:
	.stabn	68,0,1443,.LM109-.LFBB3
.LM109:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L91:
	.stabn	68,0,1465,.LM110-.LFBB3
.LM110:
	b.addi 	r6,r0,-378	  # movsi imm I
	b.bges   	r23,r6,.L108
	.stabn	68,0,1467,.LM111-.LFBB3
.LM111:
	b.addi 	r6,r0,-2048	  # movsi imm I
	b.bges   	r7,r6,.L110
	.stabn	68,0,1468,.LM112-.LFBB3
.LM112:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-4
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L110:
	.stabn	68,0,1469,.LM113-.LFBB3
.LM113:
	b.addi 	r6,r0,-1024	  # movsi imm I
	b.bges   	r7,r6,.L112
	.stabn	68,0,1470,.LM114-.LFBB3
.LM114:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-3
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L112:
	.stabn	68,0,1471,.LM115-.LFBB3
.LM115:
	b.addi 	r6,r0,-512	  # movsi imm I
	b.bges   	r7,r6,.L114
	.stabn	68,0,1472,.LM116-.LFBB3
.LM116:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-2
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L114:
	.stabn	68,0,1473,.LM117-.LFBB3
.LM117:
	b.bgesi  	r7,0,.L34
	.stabn	68,0,1474,.LM118-.LFBB3
.LM118:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L108:
	.stabn	68,0,1478,.LM119-.LFBB3
.LM119:
	b.addi 	r6,r0,378	  # movsi imm I
	b.bles   	r23,r6,.L118
	.stabn	68,0,1480,.LM120-.LFBB3
.LM120:
	b.addi 	r6,r0,2048	  # movsi imm I
	b.bles   	r7,r6,.L120
	.stabn	68,0,1481,.LM121-.LFBB3
.LM121:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,4
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L120:
	.stabn	68,0,1482,.LM122-.LFBB3
.LM122:
	b.addi 	r6,r0,1024	  # movsi imm I
	b.bles   	r7,r6,.L122
	.stabn	68,0,1483,.LM123-.LFBB3
.LM123:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,3
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L122:
	.stabn	68,0,1484,.LM124-.LFBB3
.LM124:
	b.addi 	r6,r0,512	  # movsi imm I
	b.bles   	r7,r6,.L124
	.stabn	68,0,1485,.LM125-.LFBB3
.LM125:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,2
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L124:
	.stabn	68,0,1486,.LM126-.LFBB3
.LM126:
	b.blesi  	r7,0,.L34
	.stabn	68,0,1487,.LM127-.LFBB3
.LM127:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L118:
	.stabn	68,0,1492,.LM128-.LFBB3
.LM128:
	b.addi 	r6,r0,-256	  # movsi imm I
	b.bges   	r23,r6,.L128
	.stabn	68,0,1493,.LM129-.LFBB3
.LM129:
	b.addi 	r6,r0,-378	  # movsi imm I
	b.blts   	r7,r6,.L130
	b.addi 	r7,r0,-256	  # movsi imm I
	b.blts   	r5,r7,.L130
	b.bges   	r25,r7,.L34
.L130:
	.stabn	68,0,1496,.LM130-.LFBB3
.LM130:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L34
.L128:
	.stabn	68,0,1500,.LM131-.LFBB3
.LM131:
	b.addi 	r6,r0,256	  # movsi imm I
	b.bles   	r23,r6,.L34
	.stabn	68,0,1502,.LM132-.LFBB3
.LM132:
	b.addi 	r6,r0,378	  # movsi imm I
	b.bgts   	r7,r6,.L136
	b.addi 	r7,r0,256	  # movsi imm I
	b.bgts   	r5,r7,.L136
	b.bles   	r25,r7,.L34
.L136:
	.stabn	68,0,1505,.LM133-.LFBB3
.LM133:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	bw.sw    	(_input+4)(r0),r7	   # movsi store
.L34:
	.stabn	68,0,1513,.LM134-.LFBB3
.LM134:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.bgtsi  	r7,7,.L140
	.stabn	68,0,1514,.LM135-.LFBB3
.LM135:
	b.ori  	r7,r0,8	  # movsi imm J
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L142
.L140:
	.stabn	68,0,1515,.LM136-.LFBB3
.LM136:
	b.ori  	r6,r0,51	  # movsi imm J
	b.bles   	r7,r6,.L142
	.stabn	68,0,1516,.LM137-.LFBB3
.LM137:
	b.ori  	r7,r0,51	  # movsi imm J
	bw.sw    	(_input+4)(r0),r7	   # movsi store
.L142:
	.stabn	68,0,1518,.LM138-.LFBB3
.LM138:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	bw.sw    	(_input)(r0),r7	   # movsi store
	.stabn	68,0,1527,.LM139-.LFBB3
.LM139:
	bw.sw    	(_prev_target_bit_rate.4313)(r0),r4	   # movsi store
	.stabn	68,0,1528,.LM140-.LFBB3
.LM140:
	bw.sw    	(_prev_target_frame_rate.4314)(r0),r24	   # movsi store
	.stabn	68,0,1530,.LM141-.LFBB3
.LM141:
	bw.sw    	(_diff_one_frame_size_byte_prev4)(r0),r26	   # movsi store
	.stabn	68,0,1531,.LM142-.LFBB3
.LM142:
	bw.sw    	(_diff_one_frame_size_byte_prev3)(r0),r27	   # movsi store
	.stabn	68,0,1532,.LM143-.LFBB3
.LM143:
	bw.sw    	(_diff_one_frame_size_byte_prev2)(r0),r25	   # movsi store
	.stabn	68,0,1533,.LM144-.LFBB3
.LM144:
	bw.sw    	(_diff_one_frame_size_byte_prev1)(r0),r23	   # movsi store
	.stabn	68,0,1543,.LM145-.LFBB3
.LM145:
	b.jr    	r9
	.size	_simpleRateControl, .-_simpleRateControl
	.stabs	"result_one_frame_size_byte:r(0,1)",64,0,1207,7
	.stabs	"prev_target_bit_rate:V(0,1)",38,0,1209,_prev_target_bit_rate.4313
	.stabs	"prev_target_frame_rate:V(0,1)",38,0,1210,_prev_target_frame_rate.4314
	.stabn	192,0,0,.LFBB3-.LFBB3
	.stabn	224,0,0,.Lscope3-.LFBB3
.Lscope3:
	.stabs	"",36,0,0,.Lscope3-.LFBB3
	.stabd	78,0,0
.proc _AlignOffsetAddr
	.stabs	"AlignOffsetAddr:F(0,1)",36,0,1675,_AlignOffsetAddr
	.stabs	"offset:P(0,1)",64,0,1674,3
	.stabs	"align:P(0,1)",64,0,1674,7
	.global _AlignOffsetAddr
	.type	_AlignOffsetAddr, @function
_AlignOffsetAddr:
	.stabd	46,0,0
	.stabn	68,0,1675,.LM146-.LFBB4
.LM146:
.LFBB4:
	b.mov  	r7,r4	     # movsi
	.stabn	68,0,1678,.LM147-.LFBB4
.LM147:
	b.mod  	r6,r3,r4
	b.mov  	r4,r3	     # movsi
	b.beqi  	r6,0,.L148
	.stabn	68,0,1679,.LM148-.LFBB4
.LM148:
	b.add   	r7,r7,r3
	b.sub   	r4,r7,r6
.L148:
	.stabn	68,0,1685,.LM149-.LFBB4
.LM149:
	b.mov  	r3,r4	     # movsi
	b.jr    	r9
	.size	_AlignOffsetAddr, .-_AlignOffsetAddr
	.stabs	"aligned_addr:r(0,1)",64,0,1676,4
	.stabn	192,0,0,.LFBB4-.LFBB4
	.stabn	224,0,0,.Lscope4-.LFBB4
.Lscope4:
	.stabs	"",36,0,0,.Lscope4-.LFBB4
	.stabd	78,0,0
.proc _SetupForDoubleBuffer
	.stabs	"SetupForDoubleBuffer:F(0,15)",36,0,1688,_SetupForDoubleBuffer
	.stabs	"frame_sel:P(0,1)",64,0,1687,15
	.stabs	"double_buffer_en:P(0,1)",64,0,1687,4
	.stabs	"width_offset:P(0,1)",64,0,1687,14
	.stabs	"height_offset:P(0,1)",64,0,1687,17
	.stabs	"src_ref_frame_diff:P(0,1)",64,0,1687,7
	.global _SetupForDoubleBuffer
	.type	_SetupForDoubleBuffer, @function
_SetupForDoubleBuffer:
	.stabd	46,0,0
	.stabn	68,0,1688,.LM150-.LFBB5
.LM150:
.LFBB5:
	b.entri 	9,0
	b.mov  	r15,r3	     # movsi
	b.mov  	r14,r5	     # movsi
	b.mov  	r17,r6	     # movsi
	.stabn	68,0,1689,.LM151-.LFBB5
.LM151:
	bw.lwz   	r7,-536805352(r0)	    # movsi load
	b.andi  	r6,r7,65535
	.stabn	68,0,1690,.LM152-.LFBB5
.LM152:
	bw.lwz   	r5,-536805352(r0)	    # movsi load
	.stabn	68,0,1691,.LM153-.LFBB5
.LM153:
	bw.lwz   	r16,-536805332(r0)	    # movsi load
	.stabn	68,0,1702,.LM154-.LFBB5
.LM154:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.beqi  	r7,0,.L151
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.beqi  	r7,3,.L151
	.stabn	68,0,1706,.LM155-.LFBB5
.LM155:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.beqi  	r7,1,.L154
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.movi 	r13,0	     # movsi imm P
	b.bnei  	r7,2,.L157
	b.j    	.L154
.L151:
	b.ori  	r13,r0,-268435456	  # movsi imm i
	b.j    	.L157
.L154:
	b.ori  	r13,r0,-266862592	  # movsi imm i
.L157:
	.stabn	68,0,1711,.LM156-.LFBB5
.LM156:
	b.ori  	r10,r0,307200	  # movsi imm i
	b.addi 	r7,r0,639	  # movsi imm I
	b.bles   	r6,r7,.L160
	.stabn	68,0,1714,.LM157-.LFBB5
.LM157:
	b.srli  	r7,r5,16
	b.mul   	r10,r7,r6
.L160:
	.stabn	68,0,1716,.LM158-.LFBB5
.LM158:
	b.mov  	r3,r10	     # movsi
	b.addi 	r4,r0,1024	  # movsi imm I
	b.jal  	_AlignOffsetAddr
	b.mov  	r11,r3	     # movsi
	.stabn	68,0,1718,.LM159-.LFBB5
.LM159:
	b.addi  	r3,r10,3
	b.sfltsi 	r10,0
	b.cmov  	r3,r3,r10
	b.srai  	r3,r3,2
	b.add   	r3,r3,r11
	b.addi 	r4,r0,1024	  # movsi imm I
	b.jal  	_AlignOffsetAddr
	b.mov  	r12,r3	     # movsi
	.stabn	68,0,1720,.LM160-.LFBB5
.LM160:
	bw.sw    	(_cam_cb_offset_aligned_temp)(r0),r11	   # movsi store
	.stabn	68,0,1721,.LM161-.LFBB5
.LM161:
	bw.sw    	(_cam_cr_offset_aligned_temp)(r0),r3	   # movsi store
	.stabn	68,0,1785,.LM162-.LFBB5
.LM162:
	b.bnei  	r15,0,.L161
	.stabn	68,0,1787,.LM163-.LFBB5
.LM163:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.bnei  	r7,0,.L163
	.stabn	68,0,1788,.LM164-.LFBB5
.LM164:
	b.addi  	r10,r13,4194304
	b.mov  	r4,r10	     # movsi
	b.mov  	r23,r13	     # movsi
	b.j    	.L165
.L163:
	.stabn	68,0,1802,.LM165-.LFBB5
.LM165:
	b.addi  	r10,r13,4194304
	b.mov  	r23,r13	     # movsi
	b.mov  	r4,r13	     # movsi
	b.j    	.L165
.L161:
	.stabn	68,0,1805,.LM166-.LFBB5
.LM166:
	b.bnei  	r15,1,.L166
	.stabn	68,0,1807,.LM167-.LFBB5
.LM167:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.bnei  	r7,0,.L168
	.stabn	68,0,1809,.LM168-.LFBB5
.LM168:
	b.addi  	r23,r13,2097152
	b.mov  	r10,r13	     # movsi
	b.mov  	r4,r13	     # movsi
	b.j    	.L165
.L168:
	.stabn	68,0,1820,.LM169-.LFBB5
.LM169:
	b.addi  	r4,r13,2097152
	b.mov  	r10,r13	     # movsi
	b.mov  	r23,r4	     # movsi
	b.j    	.L165
.L166:
	.stabn	68,0,1827,.LM170-.LFBB5
.LM170:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.bnei  	r7,0,.L170
	.stabn	68,0,1828,.LM171-.LFBB5
.LM171:
	b.addi  	r4,r13,2097152
	.stabn	68,0,1829,.LM172-.LFBB5
.LM172:
	b.addi  	r23,r13,4194304
	b.mov  	r10,r4	     # movsi
	b.j    	.L165
.L170:
	.stabn	68,0,1840,.LM173-.LFBB5
.LM173:
	b.addi  	r4,r13,4194304
	.stabn	68,0,1842,.LM174-.LFBB5
.LM174:
	b.addi  	r10,r13,2097152
	b.mov  	r23,r4	     # movsi
.L165:
	.stabn	68,0,1858,.LM175-.LFBB5
.LM175:
	b.andi  	r6,r16,65535
	b.mul   	r6,r17,r6
	b.add   	r7,r6,r14
	b.add   	r7,r7,r4
	bw.sw    	-805306368(r0),r7	   # movsi store
	.stabn	68,0,1859,.LM176-.LFBB5
.LM176:
	b.addi  	r5,r6,3
	b.sfltsi 	r6,0
	b.cmov  	r5,r5,r6
	b.srai  	r5,r5,2
	b.srli  	r6,r14,31
	b.add   	r6,r6,r14
	b.srai  	r6,r6,1
	b.add   	r7,r6,r11
	b.add   	r7,r7,r5
	b.add   	r7,r7,r4
	bw.sw    	-805306364(r0),r7	   # movsi store
	.stabn	68,0,1860,.LM177-.LFBB5
.LM177:
	b.add   	r6,r6,r12
	b.add   	r6,r6,r5
	b.add   	r6,r6,r4
	bw.sw    	-805306360(r0),r6	   # movsi store
	.stabn	68,0,1863,.LM178-.LFBB5
.LM178:
	b.mov  	r3,r23	     # movsi
	b.add   	r4,r23,r11
	b.add   	r5,r23,r12
	b.jal  	_Deblock_Target_Addr
	.stabn	68,0,1866,.LM179-.LFBB5
.LM179:
	bw.sw    	-2147221456(r0),r10	   # movsi store
	.stabn	68,0,1867,.LM180-.LFBB5
.LM180:
	b.add   	r6,r10,r11
	bw.sw    	-2147221452(r0),r6	   # movsi store
	.stabn	68,0,1868,.LM181-.LFBB5
.LM181:
	b.add   	r7,r10,r12
	bw.sw    	-2147221448(r0),r7	   # movsi store
	.stabn	68,0,1870,.LM182-.LFBB5
.LM182:
	bw.sw    	(_tmp_y)(r0),r10	   # movsi store
	.stabn	68,0,1871,.LM183-.LFBB5
.LM183:
	bw.sw    	(_tmp_u)(r0),r6	   # movsi store
	.stabn	68,0,1872,.LM184-.LFBB5
.LM184:
	bw.sw    	(_tmp_v)(r0),r7	   # movsi store
	.stabn	68,0,1874,.LM185-.LFBB5
.LM185:
	b.reti  	9,0
	.size	_SetupForDoubleBuffer, .-_SetupForDoubleBuffer
	.stabs	"width:r(0,16)=k(0,1)",64,0,1689,6
	.stabs	"cam_cb_offset:r(0,1)",64,0,1692,10
	.stabs	"cam_cb_offset_aligned:r(0,1)",64,0,1694,11
	.stabs	"cam_cr_offset_aligned:r(0,1)",64,0,1695,12
	.stabs	"src_frame_base:r(0,1)",64,0,1696,4
	.stabs	"ref_frame_base:r(0,1)",64,0,1697,10
	.stabs	"recon_frame_base:r(0,1)",64,0,1698,23
	.stabs	"src_base:r(0,1)",64,0,1700,13
	.stabn	192,0,0,.LFBB5-.LFBB5
	.stabn	224,0,0,.Lscope5-.LFBB5
.Lscope5:
	.stabs	"",36,0,0,.Lscope5-.LFBB5
	.stabd	78,0,0
.proc _jpeg_task
	.stabs	"jpeg_task:F(0,15)",36,0,1098,_jpeg_task
	.stabs	"cinfo:P(20,40)",64,0,1097,10
	.stabs	"jpeg_ref_frame:P(0,1)",64,0,1097,23
	.stabs	"dst_buf_num:P(0,1)",64,0,1097,6
	.global _jpeg_task
	.type	_jpeg_task, @function
_jpeg_task:
	.stabd	46,0,0
	.stabn	68,0,1098,.LM186-.LFBB6
.LM186:
.LFBB6:
	b.entri 	2,0
	b.mov  	r10,r3	     # movsi
	b.mov  	r23,r4	     # movsi
	b.mov  	r6,r5	     # movsi
	.stabn	68,0,1184,.LM187-.LFBB6
.LM187:
	bw.lwz   	r7,-536735540(r0)	    # movsi load
	bw.sw    	(_JPEG_SIZE_W)(r0),r7	   # movsi store
	.stabn	68,0,1185,.LM188-.LFBB6
.LM188:
	bw.lwz   	r7,-536735536(r0)	    # movsi load
	bw.sw    	(_JPEG_SIZE_H)(r0),r7	   # movsi store
	.stabn	68,0,1187,.LM189-.LFBB6
.LM189:
	b.movi 	r3,1	     # movsi imm P
	b.mov  	r4,r10	     # movsi
	b.mov  	r5,r23	     # movsi
	b.jal  	_jpeg_init
	.stabn	68,0,1188,.LM190-.LFBB6
.LM190:
	b.mov  	r3,r10	     # movsi
	b.movi 	r4,1	     # movsi imm P
	b.jal  	_jpeg_api
	.stabn	68,0,1189,.LM191-.LFBB6
.LM191:
	b.reti  	2,0
	.size	_jpeg_task, .-_jpeg_task
.Lscope6:
	.stabs	"",36,0,0,.Lscope6-.LFBB6
	.stabd	78,0,0
.proc _SetImgType
	.stabs	"SetImgType:F(0,15)",36,0,1052,_SetImgType
	.global _SetImgType
	.type	_SetImgType, @function
_SetImgType:
	.stabd	46,0,0
	.stabn	68,0,1052,.LM192-.LFBB7
.LM192:
.LFBB7:
	b.entri 	1,0
	.stabn	68,0,1056,.LM193-.LFBB7
.LM193:
	bw.lwz   	r7,-536735496(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L176
	.stabn	68,0,1059,.LM194-.LFBB7
.LM194:
	bw.lwz   	r7,-536735496(r0)	    # movsi load
	b.andi  	r7,r7,-2
	bw.sw    	-536735496(r0),r7	   # movsi store
	.stabn	68,0,1061,.LM195-.LFBB7
.LM195:
	b.jal  	_GenerateParameterSets
	.stabn	68,0,1062,.LM196-.LFBB7
.LM196:
	b.jal  	_start_sequence
	.stabn	68,0,1063,.LM197-.LFBB7
.LM197:
	b.jal  	_FreeParameterSets
	.stabn	68,0,1064,.LM198-.LFBB7
.LM198:
	bw.lwz   	r3,(_img+24)(r0)	    # movsi load
	bw.lwz   	r4,(_img+32)(r0)	    # movsi load
	b.jal  	_set_img_size_to_dmac
	.stabn	68,0,1065,.LM199-.LFBB7
.LM199:
	bw.sw    	(_img)(r0),r0	   # movsi store
	.stabn	68,0,1066,.LM200-.LFBB7
.LM200:
	bw.sw    	(_img+664)(r0),r0	   # movsi store
	.stabn	68,0,1067,.LM201-.LFBB7
.LM201:
	bw.sw    	(_img+668)(r0),r0	   # movsi store
.L176:
	.stabn	68,0,1070,.LM202-.LFBB7
.LM202:
	bw.lwz   	r6,(_input+96)(r0)	    # movsi load
	b.bnei  	r6,0,.L178
	.stabn	68,0,1071,.LM203-.LFBB7
.LM203:
	bw.lwz   	r7,(_img)(r0)	    # movsi load
	b.bnei  	r7,0,.L180
	.stabn	68,0,1072,.LM204-.LFBB7
.LM204:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	(_img+12)(r0),r7	   # movsi store
	b.j    	.L185
.L180:
	.stabn	68,0,1085,.LM205-.LFBB7
.LM205:
	bw.sw    	(_img+12)(r0),r0	   # movsi store
	b.j    	.L185
.L178:
	.stabn	68,0,1087,.LM206-.LFBB7
.LM206:
	bw.lwz   	r7,(_img)(r0)	    # movsi load
	b.mod  	r7,r7,r6
	b.bnei  	r7,0,.L183
	.stabn	68,0,1088,.LM207-.LFBB7
.LM207:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	(_img+12)(r0),r7	   # movsi store
	b.j    	.L185
.L183:
	.stabn	68,0,1090,.LM208-.LFBB7
.LM208:
	bw.sw    	(_img+12)(r0),r0	   # movsi store
.L185:
	.stabn	68,0,1095,.LM209-.LFBB7
.LM209:
	b.reti  	1,0
	.size	_SetImgType, .-_SetImgType
.Lscope7:
	.stabs	"",36,0,0,.Lscope7-.LFBB7
	.stabd	78,0,0
.proc _free_global_buffers
	.stabs	"free_global_buffers:F(0,15)",36,0,1033,_free_global_buffers
	.global _free_global_buffers
	.type	_free_global_buffers, @function
_free_global_buffers:
	.stabd	46,0,0
	.stabn	68,0,1033,.LM210-.LFBB8
.LM210:
.LFBB8:
	b.entri 	1,0
	.stabn	68,0,1034,.LM211-.LFBB8
.LM211:
	bw.lwz   	r3,(_img+404)(r0)	    # movsi load
	b.beqi  	r3,0,.L189
	.stabn	68,0,1035,.LM212-.LFBB8
.LM212:
	b.jal  	_free
.L189:
	.stabn	68,0,1044,.LM213-.LFBB8
.LM213:
	b.reti  	1,0
	.size	_free_global_buffers, .-_free_global_buffers
.Lscope8:
	.stabs	"",36,0,0,.Lscope8-.LFBB8
	.stabd	78,0,0
.proc _free_picture
	.stabs	"free_picture:F(0,15)",36,0,987,_free_picture
	.stabs	"pic:P(0,17)=*(13,22)",64,0,987,3
	.global _free_picture
	.type	_free_picture, @function
_free_picture:
	.stabd	46,0,0
	.stabn	68,0,987,.LM214-.LFBB9
.LM214:
.LFBB9:
	b.entri 	1,0
	.stabn	68,0,988,.LM215-.LFBB9
.LM215:
	b.beqi  	r3,0,.L193
	.stabn	68,0,990,.LM216-.LFBB9
.LM216:
	b.jal  	_free
.L193:
	.stabn	68,0,994,.LM217-.LFBB9
.LM217:
	b.reti  	1,0
	.size	_free_picture, .-_free_picture
.Lscope9:
	.stabs	"",36,0,0,.Lscope9-.LFBB9
	.stabd	78,0,0
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC0:
	.string	"malloc_picture: Picture structure"
.section .internalrom, "ax"
.proc _malloc_picture
	.stabs	"malloc_picture:F(0,17)",36,0,967,_malloc_picture
	.global _malloc_picture
	.type	_malloc_picture, @function
_malloc_picture:
	.stabd	46,0,0
	.stabn	68,0,967,.LM218-.LFBB10
.LM218:
.LFBB10:
	b.entri 	2,0
	.stabn	68,0,971,.LM219-.LFBB10
.LM219:
	b.ori  	r3,r0,8	  # movsi imm J
	b.jal  	_malloc
	b.mov  	r10,r3	     # movsi
	b.bnei  	r3,0,.L195
	.stabn	68,0,972,.LM220-.LFBB10
.LM220:
	b.ori  	r3,r0,.LC0	  # movsi imm i
	b.jal  	_no_mem_exit
.L195:
	.stabn	68,0,977,.LM221-.LFBB10
.LM221:
	b.mov  	r3,r10	     # movsi
	b.reti  	2,0
	.size	_malloc_picture, .-_malloc_picture
.Lscope10:
	.stabs	"",36,0,0,.Lscope10-.LFBB10
	.stabd	78,0,0
	.section	.rodata.str1.1
.LC1:
	.string	"init_img: img.mb_data_v"
.section .internalrom, "ax"
.proc _init_img
	.stabs	"init_img:F(0,15)",36,0,850,_init_img
	.global _init_img
	.type	_init_img, @function
_init_img:
	.stabd	46,0,0
	.stabn	68,0,850,.LM222-.LFBB11
.LM222:
.LFBB11:
	b.entri 	1,0
	.stabn	68,0,853,.LM223-.LFBB11
.LM223:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	(_img+712)(r0),r7	   # movsi store
	.stabn	68,0,857,.LM224-.LFBB11
.LM224:
	b.jal  	_bitstream_init
	.stabn	68,0,863,.LM225-.LFBB11
.LM225:
	bw.lwz   	r5,(_input+12)(r0)	    # movsi load
	bw.sw    	(_img+24)(r0),r5	   # movsi store
	.stabn	68,0,864,.LM226-.LFBB11
.LM226:
	bw.lwz   	r4,(_input+16)(r0)	    # movsi load
	bw.sw    	(_img+32)(r0),r4	   # movsi store
	.stabn	68,0,872,.LM227-.LFBB11
.LM227:
	b.srai  	r7,r5,1
	bw.sw    	(_img+28)(r0),r7	   # movsi store
	.stabn	68,0,873,.LM228-.LFBB11
.LM228:
	b.srai  	r7,r4,1
	bw.sw    	(_img+36)(r0),r7	   # movsi store
	.stabn	68,0,884,.LM229-.LFBB11
.LM229:
	b.addi  	r6,r5,15
	b.sfltsi 	r5,0
	b.cmov  	r6,r6,r5
	b.srai  	r6,r6,4
	bw.sw    	(_img+696)(r0),r6	   # movsi store
	.stabn	68,0,885,.LM230-.LFBB11
.LM230:
	b.addi  	r7,r4,15
	b.sfltsi 	r4,0
	b.cmov  	r7,r7,r4
	b.srai  	r7,r7,4
	bw.sw    	(_img+700)(r0),r7	   # movsi store
	.stabn	68,0,886,.LM231-.LFBB11
.LM231:
	b.mul   	r7,r7,r6
	bw.sw    	(_img+708)(r0),r7	   # movsi store
	.stabn	68,0,892,.LM232-.LFBB11
.LM232:
	b.ori  	r3,r0,20	  # movsi imm J
	b.mul   	r3,r6,r3
	b.jal  	_malloc
	bw.sw    	(_img+404)(r0),r3	   # movsi store
	b.bnei  	r3,0,.L199
	.stabn	68,0,894,.LM233-.LFBB11
.LM233:
	b.ori  	r3,r0,.LC1	  # movsi imm i
	b.jal  	_no_mem_exit
.L199:
	.stabn	68,0,921,.LM234-.LFBB11
.LM234:
	bw.sw    	(_img+72)(r0),r0	   # movsi store
	.stabn	68,0,923,.LM235-.LFBB11
.LM235:
	bw.lwz   	r7,(_input+100)(r0)	    # movsi load
	b.beqi  	r7,0,.L201
	.stabn	68,0,924,.LM236-.LFBB11
.LM236:
	bw.lwz   	r7,(_input+108)(r0)	    # movsi load
	b.slli  	r7,r7,1
	bw.sw    	(_input+108)(r0),r7	   # movsi store
	.stabn	68,0,925,.LM237-.LFBB11
.LM237:
	bw.lwz   	r7,(_input+112)(r0)	    # movsi load
	b.slli  	r7,r7,1
	bw.sw    	(_input+112)(r0),r7	   # movsi store
	b.j    	.L203
.L201:
	.stabn	68,0,927,.LM238-.LFBB11
.LM238:
	bw.sw    	(_input+104)(r0),r0	   # movsi store
	.stabn	68,0,928,.LM239-.LFBB11
.LM239:
	bw.sw    	(_input+108)(r0),r0	   # movsi store
	.stabn	68,0,929,.LM240-.LFBB11
.LM240:
	bw.sw    	(_input+112)(r0),r0	   # movsi store
.L203:
	.stabn	68,0,936,.LM241-.LFBB11
.LM241:
	bw.lwz   	r3,(_input+104)(r0)	    # movsi load
	bw.lwz   	r4,(_input)(r0)	    # movsi load
	b.jal  	_Deblock_Control1
	.stabn	68,0,937,.LM242-.LFBB11
.LM242:
	bw.lwz   	r3,(_input+108)(r0)	    # movsi load
	bw.lwz   	r4,(_input+112)(r0)	    # movsi load
	b.jal  	_Deblock_Control2
	.stabn	68,0,943,.LM243-.LFBB11
.LM243:
	b.reti  	1,0
	.size	_init_img, .-_init_img
.Lscope11:
	.stabs	"",36,0,0,.Lscope11-.LFBB11
	.stabd	78,0,0
	.section	.rodata.str1.1
.LC2:
	.string	"sensor set error!!!\n\r"
.LC3:
	.string	"Sensor Dead\n\r"
.section .internalrom, "ax"
.proc _lencod
	.stabs	"lencod:F(0,1)",36,0,164,_lencod
	.global _lencod
	.type	_lencod, @function
_lencod:
	.stabd	46,0,0
	.stabn	68,0,164,.LM244-.LFBB12
.LM244:
.LFBB12:
	b.entri 	13,112
	.stabn	68,0,165,.LM245-.LFBB12
.LM245:
	bg.sb    	447(r1),r0	   # movqi store
	.stabn	68,0,197,.LM246-.LFBB12
.LM246:
	b.mov  	r3,r1	     # movsi
	b.ori  	r4,r0,184	  # movsi imm J
	b.jal  	_jpeg_CreateCompress
	.stabn	68,0,199,.LM247-.LFBB12
.LM247:
	b.movi 	r3,0	     # movsi imm P
	b.jal  	_OSSemCreate
	bw.sw    	(_pStartSem)(r0),r3	   # movsi store
	.stabn	68,0,205,.LM248-.LFBB12
.LM248:
	b.addi 	r6,r0,20480	  # movsi imm I
	b.ori  	r7,r0,1342177279	  # movsi imm i
	l.mtspr r6,r7,0
	.stabn	68,0,207,.LM249-.LFBB12
.LM249:
	b.addi 	r6,r0,20481	  # movsi imm I
	b.movi 	r7,0	     # movsi imm P
	l.mtspr r6,r7,0
	b.movi 	r15,0	     # movsi imm P
	b.movi 	r14,0	     # movsi imm P
	b.movi 	r13,0	     # movsi imm P
	.stabn	68,0,218,.LM250-.LFBB12
.LM250:
	b.addi  	r18,r1,191
	.stabn	68,0,221,.LM251-.LFBB12
.LM251:
	b.addi  	r19,r1,447
	.stabn	68,0,401,.LM252-.LFBB12
.LM252:
	b.ori  	r20,r0,_h264DualStreamBuf+16	  # movsi imm i
	.stabn	68,0,464,.LM253-.LFBB12
.LM253:
	b.ori  	r21,r0,_h264DualStreamBuf	  # movsi imm i
.L206:
	.stabn	68,0,213,.LM254-.LFBB12
.LM254:
	bw.lwz   	r7,(_isAudioStarted)(r0)	    # movsi load
	b.bnei  	r7,0,.L207
	.stabn	68,0,214,.LM255-.LFBB12
.LM255:
	b.addi 	r3,r0,4096	  # movsi imm I
	b.jal  	_GPIOSetHigh
.L207:
	.stabn	68,0,217,.LM256-.LFBB12
.LM256:
	b.ori   	r7,r0,48	 # movqi imm J
	b.sb    	191(r1),r7	   # movqi store
	b.ori   	r7,r0,18	 # movqi imm J
	b.sb    	192(r1),r7	   # movqi store
	b.addi  	r7,r0,-128	 # movqi imm N
	b.sb    	193(r1),r7	   # movqi store
	.stabn	68,0,218,.LM257-.LFBB12
.LM257:
	b.ori  	r3,r0,48	  # movsi imm J
	b.movi 	r4,3	     # movsi imm P
	b.mov  	r5,r18	     # movsi
	b.jal  	_i2c_write
	b.beqi  	r3,0,.L209
	b.ori  	r3,r0,.LC2	  # movsi imm i
	b.jal  	_uart_print
.L209:
	.stabn	68,0,221,.LM258-.LFBB12
.LM258:
	bw.lwz   	r3,(_pStartSem)(r0)	    # movsi load
	b.movi 	r4,0	     # movsi imm P
	b.mov  	r5,r19	     # movsi
	b.jal  	_OSSemPend
	.stabn	68,0,225,.LM259-.LFBB12
.LM259:
	b.jal  	_flash_avata_mode_check
	.stabn	68,0,227,.LM260-.LFBB12
.LM260:
	bw.lbz   	r7,(_avata_capture_mode)(r0)
	b.beqi  	r7,0,.L211
	.stabn	68,0,229,.LM261-.LFBB12
.LM261:
	b.jal  	_flash_write_initial_sdramc2_register
.L211:
	.stabn	68,0,233,.LM262-.LFBB12
.LM262:
	bw.lwz   	r7,-536735484(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L213
	.stabn	68,0,235,.LM263-.LFBB12
.LM263:
	b.jal  	_flash_write_initial_sdramc1_register
.L213:
	.stabn	68,0,244,.LM264-.LFBB12
.LM264:
	bw.lwz   	r16,-536735488(r0)	    # movsi load
	.stabn	68,0,249,.LM265-.LFBB12
.LM265:
	b.jal  	_Configure_via_SW
	.stabn	68,0,250,.LM266-.LFBB12
.LM266:
	b.jal  	_InitFPGA1
.L215:
	.stabn	68,0,251,.LM267-.LFBB12
.LM267:
	bw.lwz   	r7,-805175228(r0)	    # movsi load
	b.blesi  	r7,1,.L215
.L359:
	.stabn	68,0,253,.LM268-.LFBB12
.LM268:
	bw.lwz   	r7,-805142460(r0)	    # movsi load
	b.blesi  	r7,1,.L359
	b.movi 	r6,0	     # movsi imm P
.L218:
	.stabn	68,0,259,.LM269-.LFBB12
.LM269:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-805175224(r0),r7	   # movsi store
	.stabn	68,0,260,.LM270-.LFBB12
.LM270:
	bw.sw    	-805142456(r0),r7	   # movsi store
.L219:
	.stabn	68,0,261,.LM271-.LFBB12
.LM271:
	bw.lwz   	r7,-805175228(r0)	    # movsi load
	b.blesi  	r7,1,.L219
.L360:
	.stabn	68,0,263,.LM272-.LFBB12
.LM272:
	bw.lwz   	r7,-805142460(r0)	    # movsi load
	b.blesi  	r7,1,.L360
	.stabn	68,0,257,.LM273-.LFBB12
.LM273:
	b.addi  	r6,r6,1
	b.bnei  	r6,3,.L218
	.stabn	68,0,269,.LM274-.LFBB12
.LM274:
	b.jal  	_init_img
	.stabn	68,0,270,.LM275-.LFBB12
.LM275:
	bw.lwz   	r3,(_img+24)(r0)	    # movsi load
	bw.lwz   	r4,(_img+32)(r0)	    # movsi load
	b.jal  	_Deblock_Dimension
	.stabn	68,0,274,.LM276-.LFBB12
.LM276:
	b.addi 	r3,r0,4096	  # movsi imm I
	b.jal  	_GPIOSetLow
	.stabn	68,0,276,.LM277-.LFBB12
.LM277:
	bw.lwz   	r3,(_pH264StreamSem)(r0)	    # movsi load
	b.movi 	r4,0	     # movsi imm P
	b.mov  	r5,r19	     # movsi
	b.jal  	_OSSemSet
	.stabn	68,0,277,.LM278-.LFBB12
.LM278:
	bw.lwz   	r3,(_pJPEGStreamSem)(r0)	    # movsi load
	b.movi 	r4,0	     # movsi imm P
	b.mov  	r5,r19	     # movsi
	b.jal  	_OSSemSet
	.stabn	68,0,282,.LM279-.LFBB12
.LM279:
	bw.lwz   	r7,-536735472(r0)	    # movsi load
	b.ori  	r5,r0,30	  # movsi imm J
	b.bles   	r7,r5,.L223
	.stabn	68,0,283,.LM280-.LFBB12
.LM280:
	b.ori  	r7,r0,30	  # movsi imm J
	bw.sw    	-536735472(r0),r7	   # movsi store
.L223:
	.stabn	68,0,284,.LM281-.LFBB12
.LM281:
	b.jal  	_calulate_system_clock
	bw.lwz   	r7,-536735472(r0)	    # movsi load
	b.divu  	r11,r3,r7
	.stabn	68,0,286,.LM282-.LFBB12
.LM282:
	b.addi 	r6,r0,20481	  # movsi imm I
	b.movi 	r7,0	     # movsi imm P
	l.mtspr r6,r7,0
	.stabn	68,0,291,.LM283-.LFBB12
.LM283:
	b.jal  	_init_video_streamBuf
	.stabn	68,0,293,.LM284-.LFBB12
.LM284:
	b.jal  	_GenerateParameterSets
	.stabn	68,0,295,.LM285-.LFBB12
.LM285:
	b.jal  	_start_sequence
	.stabn	68,0,296,.LM286-.LFBB12
.LM286:
	b.jal  	_FreeParameterSets
	.stabn	68,0,297,.LM287-.LFBB12
.LM287:
	bw.lwz   	r3,(_img+24)(r0)	    # movsi load
	bw.lwz   	r4,(_img+32)(r0)	    # movsi load
	b.jal  	_set_img_size_to_dmac
	.stabn	68,0,302,.LM288-.LFBB12
.LM288:
	bw.lwz   	r6,-536735708(r0)	    # movsi load
	bw.lwz   	r7,-536735704(r0)	    # movsi load
	b.slli  	r7,r7,8
	b.andi  	r7,r7,65280
	b.andi  	r6,r6,255
	b.or    	r7,r7,r6
	b.slli  	r7,r7,10
	bw.sw    	(_max_bit_rate_value)(r0),r7	   # movsi store
	.stabn	68,0,303,.LM289-.LFBB12
.LM289:
	bw.lwz   	r7,-536735676(r0)	    # movsi load
	.stabn	68,0,305,.LM290-.LFBB12
.LM290:
	bw.sw    	(_img)(r0),r0	   # movsi store
	.stabn	68,0,308,.LM291-.LFBB12
.LM291:
	bw.sw    	(_img+664)(r0),r0	   # movsi store
	.stabn	68,0,309,.LM292-.LFBB12
.LM292:
	bw.sw    	(_img+668)(r0),r0	   # movsi store
	b.ori  	r17,r0,30	  # movsi imm J
	b.movi 	r12,0	     # movsi imm P
	b.j    	.L412
.L226:
	.stabn	68,0,315,.LM293-.LFBB12
.LM293:
	bw.sw    	(_isVideoPropertySet)(r0),r0	   # movsi store
.L227:
	.stabn	68,0,317,.LM294-.LFBB12
.LM294:
	bw.lwz   	r7,-805175228(r0)	    # movsi load
	b.blesi  	r7,1,.L227
.L364:
	.stabn	68,0,319,.LM295-.LFBB12
.LM295:
	bw.lwz   	r7,-805142460(r0)	    # movsi load
	b.blesi  	r7,1,.L364
	b.movi 	r6,0	     # movsi imm P
.L230:
	.stabn	68,0,325,.LM296-.LFBB12
.LM296:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-805175224(r0),r7	   # movsi store
	.stabn	68,0,326,.LM297-.LFBB12
.LM297:
	bw.sw    	-805142456(r0),r7	   # movsi store
.L231:
	.stabn	68,0,327,.LM298-.LFBB12
.LM298:
	bw.lwz   	r7,-805175228(r0)	    # movsi load
	b.blesi  	r7,1,.L231
.L365:
	.stabn	68,0,329,.LM299-.LFBB12
.LM299:
	bw.lwz   	r7,-805142460(r0)	    # movsi load
	b.blesi  	r7,1,.L365
	.stabn	68,0,323,.LM300-.LFBB12
.LM300:
	b.addi  	r6,r6,1
	b.ori  	r7,r0,9	  # movsi imm J
	b.bne   	r6,r7,.L230
	.stabn	68,0,332,.LM301-.LFBB12
.LM301:
	bw.lwz   	r7,-536735496(r0)	    # movsi load
	b.ori   	r7,r7,1
	bw.sw    	-536735496(r0),r7	   # movsi store
.L412:
	.stabn	68,0,339,.LM302-.LFBB12
.LM302:
	bw.lwz   	r7,-536735488(r0)	    # movsi load
	b.beq   	r7,r16,.L235
.L361:
	.stabn	68,0,341,.LM303-.LFBB12
.LM303:
	bw.lwz   	r7,-805175228(r0)	    # movsi load
	b.blesi  	r7,1,.L361
.L362:
	.stabn	68,0,343,.LM304-.LFBB12
.LM304:
	bw.lwz   	r7,-805142460(r0)	    # movsi load
	b.blesi  	r7,1,.L362
	.stabn	68,0,345,.LM305-.LFBB12
.LM305:
	bw.lwz   	r4,-536735488(r0)	    # movsi load
	b.mov  	r3,r16	     # movsi
	b.jal  	_zoomControl
	.stabn	68,0,346,.LM306-.LFBB12
.LM306:
	bw.lwz   	r16,-536735488(r0)	    # movsi load
	b.movi 	r7,0	     # movsi imm P
.L239:
	.stabn	68,0,347,.LM307-.LFBB12
.LM307:
	l.nop   0
	b.addi  	r7,r7,1
	b.ori  	r5,r0,1000000	  # movsi imm i
	b.bne   	r7,r5,.L239
.L235:
	.stabn	68,0,351,.LM308-.LFBB12
.LM308:
	bw.lbz   	r7,(_avata_capture_mode)(r0)
	b.bnei  	r7,0,.L240
	.stabn	68,0,353,.LM309-.LFBB12
.LM309:
	b.bnei  	r12,1,.L240
	.stabn	68,0,355,.LM310-.LFBB12
.LM310:
	b.ori  	r7,r0,33	  # movsi imm J
	bw.sw    	(_input)(r0),r7	   # movsi store
	.stabn	68,0,356,.LM311-.LFBB12
.LM311:
	bw.lwz   	r7,-536735496(r0)	    # movsi load
	b.ori   	r7,r7,1
	bw.sw    	-536735496(r0),r7	   # movsi store
.L240:
	.stabn	68,0,361,.LM312-.LFBB12
.LM312:
	b.jal  	_SetImgType
	.stabn	68,0,363,.LM313-.LFBB12
.LM313:
	b.mov  	r3,r15	     # movsi
	b.movi 	r4,1	     # movsi imm P
	b.movi 	r5,0	     # movsi imm P
	b.movi 	r6,0	     # movsi imm P
	b.movi 	r7,0	     # movsi imm P
	b.jal  	_SetupForDoubleBuffer
	b.movi 	r6,0	     # movsi imm P
	b.j    	.L243
.L244:
	.stabn	68,0,368,.LM314-.LFBB12
.LM314:
	b.movi 	r7,0	     # movsi imm P
.L245:
	.stabn	68,0,370,.LM315-.LFBB12
.LM315:
	l.nop   0
	b.addi  	r7,r7,1
	b.ori  	r5,r0,100	  # movsi imm J
	b.bne   	r7,r5,.L245
	.stabn	68,0,371,.LM316-.LFBB12
.LM316:
	b.ori  	r7,r0,300001	  # movsi imm i
	b.bne   	r6,r7,.L247
	.stabn	68,0,373,.LM317-.LFBB12
.LM317:
	b.ori  	r3,r0,.LC3	  # movsi imm i
	b.jal  	_uart_print
	.stabn	68,0,374,.LM318-.LFBB12
.LM318:
	b.movi 	r7,3	     # movsi imm P
	bw.sw    	-536735652(r0),r7	   # movsi store
	b.j    	.L249
.L247:
	.stabn	68,0,371,.LM319-.LFBB12
.LM319:
	b.addi  	r6,r6,1
.L243:
	.stabn	68,0,368,.LM320-.LFBB12
.LM320:
	bw.lwz   	r7,-805175228(r0)	    # movsi load
	b.beqi  	r7,0,.L244
.L249:
	b.movi 	r6,0	     # movsi imm P
	b.j    	.L250
.L251:
	.stabn	68,0,379,.LM321-.LFBB12
.LM321:
	b.movi 	r7,0	     # movsi imm P
.L252:
	.stabn	68,0,381,.LM322-.LFBB12
.LM322:
	l.nop   0
	b.addi  	r7,r7,1
	b.ori  	r5,r0,100	  # movsi imm J
	b.bne   	r7,r5,.L252
	.stabn	68,0,382,.LM323-.LFBB12
.LM323:
	b.ori  	r7,r0,300001	  # movsi imm i
	b.bne   	r6,r7,.L254
	.stabn	68,0,384,.LM324-.LFBB12
.LM324:
	b.ori  	r3,r0,.LC3	  # movsi imm i
	b.jal  	_uart_print
	.stabn	68,0,385,.LM325-.LFBB12
.LM325:
	b.movi 	r7,3	     # movsi imm P
	bw.sw    	-536735652(r0),r7	   # movsi store
	b.j    	.L256
.L254:
	.stabn	68,0,382,.LM326-.LFBB12
.LM326:
	b.addi  	r6,r6,1
.L250:
	.stabn	68,0,379,.LM327-.LFBB12
.LM327:
	bw.lwz   	r7,-805142460(r0)	    # movsi load
	b.beqi  	r7,0,.L251
.L256:
	.stabn	68,0,398,.LM328-.LFBB12
.LM328:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.or    	r7,r13,r7
	b.bnei  	r7,0,.L257
.LBB2:
	.stabn	68,0,400,.LM329-.LFBB12
.LM329:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mfspr r10,r7,0
.LBE2:
	b.ori  	r6,r0,17	  # movsi imm J
	b.andi  	r7,r10,-7
	l.mtspr r6,r7,0
	.stabn	68,0,401,.LM330-.LFBB12
.LM330:
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.add   	r7,r7,r20
	b.lbz   	r7,0(r7)
	b.extbs 	r7,r7
	b.beqi  	r7,0,.L259
.L363:
	.stabn	68,0,404,.LM331-.LFBB12
.LM331:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	(_isH264Pend)(r0),r7	   # movsi store
	.stabn	68,0,405,.LM332-.LFBB12
.LM332:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r10,0
	.stabn	68,0,407,.LM333-.LFBB12
.LM333:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,3,.L261
	.stabn	68,0,408,.LM334-.LFBB12
.LM334:
	b.ori  	r7,r0,120000000	  # movsi imm i
	bw.sw    	-536608768(r0),r7	   # movsi store
	b.j    	.L263
.L261:
	.stabn	68,0,410,.LM335-.LFBB12
.LM335:
	b.ori  	r7,r0,120000000	  # movsi imm i
	bw.sw    	-536608768(r0),r7	   # movsi store
.L263:
	.stabn	68,0,411,.LM336-.LFBB12
.LM336:
	b.ori  	r3,r0,524288	  # movsi imm i
	b.jal  	_IntEnable
	.stabn	68,0,412,.LM337-.LFBB12
.LM337:
	bw.lwz   	r3,(_pH264StreamSem)(r0)	    # movsi load
	b.movi 	r4,0	     # movsi imm P
	b.mov  	r5,r19	     # movsi
	b.jal  	_OSSemPend
	.stabn	68,0,413,.LM338-.LFBB12
.LM338:
	b.ori  	r3,r0,524288	  # movsi imm i
	b.jal  	_IntDisable
	.stabn	68,0,414,.LM339-.LFBB12
.LM339:
	b.movi 	r7,-1	     # movsi imm P
	bw.sw    	-536608768(r0),r7	   # movsi store
	.stabn	68,0,415,.LM340-.LFBB12
.LM340:
	bw.sw    	(_isH264Pend)(r0),r0	   # movsi store
	.stabn	68,0,401,.LM341-.LFBB12
.LM341:
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.add   	r7,r7,r20
	b.lbz   	r7,0(r7)
	b.extbs 	r7,r7
	b.bnei  	r7,0,.L363
.L259:
	.stabn	68,0,418,.LM342-.LFBB12
.LM342:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r10,0
	b.j    	.L264
.L257:
.LBB3:
	.stabn	68,0,422,.LM343-.LFBB12
.LM343:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mfspr r10,r7,0
.LBE3:
	b.ori  	r6,r0,17	  # movsi imm J
	b.andi  	r7,r10,-7
	l.mtspr r6,r7,0
	b.j    	.L265
.L266:
	.stabn	68,0,426,.LM344-.LFBB12
.LM344:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	(_isH264Pend)(r0),r7	   # movsi store
	.stabn	68,0,427,.LM345-.LFBB12
.LM345:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r10,0
	.stabn	68,0,429,.LM346-.LFBB12
.LM346:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,3,.L267
	.stabn	68,0,430,.LM347-.LFBB12
.LM347:
	b.ori  	r7,r0,120000000	  # movsi imm i
	bw.sw    	-536608768(r0),r7	   # movsi store
	b.j    	.L269
.L267:
	.stabn	68,0,432,.LM348-.LFBB12
.LM348:
	b.ori  	r7,r0,120000000	  # movsi imm i
	bw.sw    	-536608768(r0),r7	   # movsi store
.L269:
	.stabn	68,0,433,.LM349-.LFBB12
.LM349:
	b.ori  	r3,r0,524288	  # movsi imm i
	b.jal  	_IntEnable
	.stabn	68,0,434,.LM350-.LFBB12
.LM350:
	bw.lwz   	r3,(_pH264StreamSem)(r0)	    # movsi load
	b.movi 	r4,0	     # movsi imm P
	b.mov  	r5,r19	     # movsi
	b.jal  	_OSSemPend
	.stabn	68,0,435,.LM351-.LFBB12
.LM351:
	b.ori  	r3,r0,524288	  # movsi imm i
	b.jal  	_IntDisable
	.stabn	68,0,436,.LM352-.LFBB12
.LM352:
	b.movi 	r7,-1	     # movsi imm P
	bw.sw    	-536608768(r0),r7	   # movsi store
	.stabn	68,0,437,.LM353-.LFBB12
.LM353:
	bw.sw    	(_isH264Pend)(r0),r0	   # movsi store
.L265:
	.stabn	68,0,423,.LM354-.LFBB12
.LM354:
	bw.lbz   	r7,(_h264DualStreamBuf+16)(r0)
	b.extbs 	r7,r7
	b.bnei  	r7,0,.L266
	bw.lbz   	r7,(_h264DualStreamBuf+17)(r0)
	b.extbs 	r7,r7
	b.bnei  	r7,0,.L266
	.stabn	68,0,440,.LM355-.LFBB12
.LM355:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r10,0
	.stabn	68,0,441,.LM356-.LFBB12
.LM356:
	bw.sb    	(_h264DualStreamBuf+18)(r0),r0	   # movqi store
	.stabn	68,0,442,.LM357-.LFBB12
.LM357:
	bw.sb    	(_h264DualStreamBuf+19)(r0),r0	   # movqi store
.L264:
	.stabn	68,0,446,.LM358-.LFBB12
.LM358:
	bw.lwz   	r7,-536735472(r0)	    # movsi load
	b.ori  	r5,r0,30	  # movsi imm J
	b.bles   	r7,r5,.L272
	.stabn	68,0,447,.LM359-.LFBB12
.LM359:
	b.ori  	r7,r0,30	  # movsi imm J
	bw.sw    	-536735472(r0),r7	   # movsi store
.L272:
	.stabn	68,0,449,.LM360-.LFBB12
.LM360:
	bw.lwz   	r7,-536735472(r0)	    # movsi load
	b.beq   	r7,r17,.L274
	.stabn	68,0,451,.LM361-.LFBB12
.LM361:
	b.jal  	_calulate_system_clock
	bw.lwz   	r7,-536735472(r0)	    # movsi load
	b.divu  	r11,r3,r7
	.stabn	68,0,452,.LM362-.LFBB12
.LM362:
	bw.lwz   	r17,-536735472(r0)	    # movsi load
.L274:
.LBB4:
	.stabn	68,0,456,.LM363-.LFBB12
.LM363:
	b.addi 	r6,r0,20481	  # movsi imm I
	l.mfspr r7,r6,0
.LBE4:
	b.bgeu   	r11,r7,.L276
.LBB5:
	.stabn	68,0,458,.LM364-.LFBB12
.LM364:
	l.mfspr r7,r6,0
.LBE5:
	.stabn	68,0,459,.LM365-.LFBB12
.LM365:
	b.beq   	r11,r7,.L278
	.stabn	68,0,460,.LM366-.LFBB12
.LM366:
	b.sub   	r7,r7,r11
	l.mtspr r6,r7,0
	b.j    	.L280
.L278:
	.stabn	68,0,462,.LM367-.LFBB12
.LM367:
	b.addi 	r6,r0,20481	  # movsi imm I
	b.movi 	r7,0	     # movsi imm P
	l.mtspr r6,r7,0
.L280:
	.stabn	68,0,464,.LM368-.LFBB12
.LM368:
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.slli  	r7,r7,2
	b.add   	r7,r7,r21
	b.sw    	0(r7),r0	   # movsi store
	.stabn	68,0,467,.LM369-.LFBB12
.LM369:
	bw.lwz   	r3,(_input+104)(r0)	    # movsi load
	bw.lwz   	r4,(_input+4)(r0)	    # movsi load
	b.jal  	_Deblock_Control1
	.stabn	68,0,468,.LM370-.LFBB12
.LM370:
	bw.lwz   	r3,(_input+108)(r0)	    # movsi load
	bw.lwz   	r4,(_input+112)(r0)	    # movsi load
	b.jal  	_Deblock_Control2
	.stabn	68,0,470,.LM371-.LFBB12
.LM371:
	b.jal  	_encode_one_frame
	.stabn	68,0,473,.LM372-.LFBB12
.LM372:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.bnei  	r7,0,.L281
	.stabn	68,0,474,.LM373-.LFBB12
.LM373:
	b.jal  	_simpleRateControl
	b.j    	.L283
.L281:
	.stabn	68,0,476,.LM374-.LFBB12
.LM374:
	bw.sw    	(_less_than_orig_target_cnt)(r0),r0	   # movsi store
.L283:
	.stabn	68,0,479,.LM375-.LFBB12
.LM375:
	b.blesi  	r12,0,.L284
	.stabn	68,0,482,.LM376-.LFBB12
.LM376:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.bnei  	r7,0,.L286
	.stabn	68,0,484,.LM377-.LFBB12
.LM377:
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.slli  	r7,r7,2
	b.add   	r7,r7,r21
	b.lwz   	r7,0(r7)	    # movsi load
	b.ori  	r6,r0,36864	  # movsi imm i
	b.bles   	r7,r6,.L288
	.stabn	68,0,487,.LM378-.LFBB12
.LM378:
	bw.lwz   	r7,(_input)(r0)	    # movsi load
	b.addi  	r7,r7,3
	.stabn	68,0,490,.LM379-.LFBB12
.LM379:
	b.sflesi 	r7,51
	b.ori  	r6,r0,51	  # movsi imm J
	b.cmov  	r7,r7,r6
	bw.sw    	(_input)(r0),r7	   # movsi store
	.stabn	68,0,492,.LM380-.LFBB12
.LM380:
	bw.lwz   	r7,-536735496(r0)	    # movsi load
	b.ori   	r7,r7,1
	bw.sw    	-536735496(r0),r7	   # movsi store
	b.movi 	r13,0	     # movsi imm P
	b.j    	.L284
.L288:
.LBB6:
	.stabn	68,0,496,.LM381-.LFBB12
.LM381:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mfspr r5,r7,0
.LBE6:
	b.ori  	r6,r0,17	  # movsi imm J
	b.andi  	r7,r5,-7
	l.mtspr r6,r7,0
	.stabn	68,0,497,.LM382-.LFBB12
.LM382:
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.add   	r7,r7,r20
	b.movi  	r6,1	    # movqi imm P
	b.sb    	0(r7),r6	   # movqi store
	.stabn	68,0,500,.LM383-.LFBB12
.LM383:
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.addi  	r7,r7,1
	b.extbs 	r7,r7
	bw.sb    	(_h264DualStreamBuf+18)(r0),r7	   # movqi store
	.stabn	68,0,501,.LM384-.LFBB12
.LM384:
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.bnei  	r7,2,.L290
	.stabn	68,0,502,.LM385-.LFBB12
.LM385:
	bw.sb    	(_h264DualStreamBuf+18)(r0),r0	   # movqi store
.L290:
	.stabn	68,0,504,.LM386-.LFBB12
.LM386:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r5,0
	b.movi 	r13,0	     # movsi imm P
	b.j    	.L284
.L286:
	.stabn	68,0,510,.LM387-.LFBB12
.LM387:
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.slli  	r7,r7,2
	b.add   	r7,r7,r21
	b.lwz   	r7,0(r7)	    # movsi load
	b.ori  	r5,r0,73728	  # movsi imm i
	b.bles   	r7,r5,.L292
	.stabn	68,0,513,.LM388-.LFBB12
.LM388:
	bw.lwz   	r7,(_input)(r0)	    # movsi load
	b.addi  	r7,r7,3
	.stabn	68,0,516,.LM389-.LFBB12
.LM389:
	b.sflesi 	r7,51
	b.ori  	r6,r0,51	  # movsi imm J
	b.cmov  	r7,r7,r6
	bw.sw    	(_input)(r0),r7	   # movsi store
	.stabn	68,0,518,.LM390-.LFBB12
.LM390:
	bw.lwz   	r7,-536735496(r0)	    # movsi load
	b.ori   	r7,r7,1
	bw.sw    	-536735496(r0),r7	   # movsi store
	b.movi 	r13,1	     # movsi imm P
	b.j    	.L284
.L292:
.LBB7:
	.stabn	68,0,522,.LM391-.LFBB12
.LM391:
	b.ori  	r5,r0,17	  # movsi imm J
	l.mfspr r5,r5,0
.LBE7:
	b.ori  	r6,r0,17	  # movsi imm J
	b.andi  	r7,r5,-7
	l.mtspr r6,r7,0
	.stabn	68,0,523,.LM392-.LFBB12
.LM392:
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.add   	r7,r7,r20
	b.movi  	r6,1	    # movqi imm P
	b.sb    	0(r7),r6	   # movqi store
	.stabn	68,0,530,.LM393-.LFBB12
.LM393:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r5,0
	b.movi 	r13,1	     # movsi imm P
.L284:
	.stabn	68,0,535,.LM394-.LFBB12
.LM394:
	b.addi  	r12,r12,1
	.stabn	68,0,670,.LM395-.LFBB12
.LM395:
	bw.lwz   	r7,(_img)(r0)	    # movsi load
	b.addi  	r6,r7,1
	bw.sw    	(_img)(r0),r6	   # movsi store
	.stabn	68,0,671,.LM396-.LFBB12
.LM396:
	bw.lbz   	r7,(_avata_capture_mode)(r0)
	b.beqi  	r7,0,.L294
	.stabn	68,0,673,.LM397-.LFBB12
.LM397:
	b.ori  	r7,r0,30	  # movsi imm J
	b.mod  	r7,r6,r7
	b.ori  	r6,r0,29	  # movsi imm J
	b.bne   	r7,r6,.L296
	.stabn	68,0,674,.LM398-.LFBB12
.LM398:
	bw.lwz   	r7,-536735496(r0)	    # movsi load
	b.ori   	r7,r7,1
	bw.sw    	-536735496(r0),r7	   # movsi store
	b.j    	.L296
.L294:
	.stabn	68,0,676,.LM399-.LFBB12
.LM399:
	b.ori  	r7,r0,60	  # movsi imm J
	b.bne   	r12,r7,.L298
	.stabn	68,0,678,.LM400-.LFBB12
.LM400:
	bw.lwz   	r7,-536735496(r0)	    # movsi load
	b.ori   	r7,r7,1
	bw.sw    	-536735496(r0),r7	   # movsi store
	b.j    	.L296
.L298:
	.stabn	68,0,680,.LM401-.LFBB12
.LM401:
	b.ori  	r5,r0,120	  # movsi imm J
	b.bne   	r12,r5,.L296
	.stabn	68,0,682,.LM402-.LFBB12
.LM402:
	bw.lwz   	r7,-536735496(r0)	    # movsi load
	b.ori   	r7,r7,1
	bw.sw    	-536735496(r0),r7	   # movsi store
.L296:
	.stabn	68,0,685,.LM403-.LFBB12
.LM403:
	b.bnei  	r15,0,.L301
	b.movi 	r15,1	     # movsi imm P
	b.j    	.L303
.L301:
	.stabn	68,0,687,.LM404-.LFBB12
.LM404:
	b.sfnei 	r15,1
	b.movi 	r7,2	     # movsi imm P
	b.cmov  	r15,r0,r7
.L303:
	.stabn	68,0,692,.LM405-.LFBB12
.LM405:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.beqi  	r7,0,.L306
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,3,.L308
.L306:
	.stabn	68,0,694,.LM406-.LFBB12
.LM406:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-805175224(r0),r7	   # movsi store
	b.j    	.L276
.L308:
	.stabn	68,0,696,.LM407-.LFBB12
.LM407:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.beqi  	r7,1,.L309
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,2,.L276
.L309:
	.stabn	68,0,698,.LM408-.LFBB12
.LM408:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-805142456(r0),r7	   # movsi store
.L276:
	.stabn	68,0,702,.LM409-.LFBB12
.LM409:
	b.bnei  	r14,0,.L311
	b.movi 	r14,1	     # movsi imm P
	b.j    	.L313
.L311:
	.stabn	68,0,704,.LM410-.LFBB12
.LM410:
	b.sfnei 	r14,1
	b.movi 	r7,2	     # movsi imm P
	b.cmov  	r14,r0,r7
.L313:
	.stabn	68,0,711,.LM411-.LFBB12
.LM411:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.beqi  	r7,0,.L316
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,3,.L318
.L316:
	.stabn	68,0,713,.LM412-.LFBB12
.LM412:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-805142456(r0),r7	   # movsi store
	b.j    	.L319
.L318:
	.stabn	68,0,715,.LM413-.LFBB12
.LM413:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.beqi  	r7,1,.L320
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,2,.L319
.L320:
	.stabn	68,0,717,.LM414-.LFBB12
.LM414:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-805175224(r0),r7	   # movsi store
.L319:
	.stabn	68,0,720,.LM415-.LFBB12
.LM415:
	bw.lwz   	r7,(_command_video_stop)(r0)	    # movsi load
	b.beqi  	r7,0,.L322
	b.mov  	r5,r14	     # movsi
	.stabn	68,0,722,.LM416-.LFBB12
.LM416:
	bw.lbz   	r7,(_avata_capture_mode)(r0)
	b.beqi  	r7,0,.L324
	b.movi 	r7,0	     # movsi imm P
.L326:
	.stabn	68,0,725,.LM417-.LFBB12
.LM417:
	l.nop   0
	b.addi  	r7,r7,1
	b.ori  	r6,r0,10000000	  # movsi imm i
	b.bne   	r7,r6,.L326
	.stabn	68,0,726,.LM418-.LFBB12
.LM418:
	b.movi 	r7,3	     # movsi imm P
	bw.sw    	-536735652(r0),r7	   # movsi store
.L328:
	b.j    	.L328
.L324:
	.stabn	68,0,729,.LM419-.LFBB12
.LM419:
	bw.sw    	(_command_video_stop)(r0),r0	   # movsi store
	.stabn	68,0,731,.LM420-.LFBB12
.LM420:
	b.beqi  	r15,1,.L329
.L413:
	.stabn	68,0,733,.LM421-.LFBB12
.LM421:
	bw.lwz   	r7,-805175228(r0)	    # movsi load
	b.blesi  	r7,1,.L413
.L366:
	.stabn	68,0,735,.LM422-.LFBB12
.LM422:
	bw.lwz   	r7,-805142460(r0)	    # movsi load
	b.blesi  	r7,1,.L366
	.stabn	68,0,744,.LM423-.LFBB12
.LM423:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.beqi  	r7,0,.L333
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,3,.L335
.L333:
	.stabn	68,0,746,.LM424-.LFBB12
.LM424:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-805175224(r0),r7	   # movsi store
	b.j    	.L336
.L335:
	.stabn	68,0,748,.LM425-.LFBB12
.LM425:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.beqi  	r7,1,.L337
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,2,.L336
.L337:
	.stabn	68,0,750,.LM426-.LFBB12
.LM426:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-805142456(r0),r7	   # movsi store
.L336:
	.stabn	68,0,731,.LM427-.LFBB12
.LM427:
	b.beqi  	r15,0,.L329
	b.movi 	r15,0	     # movsi imm P
	b.j    	.L413
.L329:
	.stabn	68,0,754,.LM428-.LFBB12
.LM428:
	b.beqi  	r5,1,.L368
.L414:
	.stabn	68,0,756,.LM429-.LFBB12
.LM429:
	bw.lwz   	r7,-805175228(r0)	    # movsi load
	b.blesi  	r7,1,.L414
.L367:
	.stabn	68,0,758,.LM430-.LFBB12
.LM430:
	bw.lwz   	r7,-805142460(r0)	    # movsi load
	b.blesi  	r7,1,.L367
	.stabn	68,0,767,.LM431-.LFBB12
.LM431:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.beqi  	r7,0,.L344
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,3,.L346
.L344:
	.stabn	68,0,769,.LM432-.LFBB12
.LM432:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-805142456(r0),r7	   # movsi store
	b.j    	.L347
.L346:
	.stabn	68,0,771,.LM433-.LFBB12
.LM433:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.beqi  	r7,1,.L348
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,2,.L347
.L348:
	.stabn	68,0,773,.LM434-.LFBB12
.LM434:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-805175224(r0),r7	   # movsi store
.L347:
	.stabn	68,0,754,.LM435-.LFBB12
.LM435:
	b.beqi  	r14,0,.L368
	b.movi 	r14,0	     # movsi imm P
	b.j    	.L414
.L368:
	.stabn	68,0,777,.LM436-.LFBB12
.LM436:
	bw.lwz   	r7,-805175228(r0)	    # movsi load
	b.blesi  	r7,1,.L368
.L369:
	.stabn	68,0,779,.LM437-.LFBB12
.LM437:
	bw.lwz   	r7,-805142460(r0)	    # movsi load
	b.blesi  	r7,1,.L369
	.stabn	68,0,782,.LM438-.LFBB12
.LM438:
	bw.sw    	-805175220(r0),r0	   # movsi store
	.stabn	68,0,783,.LM439-.LFBB12
.LM439:
	bw.sw    	-805142452(r0),r0	   # movsi store
	.stabn	68,0,785,.LM440-.LFBB12
.LM440:
	b.jal  	_init_video_streamBuf
	.stabn	68,0,786,.LM441-.LFBB12
.LM441:
	b.jal  	_free_global_buffers
	b.movi 	r14,1	     # movsi imm P
	b.movi 	r15,1	     # movsi imm P
	b.j    	.L206
.L322:
	.stabn	68,0,308,.LM442-.LFBB12
.LM442:
	bw.lwz   	r7,(_img)(r0)	    # movsi load
	b.slli  	r6,r7,1
	bw.sw    	(_img+664)(r0),r6	   # movsi store
	.stabn	68,0,309,.LM443-.LFBB12
.LM443:
	b.andi  	r7,r7,255
	bw.sw    	(_img+668)(r0),r7	   # movsi store
	.stabn	68,0,313,.LM444-.LFBB12
.LM444:
	bw.lwz   	r7,(_isVideoPropertySet)(r0)	    # movsi load
	b.bnei  	r7,0,.L226
	b.j    	.L412
	.size	_lencod, .-_lencod
	.stabs	"err:(18,2)",128,0,165,447
	.stabs	"prevFrameRate:r(0,1)",64,0,167,17
	.stabs	"prevZoomLevel:r(0,1)",64,0,168,16
	.stabs	"frame_sel:r(0,1)",64,0,170,15
	.stabs	"j_frame_sel:r(0,1)",64,0,171,14
	.stabs	"nop_i:r(0,1)",64,0,175,7
	.stabs	"i:r(0,1)",64,0,176,6
	.stabs	"prev_i:r(0,1)",64,0,181,13
	.stabs	"encodeCnt:r(0,1)",64,0,185,12
	.stabs	"sensor_get_retry_cnt:r(0,1)",64,0,186,6
	.stabs	"jpeg_fps:r(0,1)",64,0,187,7
	.stabs	"tempBuf:(0,18)=ar(5,8);0;255;(0,2)",128,0,189,191
	.stabs	"targetClockTick:r(0,4)",64,0,191,11
	.stabs	"cinfo:(20,42)",128,0,194,0
	.stabn	192,0,0,.LFBB12-.LFBB12
	.stabs	"val:r(0,4)",64,0,400,10
	.stabn	192,0,0,.LBB2-.LFBB12
	.stabn	224,0,0,.LBE2-.LFBB12
	.stabs	"val:r(0,4)",64,0,422,10
	.stabn	192,0,0,.LBB3-.LFBB12
	.stabn	224,0,0,.LBE3-.LFBB12
	.stabs	"val:r(0,4)",64,0,456,7
	.stabn	192,0,0,.LBB4-.LFBB12
	.stabn	224,0,0,.LBE4-.LFBB12
	.stabs	"val:r(0,4)",64,0,458,7
	.stabn	192,0,0,.LBB5-.LFBB12
	.stabn	224,0,0,.LBE5-.LFBB12
	.stabs	"val:r(0,4)",64,0,496,5
	.stabn	192,0,0,.LBB6-.LFBB12
	.stabn	224,0,0,.LBE6-.LFBB12
	.stabs	"val:r(0,4)",64,0,522,5
	.stabn	192,0,0,.LBB7-.LFBB12
	.stabn	224,0,0,.LBE7-.LFBB12
	.stabn	224,0,0,.Lscope12-.LFBB12
.Lscope12:
	.stabs	"",36,0,0,.Lscope12-.LFBB12
	.stabd	78,0,0
	.global _target_one_frame_size_byte
.section .bss
	.align 4
	.type	_target_one_frame_size_byte, @object
	.size	_target_one_frame_size_byte, 4
_target_one_frame_size_byte:
	.zero	4
	.global _target_bit_rate
	.align 4
	.type	_target_bit_rate, @object
	.size	_target_bit_rate, 4
_target_bit_rate:
	.zero	4
	.global _target_frame_rate
	.align 4
	.type	_target_frame_rate, @object
	.size	_target_frame_rate, 4
_target_frame_rate:
	.zero	4
	.global _orig_target_one_frame_size_byte
	.align 4
	.type	_orig_target_one_frame_size_byte, @object
	.size	_orig_target_one_frame_size_byte, 4
_orig_target_one_frame_size_byte:
	.zero	4
	.global _diff_one_frame_size_byte
	.align 4
	.type	_diff_one_frame_size_byte, @object
	.size	_diff_one_frame_size_byte, 4
_diff_one_frame_size_byte:
	.zero	4
	.global _diff_two_frame_size_byte
	.align 4
	.type	_diff_two_frame_size_byte, @object
	.size	_diff_two_frame_size_byte, 4
_diff_two_frame_size_byte:
	.zero	4
	.global _diff_four_frame_size_byte
	.align 4
	.type	_diff_four_frame_size_byte, @object
	.size	_diff_four_frame_size_byte, 4
_diff_four_frame_size_byte:
	.zero	4
	.global _diff_one_frame_size_byte_prev1
	.align 4
	.type	_diff_one_frame_size_byte_prev1, @object
	.size	_diff_one_frame_size_byte_prev1, 4
_diff_one_frame_size_byte_prev1:
	.zero	4
	.global _diff_one_frame_size_byte_prev2
	.align 4
	.type	_diff_one_frame_size_byte_prev2, @object
	.size	_diff_one_frame_size_byte_prev2, 4
_diff_one_frame_size_byte_prev2:
	.zero	4
	.global _diff_one_frame_size_byte_prev3
	.align 4
	.type	_diff_one_frame_size_byte_prev3, @object
	.size	_diff_one_frame_size_byte_prev3, 4
_diff_one_frame_size_byte_prev3:
	.zero	4
	.global _diff_one_frame_size_byte_prev4
	.align 4
	.type	_diff_one_frame_size_byte_prev4, @object
	.size	_diff_one_frame_size_byte_prev4, 4
_diff_one_frame_size_byte_prev4:
	.zero	4
	.local	_prev_target_frame_rate.4314
	.comm	_prev_target_frame_rate.4314,4,4
	.local	_prev_target_bit_rate.4313
	.comm	_prev_target_bit_rate.4313,4,4
	.comm	_active_pps,4,4
	.comm	_active_sps,4,4
	.comm	_input,160,4
	.comm	_img,872,4
	.comm	_bits_to_go,4,4
	.comm	_cam_cb_offset_aligned_temp,4,4
	.comm	_cam_cr_offset_aligned_temp,4,4
	.comm	_pEventExternalTaskDone,4,4
	.comm	_bits_per_frame,4,4
	.comm	_tmp_y,4,4
	.comm	_tmp_u,4,4
	.comm	_tmp_v,4,4
	.comm	_pStartSem,4,4
	.comm	_max_bit_rate_value,4,4
	.comm	_less_than_orig_target_cnt,4,4
	.stabs	"prev_target_bit_rate:V(0,1)",38,0,1209,_prev_target_bit_rate.4313
	.stabs	"prev_target_frame_rate:V(0,1)",38,0,1210,_prev_target_frame_rate.4314
	.stabs	"active_pps:G(0,19)=*(15,3)",32,0,97,0
	.stabs	"active_sps:G(0,20)=*(15,5)",32,0,100,0
	.stabs	"input:G(13,27)",32,0,113,0
	.stabs	"img:G(13,30)",32,0,116,0
	.stabs	"bits_to_go:G(0,1)",32,0,120,0
	.stabs	"cam_cb_offset_aligned_temp:G(0,1)",32,0,436,0
	.stabs	"cam_cr_offset_aligned_temp:G(0,1)",32,0,437,0
	.stabs	"pEventExternalTaskDone:G(17,12)",32,0,15,0
	.stabs	"bits_per_frame:G(0,1)",32,0,121,0
	.stabs	"tmp_y:G(0,1)",32,0,122,0
	.stabs	"tmp_u:G(0,1)",32,0,122,0
	.stabs	"tmp_v:G(0,1)",32,0,122,0
	.stabs	"pStartSem:G(17,12)",32,0,131,0
	.stabs	"max_bit_rate_value:G(0,1)",32,0,146,0
	.stabs	"less_than_orig_target_cnt:G(0,1)",32,0,147,0
	.stabs	"target_one_frame_size_byte:G(0,1)",32,0,1192,0
	.stabs	"target_bit_rate:G(0,1)",32,0,1193,0
	.stabs	"target_frame_rate:G(0,1)",32,0,1194,0
	.stabs	"orig_target_one_frame_size_byte:G(0,1)",32,0,1195,0
	.stabs	"diff_one_frame_size_byte:G(0,1)",32,0,1196,0
	.stabs	"diff_two_frame_size_byte:G(0,1)",32,0,1197,0
	.stabs	"diff_four_frame_size_byte:G(0,1)",32,0,1198,0
	.stabs	"diff_one_frame_size_byte_prev1:G(0,1)",32,0,1199,0
	.stabs	"diff_one_frame_size_byte_prev2:G(0,1)",32,0,1200,0
	.stabs	"diff_one_frame_size_byte_prev3:G(0,1)",32,0,1201,0
	.stabs	"diff_one_frame_size_byte_prev4:G(0,1)",32,0,1202,0
.section .internalrom, "ax"
	.stabs	"",100,0,0,.Letext0
.Letext0:
	.ident	"GCC: (GNU) 4.2.1"
