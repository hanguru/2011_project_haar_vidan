	.file	"slice.c"
	.stabs	"/home/hanguru/2011_project_original/lgdtv_vidan4110_fw_capp_project/software/vi_fw_project/",100,0,2,.Ltext0
	.stabs	"internal/slice.c",100,0,2,.Ltext0
.section .internalrom, "ax"
.Ltext0:
	.stabs	"gcc2_compiled.",60,0,0,0
	.stabs	"int:t(0,1)=r(0,1);-2147483648;2147483647;",128,0,0,0
	.stabs	"char:t(0,2)=r(0,2);0;127;",128,0,0,0
	.stabs	"long int:t(0,3)=r(0,3);-2147483648;2147483647;",128,0,0,0
	.stabs	"unsigned int:t(0,4)=r(0,4);0;037777777777;",128,0,0,0
	.stabs	"long unsigned int:t(0,5)=r(0,5);0;037777777777;",128,0,0,0
	.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,0
	.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
	.stabs	"short int:t(0,8)=@s16;r(0,8);-32768;32767;",128,0,0,0
	.stabs	"short unsigned int:t(0,9)=@s16;r(0,9);0;65535;",128,0,0,0
	.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
	.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
	.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
	.stabs	"double:t(0,13)=r(0,1);8;0;",128,0,0,0
	.stabs	"long double:t(0,14)=r(0,1);8;0;",128,0,0,0
	.stabs	"void:t(0,15)=(0,15)",128,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/stdlib.h",130,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/include/stddef.h",130,0,0,0
	.stabs	"size_t:t(2,1)=(0,5)",128,0,214,0
	.stabs	"wchar_t:t(2,2)=(0,1)",128,0,326,0
	.stabn	162,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/sys/reent.h",130,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/sys/_types.h",130,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/sys/lock.h",130,0,0,0
	.stabs	"_LOCK_T:t(5,1)=(0,1)",128,0,6,0
	.stabs	"_LOCK_RECURSIVE_T:t(5,2)=(0,1)",128,0,7,0
	.stabn	162,0,0,0
	.stabs	"_off_t:t(4,1)=(0,3)",128,0,14,0
	.stabs	"_off64_t:t(4,2)=(0,6)",128,0,15,0
	.stabs	"_ssize_t:t(4,3)=(0,1)",128,0,18,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/include/stddef.h",130,0,0,0
	.stabs	"wint_t:t(6,1)=(0,4)",128,0,355,0
	.stabn	162,0,0,0
	.stabs	"_mbstate_t:t(4,4)=(4,5)=s8__count:(0,1),0,32;__value:(4,6)=u4__wch:(6,1),0,32;__wchb:(4,7)=ar(4,8)=r(4,8);0;037777777777;;0;3;(0,11),0,32;;,32,32;;",128,0,35,0
	.stabs	"_flock_t:t(4,9)=(5,2)",128,0,37,0
	.stabs	"_iconv_t:t(4,10)=(4,11)=*(0,15)",128,0,40,0
	.stabn	162,0,0,0
	.stabs	"__ULong:t(3,1)=(0,5)",128,0,19,0
	.stabs	"_Bigint:T(3,2)=s24_next:(3,3)=*(3,2),0,32;_k:(0,1),32,32;_maxwds:(0,1),64,32;_sign:(0,1),96,32;_wds:(0,1),128,32;_x:(3,4)=ar(4,8);0;0;(3,1),160,32;;",128,0,0,0
	.stabs	"__tm:T(3,5)=s36__tm_sec:(0,1),0,32;__tm_min:(0,1),32,32;__tm_hour:(0,1),64,32;__tm_mday:(0,1),96,32;__tm_mon:(0,1),128,32;__tm_year:(0,1),160,32;__tm_wday:(0,1),192,32;__tm_yday:(0,1),224,32;__tm_isdst:(0,1),256,32;;",128,0,0,0
	.stabs	"_on_exit_args:T(3,6)=s264_fnargs:(3,7)=ar(4,8);0;31;(4,11),0,1024;_dso_handle:(3,7),1024,1024;_fntypes:(3,1),2048,32;_is_cxa:(3,1),2080,32;;",128,0,0,0
	.stabs	"_atexit:T(3,8)=s400_next:(3,9)=*(3,8),0,32;_ind:(0,1),32,32;_fns:(3,10)=ar(4,8);0;31;(3,11)=*(3,12)=f(0,15),64,1024;_on_exit_args:(3,6),1088,2112;;",128,0,0,0
	.stabs	"__sbuf:T(3,13)=s8_base:(3,14)=*(0,11),0,32;_size:(0,1),32,32;;",128,0,0,0
	.stabs	"_fpos_t:t(3,15)=(0,3)",128,0,111,0
	.stabs	"__sFILE:T(3,16)=s92_p:(3,14),0,32;_r:(0,1),32,32;_w:(0,1),64,32;_flags:(0,8),96,16;_file:(0,8),112,16;_bf:(3,13),128,64;_lbfsize:(0,1),192,32;_cookie:(4,11),224,32;_read:(3,17)=*(3,18)=f(0,1),256,32;_write:(3,19)=*(3,20)=f(0,1),288,32;_seek:(3,21)=*(3,22)=f(3,15),320,32;_close:(3,23)=*(3,24)=f(0,1),352,32;_ub:(3,13),384,64;_up:(3,14),448,32;_ur:(0,1),480,32;_ubuf:(3,25)=ar(4,8);0;2;(0,11),512,24;_nbuf:(3,26)=ar(4,8);0;0;(0,11),536,8;_lb:(3,13),544,64;_blksize:(0,1),608,32;_offset:(0,1),640,32;_data:(3,27)=*(3,28)=xs_reent:,672,32;_lock:(4,9),704,32;;",128,0,0,0
	.stabs	"__FILE:t(3,29)=(3,16)",128,0,259,0
	.stabs	"_glue:T(3,30)=s12_next:(3,31)=*(3,30),0,32;_niobs:(0,1),32,32;_iobs:(3,32)=*(3,29),64,32;;",128,0,0,0
	.stabs	"_rand48:T(3,33)=s16_seed:(3,34)=ar(4,8);0;2;(0,9),0,48;_mult:(3,34),48,48;_add:(0,9),96,16;;",128,0,0,0
	.stabs	"_reent:T(3,28)=s1024_errno:(0,1),0,32;_stdin:(3,32),32,32;_stdout:(3,32),64,32;_stderr:(3,32),96,32;_inc:(0,1),128,32;_emergency:(3,35)=ar(4,8);0;24;(0,2),160,200;_current_category:(0,1),384,32;_current_locale:(3,36)=*(3,37)=k(0,2),416,32;__sdidinit:(0,1),448,32;__cleanup:(3,38)=*(3,39)=f(0,15),480,32;_result:(3,3),512,32;_result_k:(0,1),544,32;_p5s:(3,3),576,32;_freelist:(3,40)=*(3,3),608,32;_cvtlen:(0,1),640,32;_cvtbuf:(3,41)=*(0,2),672,32;_new:(3,42)=u240_reent:(3,43)=s208_unused_rand:(0,4),0,32;_strtok_last:(3,41),32,32;_asctime_buf:(3,44)=ar(4,8);0;25;(0,2),64,208;_localtime_buf:(3,5),288,288;_gamma_signgam:(0,1),576,32;_rand_next:(0,7),640,64;_r48:(3,33),704,128;_mblen_state:(4,4),832,64;_mbtowc_state:(4,4),896,64;_wctomb_state:(4,4),960,64;_l64a_buf:(3,45)=ar(4,8);0;7;(0,2),1024,64;_signal_buf:(3,46)=ar(4,8);0;23;(0,2),1088,192;_getdate_err:(0,1),1280,32;_mbrlen_state:(4,4),1312,64;_mbrtowc_state:(4,4),1376,64;_mbsrtowcs_state:(4,4),1440,64;_wcrtomb_state:(4,4),1504,64;_wcsrtombs_state:(4,4),1568,64;;,0,1664;_unused:(3,47)=s240_nextf:(3,48)=ar(4,8);0;29;(3,14),0,960;_nmalloc:(3,49)=ar(4,8);0;29;(0,4),960,960;;,0,1920;;,704,1920;_atexit:(3,9),2624,32;_atexit0:(3,8),2656,3200;_sig_func:(3,50)=*(3,51)=*(3,52)=f(0,15),5856,32;__sglue:(3,30),5888,96;__sf:(3,53)=ar(4,8);0;2;(3,29),5984,2208;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"div_t:t(1,1)=(1,2)=s8quot:(0,1),0,32;rem:(0,1),32,32;;",128,0,32,0
	.stabs	"ldiv_t:t(1,3)=(1,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,38,0
	.stabs	"lldiv_t:t(1,5)=(1,6)=s16quot:(0,6),0,64;rem:(0,6),64,64;;",128,0,45,0
	.stabn	162,0,0,0
	.stabs	"src/global.h",130,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/stdio.h",130,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/include/stdarg.h",130,0,0,0
	.stabs	"__gnuc_va_list:t(9,1)=(9,2)=*(0,15)",128,0,43,0
	.stabn	162,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/sys/types.h",130,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/machine/_types.h",130,0,0,0
	.stabs	"__int8_t:t(11,1)=(0,10)",128,0,26,0
	.stabs	"__uint8_t:t(11,2)=(0,11)",128,0,27,0
	.stabs	"__int16_t:t(11,3)=(0,8)",128,0,36,0
	.stabs	"__uint16_t:t(11,4)=(0,9)",128,0,37,0
	.stabs	"__int_least16_t:t(11,5)=(11,3)",128,0,46,0
	.stabs	"__uint_least16_t:t(11,6)=(11,4)",128,0,47,0
	.stabs	"__int32_t:t(11,7)=(0,1)",128,0,58,0
	.stabs	"__uint32_t:t(11,8)=(0,4)",128,0,59,0
	.stabs	"__int_least32_t:t(11,9)=(11,7)",128,0,76,0
	.stabs	"__uint_least32_t:t(11,10)=(11,8)",128,0,77,0
	.stabs	"__int64_t:t(11,11)=(0,6)",128,0,99,0
	.stabs	"__uint64_t:t(11,12)=(0,7)",128,0,100,0
	.stabn	162,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/include/stddef.h",130,0,0,0
	.stabs	"ptrdiff_t:t(12,1)=(0,3)",128,0,152,0
	.stabn	162,0,0,0
	.stabs	"/home/hanguru/2011_project_original/download/opt/ba-elf-r15702.i686-linux/bin/../lib/gcc/ba-elf/4.2.1/../../../../ba-elf/include/machine/types.h",130,0,0,0
	.stabs	"__off_t:t(13,1)=(0,3)",128,0,19,0
	.stabs	"__pid_t:t(13,2)=(0,1)",128,0,20,0
	.stabs	"__loff_t:t(13,3)=(0,6)",128,0,22,0
	.stabn	162,0,0,0
	.stabs	"u_char:t(10,1)=(0,11)",128,0,92,0
	.stabs	"u_short:t(10,2)=(0,9)",128,0,93,0
	.stabs	"u_int:t(10,3)=(0,4)",128,0,94,0
	.stabs	"u_long:t(10,4)=(0,5)",128,0,95,0
	.stabs	"ushort:t(10,5)=(0,9)",128,0,99,0
	.stabs	"uint:t(10,6)=(0,4)",128,0,100,0
	.stabs	"clock_t:t(10,7)=(0,5)",128,0,104,0
	.stabs	"time_t:t(10,8)=(0,3)",128,0,109,0
	.stabs	"timespec:T(10,9)=s8tv_sec:(10,8),0,32;tv_nsec:(0,3),32,32;;",128,0,0,0
	.stabs	"itimerspec:T(10,10)=s16it_interval:(10,9),0,64;it_value:(10,9),64,64;;",128,0,0,0
	.stabs	"daddr_t:t(10,11)=(0,3)",128,0,125,0
	.stabs	"caddr_t:t(10,12)=(3,41)",128,0,126,0
	.stabs	"ino_t:t(10,13)=(0,9)",128,0,135,0
	.stabs	"dev_t:t(10,14)=(0,8)",128,0,169,0
	.stabs	"off_t:t(10,15)=(0,3)",128,0,174,0
	.stabs	"uid_t:t(10,16)=(0,9)",128,0,176,0
	.stabs	"gid_t:t(10,17)=(0,9)",128,0,177,0
	.stabs	"pid_t:t(10,18)=(0,1)",128,0,180,0
	.stabs	"key_t:t(10,19)=(0,3)",128,0,182,0
	.stabs	"ssize_t:t(10,20)=(4,3)",128,0,184,0
	.stabs	"mode_t:t(10,21)=(0,4)",128,0,198,0
	.stabs	"nlink_t:t(10,22)=(0,9)",128,0,203,0
	.stabs	"fd_mask:t(10,23)=(0,3)",128,0,225,0
	.stabs	"_types_fd_set:T(10,24)=s8fds_bits:(10,25)=ar(4,8);0;1;(10,23),0,64;;",128,0,0,0
	.stabs	"_types_fd_set:t(10,26)=(10,24)",128,0,235,0
	.stabs	"clockid_t:t(10,27)=(0,5)",128,0,256,0
	.stabs	"timer_t:t(10,28)=(0,5)",128,0,261,0
	.stabs	"useconds_t:t(10,29)=(0,3)",128,0,265,0
	.stabn	162,0,0,0
	.stabs	"FILE:t(8,1)=(3,29)",128,0,50,0
	.stabs	"fpos_t:t(8,2)=(3,15)",128,0,59,0
	.stabn	162,0,0,0
	.stabs	"src/defines.h",130,0,0,0
	.stabs	"byte:t(14,1)=(0,11)",128,0,24,0
	.stabn	162,0,0,0
	.stabs	"src/parsetcommon.h",130,0,0,0
	.stabs	" :T(15,1)=eFALSE:0,TRUE:1,;",128,0,0,0
	.stabs	"Boolean:t(15,2)=(15,1)",128,0,33,0
	.stabs	"pic_parameter_set_rbsp_t:t(15,3)=(15,4)=s4num_ref_idx_l0_active_minus1:(0,4),0,32;;",128,0,40,0
	.stabs	"seq_parameter_set_rbsp_t:t(15,5)=(15,6)=s8pic_width_in_mbs_minus1:(0,4),0,32;pic_height_in_map_units_minus1:(0,4),32,32;;",128,0,48,0
	.stabn	162,0,0,0
	.stabs	" :T(7,1)=eINTER_MB:0,INTRA_MB_4x4:1,INTRA_MB_16x16:2,;",128,0,0,0
	.stabs	"IntraInterDecision:t(7,2)=(7,1)",128,0,58,0
	.stabs	" :T(7,3)=eP_SLICE:0,I_SLICE:1,;",128,0,0,0
	.stabs	"SliceType:t(7,4)=(7,3)",128,0,63,0
	.stabs	"pix_pos:T(7,5)=s24available:(0,1),0,32;mb_addr:(0,1),32,32;x:(0,1),64,32;y:(0,1),96,32;pos_x:(0,1),128,32;pos_y:(0,1),160,32;;",128,0,0,0
	.stabs	"PixelPos:t(7,6)=(7,5)",128,0,73,0
	.stabs	"syntaxelement:T(7,7)=s24value1:(0,1),0,32;value2:(0,1),32,32;len:(0,1),64,32;inf:(0,1),96,32;bitpattern:(0,4),128,32;mapping:(7,8)=*(7,9)=f(0,15),160,32;;",128,0,0,0
	.stabs	"SyntaxElement:t(7,10)=(7,7)",128,0,87,0
	.stabs	"macroblock:T(7,11)=s300currSEnr:(0,1),0,32;delta_qp:(0,1),32,32;qp:(0,1),64,32;mb_type:(0,1),96,32;mvd:(7,12)=ar(4,8);0;3;(7,13)=ar(4,8);0;3;(7,14)=ar(4,8);0;1;(0,1),128,1024;intra_pred_modes:(7,15)=ar(4,8);0;15;(0,1),1152,512;cbp:(0,1),1664,32;cbp_blk:(0,1),1696,32;b8mode:(7,16)=ar(4,8);0;3;(0,1),1728,128;b8pdir:(7,16),1856,128;lf_disable:(0,1),1984,32;lf_alpha_c0_offset:(0,1),2016,32;lf_beta_offset:(0,1),2048,32;c_ipred_mode:(0,1),2080,32;IntraChromaPredModeFlag:(0,1),2112,32;mbAddrA:(0,1),2144,32;mbAddrB:(0,1),2176,32;mbAddrC:(0,1),2208,32;mbAddrD:(0,1),2240,32;mbAvailA:(0,1),2272,32;mbAvailB:(0,1),2304,32;mbAvailC:(0,1),2336,32;mbAvailD:(0,1),2368,32;;",128,0,0,0
	.stabs	"Macroblock:t(7,17)=(7,11)",128,0,115,0
	.stabs	"prev_macroblock:T(7,18)=s20qp:(0,1),0,32;mb_type:(0,1),32,32;cbp_blk:(0,1),64,32;lf_alpha_c0_offset:(0,1),96,32;lf_beta_offset:(0,1),128,32;;",128,0,0,0
	.stabs	"Prev_Macroblock:t(7,19)=(7,18)",128,0,125,0
	.stabs	"Slice:t(7,20)=(7,21)=s12qp:(0,1),0,32;start_mb_nr:(0,1),32,32;num_mb:(0,1),64,32;;",128,0,135,0
	.stabs	"Picture:t(7,22)=(7,23)=s8no_slices:(0,1),0,32;slices:(7,24)=*(7,20),32,32;;",128,0,143,0
	.stabs	"Sourceframe:t(7,25)=(7,26)=s20x_size:(0,1),0,32;y_framesize:(0,1),32,32;yf:(3,41),64,32;uf:(3,41),96,32;vf:(3,41),128,32;;",128,0,153,0
	.stabs	"input_par:T(7,27)=s160qp0:(0,1),0,32;qpN:(0,1),32,32;jumpd:(0,1),64,32;img_width:(0,1),96,32;img_height:(0,1),128,32;cam_width:(0,1),160,32;cam_height:(0,1),192,32;cb_offset:(0,1),224,32;blc_size:(7,28)=ar(4,8);0;7;(7,14),256,512;intra_period:(0,1),768,32;LFSendParameters:(0,1),800,32;LFDisableIdc:(0,1),832,32;LFAlphaC0Offset:(0,1),864,32;LFBetaOffset:(0,1),896,32;RCEnable:(0,1),928,32;bit_rate0:(0,1),960,32;bit_rate1:(0,1),992,32;bit_rate:(0,1),1024,32;PrevBitRate:(0,1),1056,32;FrameRate:(0,1),1088,32;SeinitialQP0:(0,1),1120,32;SeinitialQP1:(0,1),1152,32;SeinitialQP:(0,1),1184,32;slice_mode:(0,1),1216,32;slice_argument:(0,1),1248,32;;",128,0,0,0
	.stabs	"InputParameters:t(7,29)=(7,27)",128,0,218,0
	.stabs	"img_par:T(7,30)=s872number:(0,1),0,32;current_mb_nr:(0,1),32,32;total_number_mb:(0,1),64,32;type:(0,1),96,32;qp:(0,1),128,32;prev_qp:(0,1),160,32;width:(0,1),192,32;width_cr:(0,1),224,32;height:(0,1),256,32;height_cr:(0,1),288,32;mb_x:(0,1),320,32;mb_y:(0,1),352,32;block_x:(0,1),384,32;block_y:(0,1),416,32;subblock_x:(0,1),448,32;subblock_y:(0,1),480,32;pix_x:(0,1),512,32;pix_y:(0,1),544,32;mb_y_upd:(0,1),576,32;cod_counter:(0,1),608,32;currentSlice:(7,24),640,32;mb_data_q:(7,17),672,2400;mb_data_h:(7,19),3072,160;mb_data_v:(7,31)=*(7,19),3232,32;MB_SyntaxElements:(7,32)=ar(4,8);0;9;(7,10),3264,1920;num_ref_idx_l0_active:(0,1),5184,32;num_ref_idx_l1_active:(0,1),5216,32;i16offset:(0,1),5248,32;pic_order_cnt_lsb:(0,4),5280,32;framepoc:(0,1),5312,32;frame_num:(0,4),5344,32;PicWidthInMbs0:(0,4),5376,32;FrameHeightInMbs0:(0,4),5408,32;FrameSizeInMbs0:(0,4),5440,32;PicWidthInMbs1:(0,4),5472,32;FrameHeightInMbs1:(0,4),5504,32;FrameSizeInMbs1:(0,4),5536,32;PicWidthInMbs:(0,4),5568,32;FrameHeightInMbs:(0,4),5600,32;PicSizeInMbs:(0,4),5632,32;FrameSizeInMbs:(0,4),5664,32;nal_reference_idc:(0,1),5696,32;prev_mb_x:(0,1),5728,32;prev_mb_y:(0,1),5760,32;prev_prev_mb_x:(0,1),5792,32;prev_prev_mb_y:(0,1),5824,32;next_mb_x:(0,1),5856,32;next_mb_y:(0,1),5888,32;number_mb_per_row:(0,1),5920,32;number_mb_per_row_mul_four:(0,1),5952,32;number_mb_per_row_mul_six:(0,1),5984,32;prevf_enc_time:(0,1),6016,32;targetfr_enc_time:(0,1),6048,32;targetmb_enc_time:(0,1),6080,32;avg_mb_enc_time_of_line:(7,33)=*(0,1),6112,32;Frame_Total_Number_MB:(0,1),6144,32;framerate:(0,1),6176,32;NumberofCodedPFrame0:(0,1),6208,32;NumberofCodedPFrame1:(0,1),6240,32;NumberofCodedPFrame:(0,1),6272,32;NumberofGOP0:(0,1),6304,32;NumberofGOP1:(0,1),6336,32;NumberofGOP:(0,1),6368,32;MADofMB:(7,33),6400,32;TotalQpforPPicture0:(0,1),6432,32;TotalQpforPPicture1:(0,1),6464,32;TotalQpforPPicture:(0,1),6496,32;NumberofPPicture0:(0,1),6528,32;NumberofPPicture1:(0,1),6560,32;NumberofPPicture:(0,1),6592,32;NumberofHeaderBits0:(0,1),6624,32;NumberofHeaderBits1:(0,1),6656,32;NumberofHeaderBits:(0,1),6688,32;NumberofTextureBits0:(0,1),6720,32;NumberofTextureBits1:(0,1),6752,32;NumberofTextureBits:(0,1),6784,32;width_offset:(0,1),6816,32;height_offset:(0,1),6848,32;cam_width:(0,1),6880,32;cam_height:(0,1),6912,32;cb_offset:(0,1),6944,32;;",128,0,0,0
	.stabs	"ImageParameters:t(7,34)=(7,30)",128,0,356,0
	.stabn	162,0,0,0
	.stabs	"interface/commandProcess.h",130,0,0,0
	.stabs	"ucos/ucos_ii.h",130,0,0,0
	.stabs	"ucos/os_cpu.h",130,0,0,0
	.stabs	"BOOLEAN:t(18,1)=(0,11)",128,0,9,0
	.stabs	"INT8U:t(18,2)=(0,11)",128,0,10,0
	.stabs	"INT8S:t(18,3)=(0,2)",128,0,11,0
	.stabs	"INT16U:t(18,4)=(0,9)",128,0,12,0
	.stabs	"INT16S:t(18,5)=(0,8)",128,0,13,0
	.stabs	"INT32U:t(18,6)=(0,5)",128,0,14,0
	.stabs	"INT32S:t(18,7)=(0,3)",128,0,15,0
	.stabs	"VBOOLEAN:t(18,8)=(18,9)=B(0,11)",128,0,16,0
	.stabs	"OS_STK:t(18,10)=(0,4)",128,0,17,0
	.stabs	"OS_CPU_SR:t(18,11)=(0,4)",128,0,18,0
	.stabn	162,0,0,0
	.stabs	"ucos/os_cfg.h",130,0,0,0
	.stabs	"OS_FLAGS:t(19,1)=(18,4)",128,0,112,0
	.stabn	162,0,0,0
	.stabs	"os_event:T(17,1)=s44OSEventType:(18,2),0,8;OSEventGrp:(18,2),8,8;OSEventCnt:(18,4),16,16;OSEventPtr:(4,11),32,32;OSEventTbl:(17,2)=ar(4,8);0;0;(18,2),64,8;OSEventName:(17,3)=ar(4,8);0;31;(0,2),72,256;;",128,0,0,0
	.stabs	"OS_EVENT:t(17,4)=(17,1)",128,0,257,0
	.stabs	"os_sem_data:T(17,5)=s4OSCnt:(18,4),0,16;OSEventTbl:(17,2),16,8;OSEventGrp:(18,2),24,8;;",128,0,0,0
	.stabs	"OS_SEM_DATA:t(17,6)=(17,5)",128,0,387,0
	.stabs	"os_stk_data:T(17,7)=s8OSFree:(18,6),0,32;OSUsed:(18,6),32,32;;",128,0,0,0
	.stabs	"OS_STK_DATA:t(17,8)=(17,7)",128,0,400,0
	.stabs	"os_tcb:T(17,9)=s96OSTCBStkPtr:(17,10)=*(18,10),0,32;OSTCBExtPtr:(4,11),32,32;OSTCBStkBottom:(17,10),64,32;OSTCBStkSize:(18,6),96,32;OSTCBOpt:(18,4),128,16;OSTCBId:(18,4),144,16;OSTCBNext:(17,11)=*(17,9),160,32;OSTCBPrev:(17,11),192,32;OSTCBEventPtr:(17,12)=*(17,4),224,32;OSTCBDly:(18,4),256,16;OSTCBStat:(18,2),272,8;OSTCBPendTO:(18,1),280,8;OSTCBPrio:(18,2),288,8;OSTCBX:(18,2),296,8;OSTCBY:(18,2),304,8;OSTCBBitX:(18,2),312,8;OSTCBBitY:(18,2),320,8;OSTCBDelReq:(18,2),328,8;OSTCBCtxSwCtr:(18,6),352,32;OSTCBCyclesTot:(18,6),384,32;OSTCBCyclesStart:(18,6),416,32;OSTCBStkBase:(17,10),448,32;OSTCBStkUsed:(18,6),480,32;OSTCBTaskName:(17,3),512,256;;",128,0,0,0
	.stabs	"OS_TCB:t(17,13)=(17,9)",128,0,464,0
	.stabn	162,0,0,0
	.stabs	" :T(16,1)=eUSB_COMMAND_FIRMWARE_VERSION_CHECK_FAIL:-9,USB_COMMAND_FIRMWARE_UPLOAD_FAIL:-8,USB_COMMAND_FIRMWARE_SET_LENGTH_FAIL:-7,USB_COMMAND_FIRMWARE_SDRAM_WRITE_FAIL:-6,USB_COMMAND_VIDEOAPISET_FAIL:-5,USB_COMMAND_STREAM_NOT_READY:-4,USB_COMMAND_I2C_FAIL:-3,USB_COMMAND_UNDEFINED_COMMAND:-2,USB_COMMAND_FAIL:-1,USB_COMMAND_SUCCESS:0,;",128,0,0,0
	.stabs	" :T(16,2)=eINTERNAL_REGISTER_READ:16,INTERNAL_REGISTER_WRITE:17,HIF_REGISTER_READ:32,HIF_REGISTER_WRITE:33,HIF_REGISTER_BIT_SET:34,HIF_REGISTER_BIT_RESET:35,I2C_MASTER_READ:48,I2C_MASTER_WRITE:49,STREAM_GET_JPEG_LENGTH:64,STREAM_GET_H264_LENGTH:65,STREAM_GET_PCMIN_LENGTH:66,COMMAND_VIDEO_START:80,COMMAND_VIDEO_STOP:81,COMMAND_AUDIO_START:82,COMMAND_AUDIO_STOP:83,COMMAND_FIRMWARE_SDRAM_WRITE:84,COMMAND_FIRMWARE_SET_LENGTH:85,COMMAND_FIRMWARE_UPLOAD:86,COMMAND_FIRMWARE_VERSION_CHECK:87,VIDEO_API_SET:96,;",128,0,0,0
	.stabs	"VIDEO_STREAM_BUF:t(16,3)=(16,4)=s24len:(16,5)=ar(4,8);0;1;(16,6)=B(0,1),0,64;address:(16,5),64,64;full:(16,7)=ar(4,8);0;1;(16,8)=B(0,2),128,16;set_idx:(16,8),144,8;get_idx:(16,8),152,8;count:(16,8),160,8;;",128,0,55,0
	.stabs	"PCM_STREAM_BUF:t(16,9)=(16,10)=s96len:(16,11)=ar(4,8);0;9;(16,6),0,320;address:(16,11),320,320;full:(16,12)=ar(4,8);0;9;(16,8),640,80;set_idx:(16,8),720,8;get_idx:(16,8),728,8;count:(16,8),736,8;;",128,0,66,0
	.stabn	162,0,0,0
	.global ___floatsisf
	.global ___extendsfdf2
	.global ___muldf3
	.global ___mulsf3
	.global ___addsf3
	.global ___divdf3
	.global ___truncdfsf2
	.global ___divsf3
	.global ___fixsfsi
.proc _compute_slice_argument
	.stabs	"compute_slice_argument:F(0,1)",36,0,94,_compute_slice_argument
	.stabs	"bitrate:P(0,1)",64,0,93,11
	.stabs	"type:P(0,1)",64,0,93,10
	.global _compute_slice_argument
	.type	_compute_slice_argument, @function
_compute_slice_argument:
	.stabd	46,0,0
	.stabn	68,0,94,.LM0-.LFBB1
.LM0:
.LFBB1:
	b.entri 	5,0
	b.mov  	r11,r3	     # movsi
	b.mov  	r10,r4	     # movsi
	.stabn	68,0,100,.LM1-.LFBB1
.LM1:
	bw.lwz   	r3,-536735472(r0)	    # movsi load
	bw.lwz   	r7,-536735640(r0)	    # movsi load
	b.div   	r3,r3,r7
	b.addi  	r3,r3,1
	b.jal  	___floatsisf
	b.mov  	r13,r3	     # movsi
	.stabn	68,0,104,.LM2-.LFBB1
.LM2:
	b.bnei  	r10,0,.L2
.LBB2:
	.stabn	68,0,106,.LM3-.LFBB1
.LM3:
	bw.lwz   	r10,-536735472(r0)	    # movsi load
	.stabn	68,0,107,.LM4-.LFBB1
.LM4:
	b.mov  	r3,r11	     # movsi
	b.jal  	___floatsisf
	b.jal  	___extendsfdf2
	b.ori  	r5,r0,1075838976	  # movsi imm i
	b.movi 	r6,0	     # movsi imm P
	b.jal  	___muldf3
	b.mov  	r11,r3	     # movsi
	b.mov  	r12,r4	     # movsi
	b.mov  	r3,r10	     # movsi
	b.jal  	___floatsisf
	b.mov  	r10,r3	     # movsi
	b.mov  	r3,r13	     # movsi
	b.ori  	r4,r0,1084227584	  # movsi imm i
	b.jal  	___mulsf3
	b.mov  	r4,r3	     # movsi
	b.mov  	r3,r10	     # movsi
	b.jal  	___addsf3
	b.jal  	___extendsfdf2
	b.mov  	r5,r3	     # movsi
	b.mov  	r6,r4	     # movsi
	b.mov  	r3,r11	     # movsi
	b.mov  	r4,r12	     # movsi
	b.jal  	___divdf3
	b.jal  	___truncdfsf2
	b.mov  	r10,r3	     # movsi
	b.j    	.L4
.L2:
.LBE2:
.LBB3:
	.stabn	68,0,111,.LM5-.LFBB1
.LM5:
	bw.lwz   	r10,-536735472(r0)	    # movsi load
	.stabn	68,0,112,.LM6-.LFBB1
.LM6:
	b.mov  	r3,r11	     # movsi
	b.jal  	___floatsisf
	b.jal  	___extendsfdf2
	b.ori  	r5,r0,1074790400	  # movsi imm i
	b.movi 	r6,0	     # movsi imm P
	b.jal  	___muldf3
	b.mov  	r11,r3	     # movsi
	b.mov  	r12,r4	     # movsi
	b.mov  	r3,r10	     # movsi
	b.jal  	___floatsisf
	b.mov  	r10,r3	     # movsi
	b.mov  	r3,r13	     # movsi
	b.mov  	r4,r13	     # movsi
	b.jal  	___addsf3
	b.mov  	r4,r3	     # movsi
	b.mov  	r3,r10	     # movsi
	b.jal  	___addsf3
	b.jal  	___extendsfdf2
	b.mov  	r5,r3	     # movsi
	b.mov  	r6,r4	     # movsi
	b.mov  	r3,r11	     # movsi
	b.mov  	r4,r12	     # movsi
	b.jal  	___divdf3
	b.jal  	___truncdfsf2
	b.mov  	r10,r3	     # movsi
.L4:
	bw.lwz   	r3,(_NAL_BIT_SIZE)(r0)	    # movsi load
	b.jal  	___floatsisf
	b.mov  	r4,r3	     # movsi
	b.mov  	r3,r10	     # movsi
	b.jal  	___divsf3
	b.ori  	r4,r0,1065353216	  # movsi imm i
	b.jal  	___addsf3
	b.jal  	___fixsfsi
.LBE3:
	.stabn	68,0,119,.LM7-.LFBB1
.LM7:
	b.reti  	5,0
	.size	_compute_slice_argument, .-_compute_slice_argument
	.stabs	"frame_bit:r(0,12)",64,0,95,10
	.stabs	"f_no_intra:r(0,12)",64,0,97,13
	.stabn	192,0,0,.LFBB1-.LFBB1
	.stabn	224,0,0,.Lscope1-.LFBB1
.Lscope1:
	.stabs	"",36,0,0,.Lscope1-.LFBB1
	.stabd	78,0,0
.proc _simpleLineRateControl
	.stabs	"simpleLineRateControl:F(0,15)",36,0,1118,_simpleLineRateControl
	.stabs	"mby:P(0,1)",64,0,1117,3
	.stabs	"img_height_in_mb:P(0,1)",64,0,1117,4
	.global _simpleLineRateControl
	.type	_simpleLineRateControl, @function
_simpleLineRateControl:
	.stabd	46,0,0
	.stabn	68,0,1118,.LM8-.LFBB2
.LM8:
.LFBB2:
	.stabn	68,0,1123,.LM9-.LFBB2
.LM9:
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.slli  	r7,r7,2
	b.addi  	r7,r7,_h264DualStreamBuf
	b.lwz   	r4,0(r7)	    # movsi load
	.stabn	68,0,1126,.LM10-.LFBB2
.LM10:
	bw.lwz   	r6,(_target_one_frame_size_byte)(r0)	    # movsi load
	b.movi 	r7,5	     # movsi imm P
	b.div   	r6,r6,r7
	.stabn	68,0,1128,.LM11-.LFBB2
.LM11:
	b.bnei  	r3,5,.L7
	.stabn	68,0,1131,.LM12-.LFBB2
.LM12:
	b.addi  	r7,r6,150
	b.bles   	r4,r7,.L9
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,3
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L11
.L9:
	.stabn	68,0,1132,.LM13-.LFBB2
.LM13:
	b.addi  	r7,r6,-250
	b.bles   	r4,r7,.L12
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,2
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L11
.L12:
	.stabn	68,0,1133,.LM14-.LFBB2
.LM14:
	b.addi  	r7,r6,-300
	b.bles   	r4,r7,.L11
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_input+4)(r0),r7	   # movsi store
.L11:
	.stabn	68,0,1134,.LM15-.LFBB2
.LM15:
	bw.sh    	(_result_size_byte_until_5)(r0),r4	   # movhi store
	b.j    	.L15
.L7:
	.stabn	68,0,1136,.LM16-.LFBB2
.LM16:
	b.ori  	r7,r0,23	  # movsi imm J
	b.bne   	r3,r7,.L15
	.stabn	68,0,1127,.LM17-.LFBB2
.LM17:
	b.movi 	r7,3	     # movsi imm P
	b.mul   	r23,r6,r7
	.stabn	68,0,1137,.LM18-.LFBB2
.LM18:
	bw.lhz   	r7,(_result_size_byte_until_5)(r0)
	b.exths 	r5,r7
	b.sub   	r4,r4,r5
	.stabn	68,0,1138,.LM19-.LFBB2
.LM19:
	b.addi  	r7,r6,-300
	b.bgts   	r5,r7,.L17
	.stabn	68,0,1139,.LM20-.LFBB2
.LM20:
	b.bges   	r23,r4,.L19
	.stabn	68,0,1140,.LM21-.LFBB2
.LM21:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,4
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L15
.L19:
	.stabn	68,0,1141,.LM22-.LFBB2
.LM22:
	b.addi  	r7,r23,-600
	b.bles   	r4,r7,.L21
	.stabn	68,0,1142,.LM23-.LFBB2
.LM23:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,3
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L15
.L21:
	.stabn	68,0,1143,.LM24-.LFBB2
.LM24:
	b.addi  	r7,r23,-2000
	b.bles   	r4,r7,.L15
	.stabn	68,0,1144,.LM25-.LFBB2
.LM25:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,2
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L15
.L17:
	.stabn	68,0,1146,.LM26-.LFBB2
.LM26:
	b.addi  	r7,r6,-250
	b.bgts   	r5,r7,.L24
	.stabn	68,0,1147,.LM27-.LFBB2
.LM27:
	b.addi  	r7,r23,-500
	b.bles   	r4,r7,.L26
	.stabn	68,0,1148,.LM28-.LFBB2
.LM28:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,3
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L15
.L26:
	.stabn	68,0,1149,.LM29-.LFBB2
.LM29:
	b.addi  	r7,r23,-1000
	b.bles   	r4,r7,.L15
	.stabn	68,0,1150,.LM30-.LFBB2
.LM30:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,2
	bw.sw    	(_input+4)(r0),r7	   # movsi store
	b.j    	.L15
.L24:
	.stabn	68,0,1151,.LM31-.LFBB2
.LM31:
	b.addi  	r7,r6,150
	b.bgts   	r5,r7,.L15
	.stabn	68,0,1152,.LM32-.LFBB2
.LM32:
	b.addi  	r7,r23,-1000
	b.bles   	r4,r7,.L15
	.stabn	68,0,1153,.LM33-.LFBB2
.LM33:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	b.addi  	r7,r7,2
	bw.sw    	(_input+4)(r0),r7	   # movsi store
.L15:
	.stabn	68,0,1157,.LM34-.LFBB2
.LM34:
	bw.lwz   	r7,(_input+4)(r0)	    # movsi load
	bw.sw    	(_img+16)(r0),r7	   # movsi store
	.stabn	68,0,1159,.LM35-.LFBB2
.LM35:
	b.jr    	r9
	.size	_simpleLineRateControl, .-_simpleLineRateControl
	.stabs	"result_size_byte_until_now:r(0,1)",64,0,1119,4
	.stabs	"target_one_frame_size_byte_div_5:r(0,1)",64,0,1120,6
	.stabs	"target_one_frame_size_byte_div_3_5:r(0,1)",64,0,1121,23
	.stabs	"size_diff:r(0,1)",64,0,1122,4
	.stabn	192,0,0,.LFBB2-.LFBB2
	.stabn	224,0,0,.Lscope2-.LFBB2
.Lscope2:
	.stabs	"",36,0,0,.Lscope2-.LFBB2
	.stabd	78,0,0
.proc _free_slice_list
	.stabs	"free_slice_list:F(0,15)",36,0,1088,_free_slice_list
	.stabs	"currPic:P(0,16)=*(7,22)",64,0,1087,10
	.global _free_slice_list
	.type	_free_slice_list, @function
_free_slice_list:
	.stabd	46,0,0
	.stabn	68,0,1088,.LM36-.LFBB3
.LM36:
.LFBB3:
	b.entri 	2,0
	b.mov  	r10,r3	     # movsi
	.stabn	68,0,1089,.LM37-.LFBB3
.LM37:
	b.lwz   	r3,4(r3)	    # movsi load
.LBB6:
.LBB7:
	.stabn	68,0,1107,.LM38-.LFBB3
.LM38:
	b.beqi  	r3,0,.L33
	.stabn	68,0,1109,.LM39-.LFBB3
.LM39:
	b.jal  	_free
.L33:
.LBE7:
.LBE6:
	.stabn	68,0,1090,.LM40-.LFBB3
.LM40:
	b.sw    	4(r10),r0	   # movsi store
	.stabn	68,0,1093,.LM41-.LFBB3
.LM41:
	b.reti  	2,0
	.size	_free_slice_list, .-_free_slice_list
	.stabs	"slice:r(7,24)",64,0,1089,3
	.stabn	192,0,0,.LBB6-.LFBB3
	.stabn	224,0,0,.LBE6-.LFBB3
.Lscope3:
	.stabs	"",36,0,0,.Lscope3-.LFBB3
	.stabd	78,0,0
.proc _start_slice
	.stabs	"start_slice:F(0,15)",36,0,74,_start_slice
	.stabs	"first_mb_in_slice:P(0,1)",64,0,73,10
	.global _start_slice
	.type	_start_slice, @function
_start_slice:
	.stabd	46,0,0
	.stabn	68,0,74,.LM42-.LFBB4
.LM42:
.LFBB4:
	b.entri 	2,0
	b.mov  	r10,r3	     # movsi
	.stabn	68,0,75,.LM43-.LFBB4
.LM43:
	b.movi 	r3,5	     # movsi imm P
	b.jal  	_GenerateHeader
	.stabn	68,0,76,.LM44-.LFBB4
.LM44:
	b.mov  	r3,r10	     # movsi
	b.jal  	_SliceHeader
	.stabn	68,0,80,.LM45-.LFBB4
.LM45:
	bw.lwz   	r7,(_img+32)(r0)	    # movsi load
	b.slli  	r7,r7,16
	bw.lwz   	r6,(_img+24)(r0)	    # movsi load
	b.or    	r7,r7,r6
	bw.sw    	-2147221504(r0),r7	   # movsi store
	.stabn	68,0,81,.LM46-.LFBB4
.LM46:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.sfeqi 	r7,0
	b.movi 	r6,1	     # movsi imm P
	b.cmov  	r7,r7,r6
	bw.sw    	-2147221500(r0),r7	   # movsi store
	.stabn	68,0,82,.LM47-.LFBB4
.LM47:
	bw.lwz   	r7,(_img+16)(r0)	    # movsi load
	bw.sw    	-2147221496(r0),r7	   # movsi store
	.stabn	68,0,84,.LM48-.LFBB4
.LM48:
	bw.sw    	(_end_of_slice)(r0),r0	   # movsi store
	.stabn	68,0,85,.LM49-.LFBB4
.LM49:
	bw.sw    	(_end_of_last_slice)(r0),r0	   # movsi store
	.stabn	68,0,91,.LM50-.LFBB4
.LM50:
	b.reti  	2,0
	.size	_start_slice, .-_start_slice
.Lscope4:
	.stabs	"",36,0,0,.Lscope4-.LFBB4
	.stabd	78,0,0
.proc _encode_one_slice
	.stabs	"encode_one_slice:F(0,15)",36,0,131,_encode_one_slice
	.global _encode_one_slice
	.type	_encode_one_slice, @function
_encode_one_slice:
	.stabd	46,0,0
	.stabn	68,0,131,.LM51-.LFBB5
.LM51:
.LFBB5:
	b.entri 	14,12
	.stabn	68,0,133,.LM52-.LFBB5
.LM52:
	bw.lwz   	r6,(_img+8)(r0)	    # movsi load
	b.sw    	24(r1),r6	   # movsi store
	.stabn	68,0,171,.LM53-.LFBB5
.LM53:
	bw.sw    	(_img+76)(r0),r0	   # movsi store
	.stabn	68,0,172,.LM54-.LFBB5
.LM54:
	bw.lwz   	r7,(_img+24)(r0)	    # movsi load
	b.srai  	r10,r7,4
	.stabn	68,0,173,.LM55-.LFBB5
.LM55:
	bw.lwz   	r7,(_img+32)(r0)	    # movsi load
	b.srai  	r7,r7,4
	b.sw    	28(r1),r7	   # movsi store
	.stabn	68,0,176,.LM56-.LFBB5
.LM56:
	bw.sw    	(_bits_per_frame)(r0),r0	   # movsi store
	.stabn	68,0,179,.LM57-.LFBB5
.LM57:
	bw.sw    	(_slice_no)(r0),r0	   # movsi store
	.stabn	68,0,181,.LM58-.LFBB5
.LM58:
	b.movi 	r3,0	     # movsi imm P
	b.jal  	_start_slice
	.stabn	68,0,185,.LM59-.LFBB5
.LM59:
	b.ori  	r7,r0,21	  # movsi imm J
	bw.sw    	-2147221420(r0),r7	   # movsi store
	.stabn	68,0,188,.LM60-.LFBB5
.LM60:
	b.ori  	r7,r0,1048578	  # movsi imm i
	bw.sw    	-2147286880(r0),r7	   # movsi store
	.stabn	68,0,194,.LM61-.LFBB5
.LM61:
	b.ori  	r7,r0,3211292	  # movsi imm i
	bw.sw    	-2147221408(r0),r7	   # movsi store
	.stabn	68,0,253,.LM62-.LFBB5
.LM62:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.movi 	r5,6	     # movsi imm P
	b.beqi  	r7,0,.L42
	.stabn	68,0,258,.LM63-.LFBB5
.LM63:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.sfnei 	r7,1
	b.movi 	r7,3	     # movsi imm P
	b.cmov  	r5,r0,r7
.L42:
	.stabn	68,0,265,.LM64-.LFBB5
.LM64:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.bnei  	r7,0,.L45
	bw.lwz   	r6,(_img)(r0)	    # movsi load
	b.beqi  	r6,1,.L45
	.stabn	68,0,267,.LM65-.LFBB5
.LM65:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,0,.L48
	.stabn	68,0,269,.LM66-.LFBB5
.LM66:
	b.sub    	r7,r0,r6
	b.mod  	r7,r7,r5
	b.bnei  	r7,0,.L50
	.stabn	68,0,270,.LM67-.LFBB5
.LM67:
	bw.sw    	(_random_temp)(r0),r0	   # movsi store
	b.movi 	r7,6	     # movsi imm P
	bw.sw    	(_random_temp+4)(r0),r7	   # movsi store
	b.ori  	r7,r0,12	  # movsi imm J
	bw.sw    	(_random_temp+8)(r0),r7	   # movsi store
	b.ori  	r7,r0,18	  # movsi imm J
	bw.sw    	(_random_temp+12)(r0),r7	   # movsi store
	b.ori  	r7,r0,24	  # movsi imm J
	bw.sw    	(_random_temp+16)(r0),r7	   # movsi store
	b.j    	.L45
.L50:
	.stabn	68,0,272,.LM68-.LFBB5
.LM68:
	b.bnei  	r7,2,.L52
	.stabn	68,0,273,.LM69-.LFBB5
.LM69:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	(_random_temp)(r0),r7	   # movsi store
	b.movi 	r7,7	     # movsi imm P
	bw.sw    	(_random_temp+4)(r0),r7	   # movsi store
	b.ori  	r7,r0,13	  # movsi imm J
	bw.sw    	(_random_temp+8)(r0),r7	   # movsi store
	b.ori  	r7,r0,19	  # movsi imm J
	bw.sw    	(_random_temp+12)(r0),r7	   # movsi store
	b.ori  	r7,r0,25	  # movsi imm J
	bw.sw    	(_random_temp+16)(r0),r7	   # movsi store
	b.j    	.L45
.L52:
	.stabn	68,0,275,.LM70-.LFBB5
.LM70:
	b.bnei  	r7,4,.L54
	.stabn	68,0,276,.LM71-.LFBB5
.LM71:
	b.movi 	r7,2	     # movsi imm P
	bw.sw    	(_random_temp)(r0),r7	   # movsi store
	b.ori  	r7,r0,8	  # movsi imm J
	bw.sw    	(_random_temp+4)(r0),r7	   # movsi store
	b.ori  	r7,r0,14	  # movsi imm J
	bw.sw    	(_random_temp+8)(r0),r7	   # movsi store
	b.ori  	r7,r0,20	  # movsi imm J
	bw.sw    	(_random_temp+12)(r0),r7	   # movsi store
	b.ori  	r7,r0,26	  # movsi imm J
	bw.sw    	(_random_temp+16)(r0),r7	   # movsi store
	b.j    	.L45
.L54:
	.stabn	68,0,278,.LM72-.LFBB5
.LM72:
	b.bnei  	r7,5,.L56
	.stabn	68,0,279,.LM73-.LFBB5
.LM73:
	b.movi 	r7,3	     # movsi imm P
	bw.sw    	(_random_temp)(r0),r7	   # movsi store
	b.ori  	r7,r0,9	  # movsi imm J
	bw.sw    	(_random_temp+4)(r0),r7	   # movsi store
	b.ori  	r7,r0,15	  # movsi imm J
	bw.sw    	(_random_temp+8)(r0),r7	   # movsi store
	b.ori  	r7,r0,21	  # movsi imm J
	bw.sw    	(_random_temp+12)(r0),r7	   # movsi store
	b.ori  	r7,r0,27	  # movsi imm J
	bw.sw    	(_random_temp+16)(r0),r7	   # movsi store
	b.j    	.L45
.L56:
	.stabn	68,0,281,.LM74-.LFBB5
.LM74:
	b.bnei  	r7,3,.L58
	.stabn	68,0,282,.LM75-.LFBB5
.LM75:
	b.movi 	r7,4	     # movsi imm P
	bw.sw    	(_random_temp)(r0),r7	   # movsi store
	b.ori  	r7,r0,10	  # movsi imm J
	bw.sw    	(_random_temp+4)(r0),r7	   # movsi store
	b.ori  	r7,r0,16	  # movsi imm J
	bw.sw    	(_random_temp+8)(r0),r7	   # movsi store
	b.ori  	r7,r0,22	  # movsi imm J
	bw.sw    	(_random_temp+12)(r0),r7	   # movsi store
	b.ori  	r7,r0,28	  # movsi imm J
	bw.sw    	(_random_temp+16)(r0),r7	   # movsi store
	b.j    	.L45
.L58:
	.stabn	68,0,284,.LM76-.LFBB5
.LM76:
	b.bnei  	r7,1,.L45
	.stabn	68,0,285,.LM77-.LFBB5
.LM77:
	b.movi 	r7,5	     # movsi imm P
	bw.sw    	(_random_temp)(r0),r7	   # movsi store
	b.ori  	r7,r0,11	  # movsi imm J
	bw.sw    	(_random_temp+4)(r0),r7	   # movsi store
	b.ori  	r7,r0,17	  # movsi imm J
	bw.sw    	(_random_temp+8)(r0),r7	   # movsi store
	b.ori  	r7,r0,23	  # movsi imm J
	bw.sw    	(_random_temp+12)(r0),r7	   # movsi store
	b.ori  	r7,r0,29	  # movsi imm J
	bw.sw    	(_random_temp+16)(r0),r7	   # movsi store
	b.j    	.L45
.L48:
	.stabn	68,0,288,.LM78-.LFBB5
.LM78:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,1,.L45
	.stabn	68,0,290,.LM79-.LFBB5
.LM79:
	b.sub    	r7,r0,r6
	b.mod  	r7,r7,r5
	b.bnei  	r7,1,.L62
	.stabn	68,0,291,.LM80-.LFBB5
.LM80:
	bw.sw    	(_random_temp)(r0),r0	   # movsi store
	b.movi 	r7,3	     # movsi imm P
	bw.sw    	(_random_temp+4)(r0),r7	   # movsi store
	b.movi 	r7,6	     # movsi imm P
	bw.sw    	(_random_temp+8)(r0),r7	   # movsi store
	b.ori  	r7,r0,9	  # movsi imm J
	bw.sw    	(_random_temp+12)(r0),r7	   # movsi store
	b.ori  	r7,r0,12	  # movsi imm J
	bw.sw    	(_random_temp+16)(r0),r7	   # movsi store
	b.j    	.L45
.L62:
	.stabn	68,0,293,.LM81-.LFBB5
.LM81:
	b.bnei  	r7,0,.L64
	.stabn	68,0,294,.LM82-.LFBB5
.LM82:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	(_random_temp)(r0),r7	   # movsi store
	b.movi 	r7,4	     # movsi imm P
	bw.sw    	(_random_temp+4)(r0),r7	   # movsi store
	b.movi 	r7,7	     # movsi imm P
	bw.sw    	(_random_temp+8)(r0),r7	   # movsi store
	b.ori  	r7,r0,10	  # movsi imm J
	bw.sw    	(_random_temp+12)(r0),r7	   # movsi store
	b.ori  	r7,r0,13	  # movsi imm J
	bw.sw    	(_random_temp+16)(r0),r7	   # movsi store
	b.j    	.L45
.L64:
	.stabn	68,0,296,.LM83-.LFBB5
.LM83:
	b.bnei  	r7,2,.L45
	.stabn	68,0,297,.LM84-.LFBB5
.LM84:
	bw.sw    	(_random_temp)(r0),r7	   # movsi store
	b.movi 	r7,5	     # movsi imm P
	bw.sw    	(_random_temp+4)(r0),r7	   # movsi store
	b.ori  	r7,r0,8	  # movsi imm J
	bw.sw    	(_random_temp+8)(r0),r7	   # movsi store
	b.ori  	r7,r0,11	  # movsi imm J
	bw.sw    	(_random_temp+12)(r0),r7	   # movsi store
	b.ori  	r7,r0,14	  # movsi imm J
	bw.sw    	(_random_temp+16)(r0),r7	   # movsi store
.L45:
	.stabn	68,0,316,.LM85-.LFBB5
.LM85:
	bw.lwz   	r7,(_img+16)(r0)	    # movsi load
	bw.sw    	(_img+20)(r0),r7	   # movsi store
	.stabn	68,0,317,.LM86-.LFBB5
.LM86:
	b.lwz   	r7,28(r1)	    # movsi load
	b.blesi  	r7,0,.L434
	b.movi 	r19,0	     # movsi imm P
	b.movi 	r17,0	     # movsi imm P
	b.movi 	r15,0	     # movsi imm P
	b.movi 	r14,0	     # movsi imm P
	b.sw    	20(r1),r0	   # movsi store
	b.movi 	r18,0	     # movsi imm P
	b.movi 	r12,0	     # movsi imm P
	.stabn	68,0,506,.LM87-.LFBB5
.LM87:
	b.lwz   	r23,24(r1)	    # movsi load
	b.slli  	r21,r23,16
	.stabn	68,0,548,.LM88-.LFBB5
.LM88:
	b.addi  	r6,r10,-1
	b.sw    	12(r1),r6	   # movsi store
	b.slli  	r7,r10,2
	b.addi  	r7,r7,-12
	b.sw    	8(r1),r7	   # movsi store
	.stabn	68,0,821,.LM89-.LFBB5
.LM89:
	b.slli  	r7,r6,16
	b.sw    	4(r1),r7	   # movsi store
.L69:
	.stabn	68,0,321,.LM90-.LFBB5
.LM90:
	bw.lwz   	r4,(_img+12)(r0)	    # movsi load
	b.movi 	r16,1	     # movsi imm P
	b.movi 	r20,0	     # movsi imm P
	b.beqi  	r4,0,.L72
	.stabn	68,0,327,.LM91-.LFBB5
.LM91:
	b.ff1   	r7,r4
	b.addi  	r7,r7,-1
	b.srli  	r20,r7,31
	b.movi 	r16,0	     # movsi imm P
.L72:
	.stabn	68,0,357,.LM92-.LFBB5
.LM92:
	bw.lwz   	r7,(_random_temp)(r0)	    # movsi load
	b.beq   	r7,r18,.L74
	bw.lwz   	r7,(_random_temp+4)(r0)	    # movsi load
	b.beq   	r7,r18,.L74
	bw.lwz   	r7,(_random_temp+8)(r0)	    # movsi load
	b.beq   	r7,r18,.L74
	bw.lwz   	r7,(_random_temp+12)(r0)	    # movsi load
	b.beq   	r7,r18,.L74
	bw.lwz   	r7,(_random_temp+16)(r0)	    # movsi load
	b.sfne  	r7,r18
	b.movi 	r7,1	     # movsi imm P
	b.cmov  	r6,r0,r7
	b.j    	.L80
.L74:
	b.movi 	r6,1	     # movsi imm P
.L80:
	.stabn	68,0,363,.LM93-.LFBB5
.LM93:
	b.movi 	r22,0	     # movsi imm P
	b.bnei  	r4,0,.L83
	b.movi  	r5,0	    # movqi imm P
	bw.lwz   	r7,(_img)(r0)	    # movsi load
	b.beqi  	r7,1,.L85
	b.beqi  	r6,1,.L84
.L85:
	b.movi  	r5,1	    # movqi imm P
.L84:
	b.movi 	r7,1	     # movsi imm P
	b.xor   	r7,r5,r7
	b.extbz 	r22,r7
.L83:
	.stabn	68,0,392,.LM94-.LFBB5
.LM94:
	bw.sw    	-805175208(r0),r18	   # movsi store
	.stabn	68,0,394,.LM95-.LFBB5
.LM95:
	b.slli  	r23,r18,2
	b.sw    	32(r1),r23	   # movsi store
.L86:
	.stabn	68,0,399,.LM96-.LFBB5
.LM96:
	bw.lwz   	r7,-2146828276(r0)	    # movsi load
	b.beqi  	r7,0,.L86
.L435:
	.stabn	68,0,400,.LM97-.LFBB5
.LM97:
	bw.lwz   	r7,-805175212(r0)	    # movsi load
	b.bnei  	r7,0,.L435
	.stabn	68,0,403,.LM98-.LFBB5
.LM98:
	b.bnei  	r16,1,.L89
	.stabn	68,0,404,.LM99-.LFBB5
.LM99:
	bw.sw    	-2147221500(r0),r0	   # movsi store
	.stabn	68,0,405,.LM100-.LFBB5
.LM100:
	bw.sw    	-2147221500(r0),r16	   # movsi store
.L89:
	.stabn	68,0,409,.LM101-.LFBB5
.LM101:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147418112(r0),r7	   # movsi store
	.stabn	68,0,410,.LM102-.LFBB5
.LM102:
	bw.sw    	-2147418112(r0),r0	   # movsi store
.L91:
	.stabn	68,0,411,.LM103-.LFBB5
.LM103:
	bw.lwz   	r7,-2147418108(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L91
.L436:
	.stabn	68,0,417,.LM104-.LFBB5
.LM104:
	bw.lwz   	r7,-2146828276(r0)	    # movsi load
	b.beqi  	r7,0,.L436
.L437:
	.stabn	68,0,418,.LM105-.LFBB5
.LM105:
	bw.lwz   	r7,-805175212(r0)	    # movsi load
	b.bnei  	r7,0,.L437
	.stabn	68,0,420,.LM106-.LFBB5
.LM106:
	b.beqi  	r20,0,.L95
.LBB8:
	.stabn	68,0,422,.LM107-.LFBB5
.LM107:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mfspr r5,r7,0
.LBE8:
	b.ori  	r6,r0,17	  # movsi imm J
	b.andi  	r7,r5,-7
	l.mtspr r6,r7,0
	.stabn	68,0,423,.LM108-.LFBB5
.LM108:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147221444(r0),r7	   # movsi store
	.stabn	68,0,424,.LM109-.LFBB5
.LM109:
	b.bnei  	r18,0,.L97
	.stabn	68,0,425,.LM110-.LFBB5
.LM110:
	bw.sw    	-2147221360(r0),r0	   # movsi store
	.stabn	68,0,426,.LM111-.LFBB5
.LM111:
	b.movi 	r7,-1	     # movsi imm P
	bw.sw    	-2147221356(r0),r7	   # movsi store
	.stabn	68,0,431,.LM112-.LFBB5
.LM112:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	b.lwz   	r6,20(r1)	    # movsi load
	b.bne   	r7,r6,.L99
	b.sw    	20(r1),r0	   # movsi store
	b.j    	.L441
.L97:
	.stabn	68,0,428,.LM113-.LFBB5
.LM113:
	b.lwz   	r7,20(r1)	    # movsi load
	b.bnei  	r7,0,.L102
	bw.sw    	-2147221360(r0),r18	   # movsi store
.L102:
	.stabn	68,0,429,.LM114-.LFBB5
.LM114:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	b.lwz   	r23,20(r1)	    # movsi load
	b.bne   	r7,r23,.L99
	bw.sw    	-2147221356(r0),r18	   # movsi store
	b.sw    	20(r1),r0	   # movsi store
	b.j    	.L441
.L99:
	.stabn	68,0,432,.LM115-.LFBB5
.LM115:
	b.lwz   	r6,20(r1)	    # movsi load
	b.addi  	r6,r6,1
	b.sw    	20(r1),r6	   # movsi store
.L441:
	.stabn	68,0,434,.LM116-.LFBB5
.LM116:
	bw.lwz   	r7,-2147221008(r0)	    # movsi load
	b.beqi  	r7,0,.L441
	.stabn	68,0,435,.LM117-.LFBB5
.LM117:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r5,0
	.stabn	68,0,436,.LM118-.LFBB5
.LM118:
	b.lwz   	r23,32(r1)	    # movsi load
	b.slli  	r7,r23,18
	b.ori   	r7,r7,262128
	bw.sw    	-2147221492(r0),r7	   # movsi store
	.stabn	68,0,438,.LM119-.LFBB5
.LM119:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147221464(r0),r7	   # movsi store
	.stabn	68,0,439,.LM120-.LFBB5
.LM120:
	bw.sw    	-2147418112(r0),r7	   # movsi store
	.stabn	68,0,440,.LM121-.LFBB5
.LM121:
	bw.sw    	-2147418112(r0),r0	   # movsi store
.L106:
	.stabn	68,0,441,.LM122-.LFBB5
.LM122:
	bw.lwz   	r7,-2147221056(r0)	    # movsi load
	b.andi  	r7,r7,2
	b.beqi  	r7,0,.L106
.LBB9:
	.stabn	68,0,442,.LM123-.LFBB5
.LM123:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mfspr r5,r7,0
.LBE9:
	b.ori  	r6,r0,17	  # movsi imm J
	b.andi  	r7,r5,-7
	l.mtspr r6,r7,0
	.stabn	68,0,443,.LM124-.LFBB5
.LM124:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147221444(r0),r7	   # movsi store
.L108:
	.stabn	68,0,444,.LM125-.LFBB5
.LM125:
	bw.lwz   	r7,-2147221056(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L108
.L442:
	.stabn	68,0,446,.LM126-.LFBB5
.LM126:
	bw.lwz   	r7,-2147418108(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L442
	b.mov  	r12,r5	     # movsi
	b.j    	.L443
.L95:
	.stabn	68,0,449,.LM127-.LFBB5
.LM127:
	bw.sw    	-2147286888(r0),r18	   # movsi store
	.stabn	68,0,450,.LM128-.LFBB5
.LM128:
	b.bnei  	r14,0,.L112
	bw.sw    	-2147286876(r0),r18	   # movsi store
.L112:
	.stabn	68,0,451,.LM129-.LFBB5
.LM129:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	b.bne   	r7,r14,.L114
	bw.sw    	-2147286872(r0),r18	   # movsi store
	b.movi 	r14,0	     # movsi imm P
	b.j    	.L116
.L114:
	.stabn	68,0,454,.LM130-.LFBB5
.LM130:
	b.addi  	r14,r14,1
.L116:
	.stabn	68,0,455,.LM131-.LFBB5
.LM131:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147287036(r0),r7	   # movsi store
	.stabn	68,0,456,.LM132-.LFBB5
.LM132:
	b.bnei  	r16,1,.L117
.L438:
	bw.lwz   	r7,-2147286972(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L438
	.stabn	68,0,458,.LM133-.LFBB5
.LM133:
	bw.sw    	-2147221500(r0),r0	   # movsi store
	.stabn	68,0,459,.LM134-.LFBB5
.LM134:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147221500(r0),r7	   # movsi store
	.stabn	68,0,461,.LM135-.LFBB5
.LM135:
	bw.sw    	-2147418112(r0),r7	   # movsi store
	.stabn	68,0,462,.LM136-.LFBB5
.LM136:
	bw.sw    	-2147418112(r0),r0	   # movsi store
	b.j    	.L120
.L117:
	.stabn	68,0,461,.LM137-.LFBB5
.LM137:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147418112(r0),r7	   # movsi store
	.stabn	68,0,462,.LM138-.LFBB5
.LM138:
	bw.sw    	-2147418112(r0),r0	   # movsi store
	b.j    	.L439
.L120:
	.stabn	68,0,463,.LM139-.LFBB5
.LM139:
	bw.lwz   	r7,-2147418108(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L120
.L439:
	.stabn	68,0,464,.LM140-.LFBB5
.LM140:
	bw.lwz   	r7,-2147286972(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L439
.L440:
	.stabn	68,0,465,.LM141-.LFBB5
.LM141:
	bw.lwz   	r7,-2147418108(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L440
.L443:
	.stabn	68,0,473,.LM142-.LFBB5
.LM142:
	bw.lwz   	r7,-2146828276(r0)	    # movsi load
	b.beqi  	r7,0,.L443
.L444:
	.stabn	68,0,474,.LM143-.LFBB5
.LM143:
	bw.lwz   	r7,-805175212(r0)	    # movsi load
	b.bnei  	r7,0,.L444
	.stabn	68,0,476,.LM144-.LFBB5
.LM144:
	b.beqi  	r20,0,.L125
	.stabn	68,0,478,.LM145-.LFBB5
.LM145:
	b.lwz   	r6,20(r1)	    # movsi load
	b.bnei  	r6,0,.L127
	b.ori   	r7,r18,65536
	bw.sw    	-2147221360(r0),r7	   # movsi store
.L127:
	.stabn	68,0,479,.LM146-.LFBB5
.LM146:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r6,r7,-1
	b.lwz   	r7,20(r1)	    # movsi load
	b.bne   	r6,r7,.L129
	b.ori   	r7,r18,65536
	bw.sw    	-2147221356(r0),r7	   # movsi store
	b.sw    	20(r1),r0	   # movsi store
	b.j    	.L131
.L129:
	.stabn	68,0,482,.LM147-.LFBB5
.LM147:
	b.lwz   	r23,20(r1)	    # movsi load
	b.addi  	r23,r23,1
	b.sw    	20(r1),r23	   # movsi store
.L131:
	.stabn	68,0,483,.LM148-.LFBB5
.LM148:
	bw.sw    	-2147286888(r0),r18	   # movsi store
	.stabn	68,0,484,.LM149-.LFBB5
.LM149:
	b.bnei  	r14,0,.L132
	bw.sw    	-2147286876(r0),r18	   # movsi store
.L132:
	.stabn	68,0,487,.LM150-.LFBB5
.LM150:
	b.addi  	r10,r14,1
	.stabn	68,0,485,.LM151-.LFBB5
.LM151:
	b.bne   	r6,r14,.L136
	bw.sw    	-2147286872(r0),r18	   # movsi store
	b.movi 	r10,0	     # movsi imm P
.L136:
	.stabn	68,0,488,.LM152-.LFBB5
.LM152:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147287036(r0),r7	   # movsi store
.L137:
	.stabn	68,0,489,.LM153-.LFBB5
.LM153:
	bw.lwz   	r7,-2147221008(r0)	    # movsi load
	b.beqi  	r7,0,.L137
	.stabn	68,0,490,.LM154-.LFBB5
.LM154:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r12,0
	.stabn	68,0,491,.LM155-.LFBB5
.LM155:
	b.lwz   	r6,32(r1)	    # movsi load
	b.slli  	r7,r6,18
	bw.sw    	-2147221492(r0),r7	   # movsi store
	.stabn	68,0,495,.LM156-.LFBB5
.LM156:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147221464(r0),r7	   # movsi store
	.stabn	68,0,496,.LM157-.LFBB5
.LM157:
	bw.sw    	-2147418112(r0),r7	   # movsi store
	.stabn	68,0,497,.LM158-.LFBB5
.LM158:
	bw.sw    	-2147418112(r0),r0	   # movsi store
.L139:
	.stabn	68,0,498,.LM159-.LFBB5
.LM159:
	bw.lwz   	r7,-2147418108(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L139
.L450:
	.stabn	68,0,499,.LM160-.LFBB5
.LM160:
	bw.lwz   	r7,-2147221056(r0)	    # movsi load
	b.andi  	r7,r7,2
	b.beqi  	r7,0,.L450
.L451:
	.stabn	68,0,500,.LM161-.LFBB5
.LM161:
	bw.lwz   	r7,-2147221056(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L451
	.stabn	68,0,502,.LM162-.LFBB5
.LM162:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147221444(r0),r7	   # movsi store
.L143:
	.stabn	68,0,548,.LM163-.LFBB5
.LM163:
	b.movi 	r4,2	     # movsi imm P
	b.movi 	r7,0	     # movsi imm P
	b.lwz   	r23,12(r1)	    # movsi load
	b.blesi  	r23,2,.L146
	b.j    	.L144
.L125:
	.stabn	68,0,505,.LM164-.LFBB5
.LM164:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147352436(r0),r7	   # movsi store
	.stabn	68,0,506,.LM165-.LFBB5
.LM165:
	b.andi  	r7,r19,65535
	b.or    	r7,r7,r21
	bw.sw    	-2147352576(r0),r7	   # movsi store
	.stabn	68,0,507,.LM166-.LFBB5
.LM166:
	b.bnei  	r16,1,.L147
	b.sfeqi 	r4,0
	b.movi 	r7,1	     # movsi imm P
	b.cmov  	r7,r4,r7
	bw.sw    	-2147221500(r0),r7	   # movsi store
.L147:
	.stabn	68,0,508,.LM167-.LFBB5
.LM167:
	b.or    	r4,r22,r4
	b.beqi  	r4,0,.L150
	bw.lwz   	r7,(_img)(r0)	    # movsi load
	b.andi  	r7,r7,127
	b.slli  	r7,r7,1
	b.ori   	r7,r7,1
	bw.sw    	-2147352444(r0),r7	   # movsi store
.L150:
	.stabn	68,0,509,.LM168-.LFBB5
.LM168:
	b.bnei  	r16,1,.L152
	bw.sw    	-2147221500(r0),r16	   # movsi store
	b.j    	.L154
.L152:
	.stabn	68,0,510,.LM169-.LFBB5
.LM169:
	b.addi  	r19,r19,1
	b.j    	.L155
.L154:
	.stabn	68,0,511,.LM170-.LFBB5
.LM170:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L154
	.stabn	68,0,510,.LM171-.LFBB5
.LM171:
	b.addi  	r19,r19,1
.L155:
	.stabn	68,0,514,.LM172-.LFBB5
.LM172:
	b.ori   	r6,r18,65536
	bw.sw    	-2147286888(r0),r6	   # movsi store
	.stabn	68,0,515,.LM173-.LFBB5
.LM173:
	b.bnei  	r14,0,.L157
	bw.sw    	-2147286876(r0),r6	   # movsi store
.L157:
	.stabn	68,0,516,.LM174-.LFBB5
.LM174:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	.stabn	68,0,518,.LM175-.LFBB5
.LM175:
	b.addi  	r10,r14,1
	.stabn	68,0,516,.LM176-.LFBB5
.LM176:
	b.bne   	r7,r14,.L161
	bw.sw    	-2147286872(r0),r6	   # movsi store
	b.movi 	r10,0	     # movsi imm P
.L161:
.LBB10:
	.stabn	68,0,519,.LM177-.LFBB5
.LM177:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mfspr r5,r7,0
.LBE10:
	b.ori  	r6,r0,17	  # movsi imm J
	b.andi  	r7,r5,-7
	l.mtspr r6,r7,0
	.stabn	68,0,520,.LM178-.LFBB5
.LM178:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147155940(r0),r7	   # movsi store
	.stabn	68,0,521,.LM179-.LFBB5
.LM179:
	bw.sw    	-2147287036(r0),r7	   # movsi store
	.stabn	68,0,522,.LM180-.LFBB5
.LM180:
	b.bnei  	r16,1,.L446
.L445:
	bw.lwz   	r7,-2147286972(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L445
.L446:
	.stabn	68,0,525,.LM181-.LFBB5
.LM181:
	bw.lwz   	r7,-2147155936(r0)	    # movsi load
	b.beqi  	r7,0,.L446
	.stabn	68,0,527,.LM182-.LFBB5
.LM182:
	b.bnei  	r16,1,.L165
	.stabn	68,0,528,.LM183-.LFBB5
.LM183:
	bw.sw    	-2147221500(r0),r0	   # movsi store
	.stabn	68,0,529,.LM184-.LFBB5
.LM184:
	bw.sw    	-2147221500(r0),r16	   # movsi store
.L165:
	.stabn	68,0,532,.LM185-.LFBB5
.LM185:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147418112(r0),r7	   # movsi store
	.stabn	68,0,533,.LM186-.LFBB5
.LM186:
	bw.sw    	-2147418112(r0),r0	   # movsi store
.L167:
	.stabn	68,0,534,.LM187-.LFBB5
.LM187:
	bw.lwz   	r7,-2147418108(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L167
.L447:
	.stabn	68,0,535,.LM188-.LFBB5
.LM188:
	bw.lwz   	r7,-2147286972(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L447
	.stabn	68,0,536,.LM189-.LFBB5
.LM189:
	b.beqi  	r4,0,.L449
.L448:
	.stabn	68,0,537,.LM190-.LFBB5
.LM190:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L448
	.stabn	68,0,538,.LM191-.LFBB5
.LM191:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	.stabn	68,0,539,.LM192-.LFBB5
.LM192:
	b.srai  	r7,r7,1
	b.andi  	r7,r7,7
	bw.lwz   	r6,(_bits_to_go)(r0)	    # movsi load
	b.sub   	r6,r6,r7
	bw.sw    	(_bits_to_go)(r0),r6	   # movsi store
	.stabn	68,0,540,.LM193-.LFBB5
.LM193:
	b.bgtsi  	r6,0,.L449
	b.addi  	r7,r6,8
	bw.sw    	(_bits_to_go)(r0),r7	   # movsi store
.L449:
	.stabn	68,0,542,.LM194-.LFBB5
.LM194:
	bw.lwz   	r7,-2147155944(r0)	    # movsi load
	b.beqi  	r7,0,.L449
	.stabn	68,0,543,.LM195-.LFBB5
.LM195:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r5,0
	b.j    	.L143
.L144:
	b.addi  	r11,r19,1
	b.movi 	r13,2	     # movsi imm P
	b.movi 	r14,0	     # movsi imm P
	.stabn	68,0,596,.LM196-.LFBB5
.LM196:
	b.lwz   	r6,32(r1)	    # movsi load
	b.slli  	r6,r6,18
	b.sw    	16(r1),r6	   # movsi store
.L175:
	.stabn	68,0,543,.LM197-.LFBB5
.LM197:
	b.addi  	r12,r11,-1
	.stabn	68,0,550,.LM198-.LFBB5
.LM198:
	b.addi  	r14,r14,4
.L176:
	.stabn	68,0,552,.LM199-.LFBB5
.LM199:
	bw.lwz   	r7,-2146828276(r0)	    # movsi load
	b.beqi  	r7,0,.L176
.L452:
	.stabn	68,0,553,.LM200-.LFBB5
.LM200:
	bw.lwz   	r7,-805175212(r0)	    # movsi load
	b.bnei  	r7,0,.L452
	.stabn	68,0,555,.LM201-.LFBB5
.LM201:
	b.beqi  	r20,0,.L179
	.stabn	68,0,556,.LM202-.LFBB5
.LM202:
	b.beqi  	r13,2,.L181
	.stabn	68,0,557,.LM203-.LFBB5
.LM203:
	b.addi  	r17,r17,1
	.stabn	68,0,558,.LM204-.LFBB5
.LM204:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	b.beq   	r7,r15,.L183
	.stabn	68,0,559,.LM205-.LFBB5
.LM205:
	b.addi  	r15,r15,1
	.stabn	68,0,560,.LM206-.LFBB5
.LM206:
	b.bnei  	r15,0,.L181
.L183:
	.stabn	68,0,561,.LM207-.LFBB5
.LM207:
	b.jal  	_SODBtoRBSP
	b.mov  	r3,r17	     # movsi
	b.jal  	_start_slice
	bw.lwz   	r7,(_slice_no)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_slice_no)(r0),r7	   # movsi store
	b.movi 	r15,0	     # movsi imm P
.L181:
	.stabn	68,0,566,.LM208-.LFBB5
.LM208:
	bw.lwz   	r7,-2147221248(r0)	    # movsi load
	b.andi  	r7,r7,15
	b.bnei  	r7,0,.L185
	.stabn	68,0,567,.LM209-.LFBB5
.LM209:
	bw.sw    	(_qp_delta)(r0),r0	   # movsi store
	.stabn	68,0,568,.LM210-.LFBB5
.LM210:
	bw.sw    	-2147352488(r0),r0	   # movsi store
	b.j    	.L187
.L185:
	.stabn	68,0,570,.LM211-.LFBB5
.LM211:
	bw.lwz   	r7,(_img+20)(r0)	    # movsi load
	bw.lwz   	r6,(_img+16)(r0)	    # movsi load
	b.beq   	r7,r6,.L188
	b.sub   	r7,r6,r7
	bw.sw    	(_qp_delta)(r0),r7	   # movsi store
	b.j    	.L190
.L188:
	.stabn	68,0,571,.LM212-.LFBB5
.LM212:
	bw.sw    	(_qp_delta)(r0),r0	   # movsi store
.L190:
	.stabn	68,0,572,.LM213-.LFBB5
.LM213:
	bw.lbz   	r7,(_qp_delta+3)(r0)
	b.slli  	r7,r7,6
	bw.sw    	-2147352488(r0),r7	   # movsi store
	.stabn	68,0,573,.LM214-.LFBB5
.LM214:
	bw.sw    	(_img+20)(r0),r6	   # movsi store
.L187:
	.stabn	68,0,577,.LM215-.LFBB5
.LM215:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147352436(r0),r7	   # movsi store
	.stabn	68,0,579,.LM216-.LFBB5
.LM216:
	b.andi  	r7,r12,65535
	b.or    	r7,r7,r21
	bw.sw    	-2147352576(r0),r7	   # movsi store
	.stabn	68,0,580,.LM217-.LFBB5
.LM217:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.or    	r4,r22,r7
	b.beqi  	r4,0,.L191
	bw.lwz   	r7,(_img)(r0)	    # movsi load
	b.andi  	r7,r7,127
	b.slli  	r7,r7,1
	b.ori   	r7,r7,1
	bw.sw    	-2147352444(r0),r7	   # movsi store
.L191:
	.stabn	68,0,582,.LM218-.LFBB5
.LM218:
	b.lwz   	r7,20(r1)	    # movsi load
	b.bnei  	r7,0,.L193
	b.slli  	r7,r13,16
	b.or    	r7,r7,r18
	bw.sw    	-2147221360(r0),r7	   # movsi store
.L193:
	.stabn	68,0,583,.LM219-.LFBB5
.LM219:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r6,r7,-1
	b.lwz   	r23,20(r1)	    # movsi load
	b.bne   	r6,r23,.L195
	b.slli  	r7,r13,16
	b.or    	r7,r7,r18
	bw.sw    	-2147221356(r0),r7	   # movsi store
	b.sw    	20(r1),r0	   # movsi store
	b.j    	.L197
.L195:
	.stabn	68,0,586,.LM220-.LFBB5
.LM220:
	b.lwz   	r7,20(r1)	    # movsi load
	b.addi  	r7,r7,1
	b.sw    	20(r1),r7	   # movsi store
.L197:
	.stabn	68,0,587,.LM221-.LFBB5
.LM221:
	b.addi  	r7,r13,-1
	b.slli  	r7,r7,16
	b.or    	r7,r7,r18
	bw.sw    	-2147286888(r0),r7	   # movsi store
	.stabn	68,0,588,.LM222-.LFBB5
.LM222:
	b.bnei  	r10,0,.L198
	bw.sw    	-2147286876(r0),r7	   # movsi store
.L198:
	.stabn	68,0,589,.LM223-.LFBB5
.LM223:
	b.bne   	r10,r6,.L200
	bw.sw    	-2147286872(r0),r7	   # movsi store
	b.movi 	r10,0	     # movsi imm P
	b.j    	.L458
.L200:
	.stabn	68,0,591,.LM224-.LFBB5
.LM224:
	b.addi  	r10,r10,1
.L458:
	.stabn	68,0,593,.LM225-.LFBB5
.LM225:
	bw.lwz   	r7,-2147221004(r0)	    # movsi load
	b.beqi  	r7,0,.L458
.LBB11:
	.stabn	68,0,594,.LM226-.LFBB5
.LM226:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mfspr r5,r7,0
.LBE11:
	b.ori  	r6,r0,17	  # movsi imm J
	b.andi  	r7,r5,-7
	l.mtspr r6,r7,0
	.stabn	68,0,595,.LM227-.LFBB5
.LM227:
	b.movi 	r6,1	     # movsi imm P
	bw.sw    	-2147155940(r0),r6	   # movsi store
	.stabn	68,0,596,.LM228-.LFBB5
.LM228:
	b.andi  	r7,r14,65535
	b.slli  	r7,r7,2
	b.lwz   	r23,16(r1)	    # movsi load
	b.or    	r7,r7,r23
	bw.sw    	-2147221492(r0),r7	   # movsi store
	.stabn	68,0,597,.LM229-.LFBB5
.LM229:
	bw.sw    	-2147287036(r0),r6	   # movsi store
	.stabn	68,0,598,.LM230-.LFBB5
.LM230:
	bw.sw    	-2147221464(r0),r6	   # movsi store
.L204:
	.stabn	68,0,601,.LM231-.LFBB5
.LM231:
	bw.lwz   	r7,-2147155936(r0)	    # movsi load
	b.beqi  	r7,0,.L204
.L459:
	.stabn	68,0,603,.LM232-.LFBB5
.LM232:
	bw.lwz   	r7,-2147221008(r0)	    # movsi load
	b.beqi  	r7,0,.L459
	.stabn	68,0,605,.LM233-.LFBB5
.LM233:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147418112(r0),r7	   # movsi store
	.stabn	68,0,606,.LM234-.LFBB5
.LM234:
	bw.sw    	-2147418112(r0),r0	   # movsi store
.L207:
	.stabn	68,0,607,.LM235-.LFBB5
.LM235:
	bw.lwz   	r7,-2147155944(r0)	    # movsi load
	b.beqi  	r7,0,.L207
	.stabn	68,0,608,.LM236-.LFBB5
.LM236:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r5,0
.L209:
	.stabn	68,0,609,.LM237-.LFBB5
.LM237:
	bw.lwz   	r7,-2147418108(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L209
	.stabn	68,0,610,.LM238-.LFBB5
.LM238:
	b.beqi  	r4,0,.L461
.L460:
	.stabn	68,0,611,.LM239-.LFBB5
.LM239:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L460
	.stabn	68,0,612,.LM240-.LFBB5
.LM240:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	.stabn	68,0,613,.LM241-.LFBB5
.LM241:
	b.srai  	r7,r7,1
	b.andi  	r7,r7,7
	bw.lwz   	r6,(_bits_to_go)(r0)	    # movsi load
	b.sub   	r6,r6,r7
	bw.sw    	(_bits_to_go)(r0),r6	   # movsi store
	.stabn	68,0,614,.LM242-.LFBB5
.LM242:
	b.bgtsi  	r6,0,.L461
	b.addi  	r7,r6,8
	bw.sw    	(_bits_to_go)(r0),r7	   # movsi store
.L461:
	.stabn	68,0,616,.LM243-.LFBB5
.LM243:
	bw.lwz   	r7,-2147221056(r0)	    # movsi load
	b.andi  	r7,r7,2
	b.beqi  	r7,0,.L461
	.stabn	68,0,618,.LM244-.LFBB5
.LM244:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147221444(r0),r7	   # movsi store
.L216:
	.stabn	68,0,619,.LM245-.LFBB5
.LM245:
	bw.lwz   	r7,-2147221056(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L216
	b.mov  	r19,r11	     # movsi
	b.j    	.L218
.L179:
	.stabn	68,0,622,.LM246-.LFBB5
.LM246:
	b.addi  	r17,r17,1
	.stabn	68,0,623,.LM247-.LFBB5
.LM247:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	b.bne   	r7,r15,.L219
	b.movi 	r15,0	     # movsi imm P
	b.j    	.L221
.L219:
	.stabn	68,0,624,.LM248-.LFBB5
.LM248:
	b.addi  	r15,r15,1
	.stabn	68,0,627,.LM249-.LFBB5
.LM249:
	b.bnei  	r15,0,.L222
.L221:
	.stabn	68,0,628,.LM250-.LFBB5
.LM250:
	b.jal  	_SODBtoRBSP
	b.mov  	r3,r17	     # movsi
	b.jal  	_start_slice
	bw.lwz   	r7,(_slice_no)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_slice_no)(r0),r7	   # movsi store
.L222:
	.stabn	68,0,630,.LM251-.LFBB5
.LM251:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147352436(r0),r7	   # movsi store
	.stabn	68,0,631,.LM252-.LFBB5
.LM252:
	b.andi  	r7,r12,65535
	b.or    	r7,r7,r21
	bw.sw    	-2147352576(r0),r7	   # movsi store
	.stabn	68,0,632,.LM253-.LFBB5
.LM253:
	b.bnei  	r16,1,.L223
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.sfeqi 	r7,0
	b.movi 	r6,1	     # movsi imm P
	b.cmov  	r7,r7,r6
	bw.sw    	-2147221500(r0),r7	   # movsi store
.L223:
	.stabn	68,0,633,.LM254-.LFBB5
.LM254:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.or    	r4,r22,r7
	b.beqi  	r4,0,.L226
	bw.lwz   	r7,(_img)(r0)	    # movsi load
	b.andi  	r7,r7,127
	b.slli  	r7,r7,1
	b.ori   	r7,r7,1
	bw.sw    	-2147352444(r0),r7	   # movsi store
.L226:
	.stabn	68,0,634,.LM255-.LFBB5
.LM255:
	b.mov  	r19,r11	     # movsi
	b.bnei  	r16,1,.L231
	bw.sw    	-2147221500(r0),r16	   # movsi store
.L230:
	.stabn	68,0,636,.LM256-.LFBB5
.LM256:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L230
	b.mov  	r19,r11	     # movsi
.L231:
	.stabn	68,0,641,.LM257-.LFBB5
.LM257:
	b.slli  	r7,r13,16
	b.or    	r6,r7,r18
	bw.sw    	-2147286888(r0),r6	   # movsi store
	.stabn	68,0,642,.LM258-.LFBB5
.LM258:
	b.bnei  	r10,0,.L233
	bw.sw    	-2147286876(r0),r6	   # movsi store
.L233:
	.stabn	68,0,643,.LM259-.LFBB5
.LM259:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	b.bne   	r7,r10,.L235
	bw.sw    	-2147286872(r0),r6	   # movsi store
	b.movi 	r10,0	     # movsi imm P
	b.j    	.L237
.L235:
	.stabn	68,0,645,.LM260-.LFBB5
.LM260:
	b.addi  	r10,r10,1
.L237:
.LBB12:
	.stabn	68,0,646,.LM261-.LFBB5
.LM261:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mfspr r5,r7,0
.LBE12:
	b.ori  	r6,r0,17	  # movsi imm J
	b.andi  	r7,r5,-7
	l.mtspr r6,r7,0
	.stabn	68,0,647,.LM262-.LFBB5
.LM262:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147155940(r0),r7	   # movsi store
	.stabn	68,0,648,.LM263-.LFBB5
.LM263:
	bw.sw    	-2147287036(r0),r7	   # movsi store
	.stabn	68,0,649,.LM264-.LFBB5
.LM264:
	b.bnei  	r16,1,.L454
.L453:
	bw.lwz   	r7,-2147286972(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L453
.L454:
	.stabn	68,0,651,.LM265-.LFBB5
.LM265:
	bw.lwz   	r7,-2147155936(r0)	    # movsi load
	b.beqi  	r7,0,.L454
	.stabn	68,0,653,.LM266-.LFBB5
.LM266:
	b.bnei  	r16,1,.L241
	.stabn	68,0,654,.LM267-.LFBB5
.LM267:
	bw.sw    	-2147221500(r0),r0	   # movsi store
	.stabn	68,0,655,.LM268-.LFBB5
.LM268:
	bw.sw    	-2147221500(r0),r16	   # movsi store
	.stabn	68,0,658,.LM269-.LFBB5
.LM269:
	bw.sw    	-2147418112(r0),r16	   # movsi store
	.stabn	68,0,659,.LM270-.LFBB5
.LM270:
	bw.sw    	-2147418112(r0),r0	   # movsi store
	b.j    	.L243
.L241:
	.stabn	68,0,658,.LM271-.LFBB5
.LM271:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147418112(r0),r7	   # movsi store
	.stabn	68,0,659,.LM272-.LFBB5
.LM272:
	bw.sw    	-2147418112(r0),r0	   # movsi store
	b.j    	.L455
.L243:
	.stabn	68,0,660,.LM273-.LFBB5
.LM273:
	bw.lwz   	r7,-2147418108(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L243
.L455:
	.stabn	68,0,661,.LM274-.LFBB5
.LM274:
	bw.lwz   	r7,-2147155944(r0)	    # movsi load
	b.beqi  	r7,0,.L455
	.stabn	68,0,662,.LM275-.LFBB5
.LM275:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r5,0
.L246:
	.stabn	68,0,663,.LM276-.LFBB5
.LM276:
	bw.lwz   	r7,-2147418108(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L246
	.stabn	68,0,664,.LM277-.LFBB5
.LM277:
	b.beqi  	r4,0,.L457
.L456:
	.stabn	68,0,665,.LM278-.LFBB5
.LM278:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L456
	.stabn	68,0,666,.LM279-.LFBB5
.LM279:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	.stabn	68,0,667,.LM280-.LFBB5
.LM280:
	b.srai  	r7,r7,1
	b.andi  	r7,r7,7
	bw.lwz   	r6,(_bits_to_go)(r0)	    # movsi load
	b.sub   	r6,r6,r7
	bw.sw    	(_bits_to_go)(r0),r6	   # movsi store
	.stabn	68,0,668,.LM281-.LFBB5
.LM281:
	b.bgtsi  	r6,0,.L457
	b.addi  	r7,r6,8
	bw.sw    	(_bits_to_go)(r0),r7	   # movsi store
.L457:
	.stabn	68,0,670,.LM282-.LFBB5
.LM282:
	bw.lwz   	r7,-2147286972(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L457
.L218:
	.stabn	68,0,548,.LM283-.LFBB5
.LM283:
	b.addi  	r13,r13,1
	b.addi  	r11,r11,1
	b.lwz   	r6,12(r1)	    # movsi load
	b.bne   	r13,r6,.L175
	b.lwz   	r7,8(r1)	    # movsi load
	b.mov  	r4,r6	     # movsi
.L146:
	.stabn	68,0,677,.LM284-.LFBB5
.LM284:
	b.addi  	r7,r7,4
	b.sw    	36(r1),r7	   # movsi store
.L253:
	.stabn	68,0,679,.LM285-.LFBB5
.LM285:
	bw.lwz   	r7,-2146828276(r0)	    # movsi load
	b.beqi  	r7,0,.L253
.L462:
	.stabn	68,0,680,.LM286-.LFBB5
.LM286:
	bw.lwz   	r7,-805175212(r0)	    # movsi load
	b.bnei  	r7,0,.L462
	.stabn	68,0,682,.LM287-.LFBB5
.LM287:
	b.beqi  	r20,0,.L256
	.stabn	68,0,684,.LM288-.LFBB5
.LM288:
	b.lwz   	r7,20(r1)	    # movsi load
	b.bnei  	r7,0,.L258
	b.slli  	r7,r4,16
	b.or    	r7,r7,r18
	bw.sw    	-2147221360(r0),r7	   # movsi store
.L258:
	.stabn	68,0,685,.LM289-.LFBB5
.LM289:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r5,r7,-1
	b.lwz   	r23,20(r1)	    # movsi load
	b.bne   	r5,r23,.L260
	b.slli  	r7,r4,16
	b.or    	r7,r7,r18
	bw.sw    	-2147221356(r0),r7	   # movsi store
	b.sw    	20(r1),r0	   # movsi store
	b.j    	.L467
.L260:
	.stabn	68,0,687,.LM290-.LFBB5
.LM290:
	b.lwz   	r6,20(r1)	    # movsi load
	b.addi  	r6,r6,1
	b.sw    	20(r1),r6	   # movsi store
.L467:
	.stabn	68,0,690,.LM291-.LFBB5
.LM291:
	bw.lwz   	r7,-2147221008(r0)	    # movsi load
	b.beqi  	r7,0,.L467
.LBB13:
	.stabn	68,0,692,.LM292-.LFBB5
.LM292:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mfspr r11,r7,0
.LBE13:
	b.ori  	r6,r0,17	  # movsi imm J
	b.andi  	r7,r11,-7
	l.mtspr r6,r7,0
	.stabn	68,0,693,.LM293-.LFBB5
.LM293:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147155940(r0),r7	   # movsi store
	.stabn	68,0,694,.LM294-.LFBB5
.LM294:
	b.lwz   	r23,36(r1)	    # movsi load
	b.andi  	r7,r23,65535
	b.slli  	r7,r7,2
	b.lwz   	r23,32(r1)	    # movsi load
	b.slli  	r6,r23,18
	b.or    	r7,r7,r6
	bw.sw    	-2147221492(r0),r7	   # movsi store
	.stabn	68,0,695,.LM295-.LFBB5
.LM295:
	b.addi  	r7,r4,-1
	b.slli  	r7,r7,16
	b.or    	r7,r7,r18
	bw.sw    	-2147286888(r0),r7	   # movsi store
	.stabn	68,0,696,.LM296-.LFBB5
.LM296:
	b.bnei  	r10,0,.L264
	bw.sw    	-2147286876(r0),r7	   # movsi store
.L264:
	.stabn	68,0,699,.LM297-.LFBB5
.LM297:
	b.addi  	r14,r10,1
	.stabn	68,0,697,.LM298-.LFBB5
.LM298:
	b.bne   	r5,r10,.L268
	bw.sw    	-2147286872(r0),r7	   # movsi store
	b.movi 	r14,0	     # movsi imm P
.L268:
	.stabn	68,0,700,.LM299-.LFBB5
.LM299:
	b.addi  	r13,r17,1
	.stabn	68,0,701,.LM300-.LFBB5
.LM300:
	b.movi 	r12,0	     # movsi imm P
	b.beq   	r5,r15,.L271
	.stabn	68,0,702,.LM301-.LFBB5
.LM301:
	b.addi  	r12,r15,1
	.stabn	68,0,705,.LM302-.LFBB5
.LM302:
	b.bnei  	r12,0,.L272
.L271:
	.stabn	68,0,706,.LM303-.LFBB5
.LM303:
	b.jal  	_SODBtoRBSP
	b.mov  	r3,r13	     # movsi
	b.jal  	_start_slice
	bw.lwz   	r7,(_slice_no)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_slice_no)(r0),r7	   # movsi store
.L272:
	.stabn	68,0,710,.LM304-.LFBB5
.LM304:
	bw.lwz   	r7,-2147221248(r0)	    # movsi load
	b.andi  	r7,r7,15
	b.bnei  	r7,0,.L273
	.stabn	68,0,711,.LM305-.LFBB5
.LM305:
	bw.sw    	(_qp_delta)(r0),r0	   # movsi store
	.stabn	68,0,712,.LM306-.LFBB5
.LM306:
	bw.sw    	-2147352488(r0),r0	   # movsi store
	b.j    	.L275
.L273:
	.stabn	68,0,714,.LM307-.LFBB5
.LM307:
	bw.lwz   	r7,(_img+20)(r0)	    # movsi load
	bw.lwz   	r6,(_img+16)(r0)	    # movsi load
	b.beq   	r7,r6,.L276
	b.sub   	r7,r6,r7
	bw.sw    	(_qp_delta)(r0),r7	   # movsi store
	b.j    	.L278
.L276:
	.stabn	68,0,715,.LM308-.LFBB5
.LM308:
	bw.sw    	(_qp_delta)(r0),r0	   # movsi store
.L278:
	.stabn	68,0,716,.LM309-.LFBB5
.LM309:
	bw.lbz   	r7,(_qp_delta+3)(r0)
	b.slli  	r7,r7,6
	bw.sw    	-2147352488(r0),r7	   # movsi store
	.stabn	68,0,717,.LM310-.LFBB5
.LM310:
	bw.sw    	(_img+20)(r0),r6	   # movsi store
.L275:
	.stabn	68,0,721,.LM311-.LFBB5
.LM311:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147352436(r0),r7	   # movsi store
	.stabn	68,0,722,.LM312-.LFBB5
.LM312:
	b.andi  	r7,r19,65535
	b.or    	r7,r7,r21
	bw.sw    	-2147352576(r0),r7	   # movsi store
	.stabn	68,0,723,.LM313-.LFBB5
.LM313:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.or    	r6,r22,r7
	b.beqi  	r6,0,.L279
	bw.lwz   	r7,(_img)(r0)	    # movsi load
	b.andi  	r7,r7,127
	b.slli  	r7,r7,1
	b.ori   	r7,r7,1
	bw.sw    	-2147352444(r0),r7	   # movsi store
.L279:
	.stabn	68,0,725,.LM314-.LFBB5
.LM314:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147287036(r0),r7	   # movsi store
	.stabn	68,0,726,.LM315-.LFBB5
.LM315:
	bw.sw    	-2147221464(r0),r7	   # movsi store
.L281:
	.stabn	68,0,730,.LM316-.LFBB5
.LM316:
	bw.lwz   	r7,-2147155944(r0)	    # movsi load
	b.beqi  	r7,0,.L281
	.stabn	68,0,731,.LM317-.LFBB5
.LM317:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r11,0
	.stabn	68,0,732,.LM318-.LFBB5
.LM318:
	b.beqi  	r6,0,.L469
.L468:
	.stabn	68,0,733,.LM319-.LFBB5
.LM319:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L468
	.stabn	68,0,734,.LM320-.LFBB5
.LM320:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	.stabn	68,0,735,.LM321-.LFBB5
.LM321:
	b.srai  	r7,r7,1
	b.andi  	r7,r7,7
	bw.lwz   	r6,(_bits_to_go)(r0)	    # movsi load
	b.sub   	r6,r6,r7
	bw.sw    	(_bits_to_go)(r0),r6	   # movsi store
	.stabn	68,0,736,.LM322-.LFBB5
.LM322:
	b.bgtsi  	r6,0,.L469
	b.addi  	r7,r6,8
	bw.sw    	(_bits_to_go)(r0),r7	   # movsi store
.L469:
	.stabn	68,0,739,.LM323-.LFBB5
.LM323:
	bw.lwz   	r7,-2147221056(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L469
	.stabn	68,0,724,.LM324-.LFBB5
.LM324:
	b.addi  	r10,r19,1
	b.j    	.L470
.L256:
	.stabn	68,0,742,.LM325-.LFBB5
.LM325:
	b.slli  	r7,r4,16
	b.or    	r6,r7,r18
	bw.sw    	-2147286888(r0),r6	   # movsi store
	.stabn	68,0,743,.LM326-.LFBB5
.LM326:
	b.bnei  	r10,0,.L289
	bw.sw    	-2147286876(r0),r6	   # movsi store
.L289:
	.stabn	68,0,744,.LM327-.LFBB5
.LM327:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	.stabn	68,0,746,.LM328-.LFBB5
.LM328:
	b.addi  	r14,r10,1
	.stabn	68,0,744,.LM329-.LFBB5
.LM329:
	b.bne   	r7,r10,.L293
	bw.sw    	-2147286872(r0),r6	   # movsi store
	b.movi 	r14,0	     # movsi imm P
.L293:
	.stabn	68,0,747,.LM330-.LFBB5
.LM330:
	b.addi  	r13,r17,1
	.stabn	68,0,748,.LM331-.LFBB5
.LM331:
	b.movi 	r12,0	     # movsi imm P
	b.beq   	r7,r15,.L296
	.stabn	68,0,749,.LM332-.LFBB5
.LM332:
	b.addi  	r12,r15,1
	.stabn	68,0,752,.LM333-.LFBB5
.LM333:
	b.bnei  	r12,0,.L297
.L296:
	.stabn	68,0,753,.LM334-.LFBB5
.LM334:
	b.jal  	_SODBtoRBSP
	b.mov  	r3,r13	     # movsi
	b.jal  	_start_slice
	bw.lwz   	r7,(_slice_no)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_slice_no)(r0),r7	   # movsi store
.L297:
	.stabn	68,0,756,.LM335-.LFBB5
.LM335:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147352436(r0),r7	   # movsi store
	.stabn	68,0,757,.LM336-.LFBB5
.LM336:
	b.andi  	r7,r19,65535
	b.or    	r7,r7,r21
	bw.sw    	-2147352576(r0),r7	   # movsi store
	.stabn	68,0,758,.LM337-.LFBB5
.LM337:
	b.bnei  	r16,1,.L298
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.sfeqi 	r7,0
	b.movi 	r6,1	     # movsi imm P
	b.cmov  	r7,r7,r6
	bw.sw    	-2147221500(r0),r7	   # movsi store
.L298:
	.stabn	68,0,759,.LM338-.LFBB5
.LM338:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.or    	r4,r22,r7
	b.beqi  	r4,0,.L301
	bw.lwz   	r7,(_img)(r0)	    # movsi load
	b.andi  	r7,r7,127
	b.slli  	r7,r7,1
	b.ori   	r7,r7,1
	bw.sw    	-2147352444(r0),r7	   # movsi store
.L301:
	.stabn	68,0,761,.LM339-.LFBB5
.LM339:
	b.addi  	r10,r19,1
	.stabn	68,0,760,.LM340-.LFBB5
.LM340:
	b.bnei  	r16,1,.L306
	bw.sw    	-2147221500(r0),r16	   # movsi store
.L305:
	.stabn	68,0,762,.LM341-.LFBB5
.LM341:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L305
	.stabn	68,0,761,.LM342-.LFBB5
.LM342:
	b.addi  	r10,r19,1
.L306:
.LBB14:
	.stabn	68,0,765,.LM343-.LFBB5
.LM343:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mfspr r5,r7,0
.LBE14:
	b.ori  	r6,r0,17	  # movsi imm J
	b.andi  	r7,r5,-7
	l.mtspr r6,r7,0
	.stabn	68,0,766,.LM344-.LFBB5
.LM344:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147155940(r0),r7	   # movsi store
	.stabn	68,0,767,.LM345-.LFBB5
.LM345:
	bw.sw    	-2147287036(r0),r7	   # movsi store
	.stabn	68,0,768,.LM346-.LFBB5
.LM346:
	b.bnei  	r16,1,.L464
.L463:
	bw.lwz   	r7,-2147286972(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L463
.L464:
	.stabn	68,0,771,.LM347-.LFBB5
.LM347:
	bw.lwz   	r7,-2147155944(r0)	    # movsi load
	b.beqi  	r7,0,.L464
	.stabn	68,0,772,.LM348-.LFBB5
.LM348:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r5,0
	.stabn	68,0,773,.LM349-.LFBB5
.LM349:
	b.beqi  	r4,0,.L466
.L465:
	.stabn	68,0,774,.LM350-.LFBB5
.LM350:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L465
	.stabn	68,0,775,.LM351-.LFBB5
.LM351:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	.stabn	68,0,776,.LM352-.LFBB5
.LM352:
	b.srai  	r7,r7,1
	b.andi  	r7,r7,7
	bw.lwz   	r6,(_bits_to_go)(r0)	    # movsi load
	b.sub   	r6,r6,r7
	bw.sw    	(_bits_to_go)(r0),r6	   # movsi store
	.stabn	68,0,777,.LM353-.LFBB5
.LM353:
	b.bgtsi  	r6,0,.L466
	b.addi  	r7,r6,8
	bw.sw    	(_bits_to_go)(r0),r7	   # movsi store
.L466:
	.stabn	68,0,780,.LM354-.LFBB5
.LM354:
	bw.lwz   	r7,-2147286972(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L466
.L470:
	.stabn	68,0,789,.LM355-.LFBB5
.LM355:
	bw.lwz   	r7,-2146828276(r0)	    # movsi load
	b.beqi  	r7,0,.L470
.L471:
	.stabn	68,0,790,.LM356-.LFBB5
.LM356:
	bw.lwz   	r7,-805175212(r0)	    # movsi load
	b.bnei  	r7,0,.L471
	.stabn	68,0,792,.LM357-.LFBB5
.LM357:
	b.beqi  	r20,0,.L317
	.stabn	68,0,793,.LM358-.LFBB5
.LM358:
	b.addi  	r13,r13,1
	.stabn	68,0,794,.LM359-.LFBB5
.LM359:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	b.movi 	r11,0	     # movsi imm P
	b.beq   	r7,r12,.L321
	.stabn	68,0,795,.LM360-.LFBB5
.LM360:
	b.addi  	r11,r12,1
	.stabn	68,0,798,.LM361-.LFBB5
.LM361:
	b.bnei  	r11,0,.L322
.L321:
	.stabn	68,0,799,.LM362-.LFBB5
.LM362:
	b.jal  	_SODBtoRBSP
	b.mov  	r3,r13	     # movsi
	b.jal  	_start_slice
	bw.lwz   	r7,(_slice_no)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_slice_no)(r0),r7	   # movsi store
.L322:
	.stabn	68,0,803,.LM363-.LFBB5
.LM363:
	bw.lwz   	r7,-2147221248(r0)	    # movsi load
	b.andi  	r7,r7,15
	b.bnei  	r7,0,.L323
	.stabn	68,0,804,.LM364-.LFBB5
.LM364:
	bw.sw    	(_qp_delta)(r0),r0	   # movsi store
	.stabn	68,0,805,.LM365-.LFBB5
.LM365:
	bw.sw    	-2147352488(r0),r0	   # movsi store
	b.j    	.L325
.L323:
	.stabn	68,0,807,.LM366-.LFBB5
.LM366:
	bw.lwz   	r7,(_img+20)(r0)	    # movsi load
	bw.lwz   	r6,(_img+16)(r0)	    # movsi load
	b.beq   	r7,r6,.L326
	b.sub   	r7,r6,r7
	bw.sw    	(_qp_delta)(r0),r7	   # movsi store
	b.j    	.L328
.L326:
	.stabn	68,0,808,.LM367-.LFBB5
.LM367:
	bw.sw    	(_qp_delta)(r0),r0	   # movsi store
.L328:
	.stabn	68,0,809,.LM368-.LFBB5
.LM368:
	bw.lbz   	r7,(_qp_delta+3)(r0)
	b.slli  	r7,r7,6
	bw.sw    	-2147352488(r0),r7	   # movsi store
	.stabn	68,0,810,.LM369-.LFBB5
.LM369:
	bw.sw    	(_img+20)(r0),r6	   # movsi store
.L325:
	.stabn	68,0,813,.LM370-.LFBB5
.LM370:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147352436(r0),r7	   # movsi store
	.stabn	68,0,815,.LM371-.LFBB5
.LM371:
	b.andi  	r7,r10,65535
	b.or    	r7,r7,r21
	bw.sw    	-2147352576(r0),r7	   # movsi store
	.stabn	68,0,816,.LM372-.LFBB5
.LM372:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.or    	r4,r22,r7
	b.beqi  	r4,0,.L329
	bw.lwz   	r7,(_img)(r0)	    # movsi load
	b.andi  	r7,r7,127
	b.slli  	r7,r7,1
	b.ori   	r7,r7,1
	bw.sw    	-2147352444(r0),r7	   # movsi store
.L329:
.LBB15:
	.stabn	68,0,818,.LM373-.LFBB5
.LM373:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mfspr r5,r7,0
.LBE15:
	b.ori  	r6,r0,17	  # movsi imm J
	b.andi  	r7,r5,-7
	l.mtspr r6,r7,0
	.stabn	68,0,819,.LM374-.LFBB5
.LM374:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147155940(r0),r7	   # movsi store
	.stabn	68,0,821,.LM375-.LFBB5
.LM375:
	b.lwz   	r7,4(r1)	    # movsi load
	b.or    	r6,r18,r7
	bw.sw    	-2147286888(r0),r6	   # movsi store
	.stabn	68,0,822,.LM376-.LFBB5
.LM376:
	b.bnei  	r14,0,.L331
	bw.sw    	-2147286876(r0),r6	   # movsi store
.L331:
	.stabn	68,0,823,.LM377-.LFBB5
.LM377:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	b.bne   	r7,r14,.L333
	bw.sw    	-2147286872(r0),r6	   # movsi store
	b.movi 	r14,0	     # movsi imm P
	b.j    	.L335
.L333:
	.stabn	68,0,825,.LM378-.LFBB5
.LM378:
	b.addi  	r14,r14,1
.L335:
	.stabn	68,0,826,.LM379-.LFBB5
.LM379:
	b.lwz   	r7,36(r1)	    # movsi load
	b.addi  	r7,r7,4
	b.andi  	r7,r7,65535
	b.slli  	r7,r7,2
	b.lwz   	r23,32(r1)	    # movsi load
	b.slli  	r6,r23,18
	b.or    	r7,r7,r6
	bw.sw    	-2147221492(r0),r7	   # movsi store
	.stabn	68,0,828,.LM380-.LFBB5
.LM380:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147287036(r0),r7	   # movsi store
	.stabn	68,0,829,.LM381-.LFBB5
.LM381:
	bw.sw    	-2147221464(r0),r7	   # movsi store
	.stabn	68,0,833,.LM382-.LFBB5
.LM382:
	b.beqi  	r4,0,.L475
.L474:
	.stabn	68,0,834,.LM383-.LFBB5
.LM383:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L474
	.stabn	68,0,835,.LM384-.LFBB5
.LM384:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	.stabn	68,0,836,.LM385-.LFBB5
.LM385:
	b.srai  	r7,r7,1
	b.andi  	r7,r7,7
	bw.lwz   	r6,(_bits_to_go)(r0)	    # movsi load
	b.sub   	r6,r6,r7
	bw.sw    	(_bits_to_go)(r0),r6	   # movsi store
	.stabn	68,0,837,.LM386-.LFBB5
.LM386:
	b.bgtsi  	r6,0,.L475
	b.addi  	r7,r6,8
	bw.sw    	(_bits_to_go)(r0),r7	   # movsi store
.L475:
	.stabn	68,0,840,.LM387-.LFBB5
.LM387:
	bw.lwz   	r7,-2147155944(r0)	    # movsi load
	b.beqi  	r7,0,.L475
	.stabn	68,0,841,.LM388-.LFBB5
.LM388:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r5,0
.L341:
	.stabn	68,0,843,.LM389-.LFBB5
.LM389:
	bw.lwz   	r7,-2147221056(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L341
	.stabn	68,0,817,.LM390-.LFBB5
.LM390:
	b.addi  	r19,r10,1
	b.mov  	r12,r5	     # movsi
	b.j    	.L476
.L317:
	.stabn	68,0,846,.LM391-.LFBB5
.LM391:
	b.addi  	r13,r13,1
	.stabn	68,0,847,.LM392-.LFBB5
.LM392:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	b.movi 	r11,0	     # movsi imm P
	b.beq   	r7,r12,.L346
	.stabn	68,0,848,.LM393-.LFBB5
.LM393:
	b.addi  	r11,r12,1
	.stabn	68,0,851,.LM394-.LFBB5
.LM394:
	b.bnei  	r11,0,.L347
.L346:
	.stabn	68,0,852,.LM395-.LFBB5
.LM395:
	b.jal  	_SODBtoRBSP
	b.mov  	r3,r13	     # movsi
	b.jal  	_start_slice
	bw.lwz   	r7,(_slice_no)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_slice_no)(r0),r7	   # movsi store
.L347:
	.stabn	68,0,855,.LM396-.LFBB5
.LM396:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147352436(r0),r7	   # movsi store
	.stabn	68,0,856,.LM397-.LFBB5
.LM397:
	b.andi  	r7,r10,65535
	b.or    	r7,r7,r21
	bw.sw    	-2147352576(r0),r7	   # movsi store
	.stabn	68,0,857,.LM398-.LFBB5
.LM398:
	b.bnei  	r16,1,.L348
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.sfeqi 	r7,0
	b.movi 	r6,1	     # movsi imm P
	b.cmov  	r7,r7,r6
	bw.sw    	-2147221500(r0),r7	   # movsi store
.L348:
	.stabn	68,0,858,.LM399-.LFBB5
.LM399:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.or    	r4,r22,r7
	b.beqi  	r4,0,.L351
	bw.lwz   	r7,(_img)(r0)	    # movsi load
	b.andi  	r7,r7,127
	b.slli  	r7,r7,1
	b.ori   	r7,r7,1
	bw.sw    	-2147352444(r0),r7	   # movsi store
.L351:
	.stabn	68,0,860,.LM400-.LFBB5
.LM400:
	b.addi  	r19,r10,1
	.stabn	68,0,859,.LM401-.LFBB5
.LM401:
	b.bnei  	r16,1,.L356
	bw.sw    	-2147221500(r0),r16	   # movsi store
.L355:
	.stabn	68,0,861,.LM402-.LFBB5
.LM402:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L355
	.stabn	68,0,860,.LM403-.LFBB5
.LM403:
	b.addi  	r19,r10,1
.L356:
.LBB16:
	.stabn	68,0,864,.LM404-.LFBB5
.LM404:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mfspr r5,r7,0
.LBE16:
	b.ori  	r6,r0,17	  # movsi imm J
	b.andi  	r7,r5,-7
	l.mtspr r6,r7,0
	.stabn	68,0,865,.LM405-.LFBB5
.LM405:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147155940(r0),r7	   # movsi store
	.stabn	68,0,866,.LM406-.LFBB5
.LM406:
	b.beqi  	r4,0,.L473
.L472:
	.stabn	68,0,867,.LM407-.LFBB5
.LM407:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L472
	.stabn	68,0,868,.LM408-.LFBB5
.LM408:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	.stabn	68,0,869,.LM409-.LFBB5
.LM409:
	b.srai  	r7,r7,1
	b.andi  	r7,r7,7
	bw.lwz   	r6,(_bits_to_go)(r0)	    # movsi load
	b.sub   	r6,r6,r7
	bw.sw    	(_bits_to_go)(r0),r6	   # movsi store
	.stabn	68,0,870,.LM410-.LFBB5
.LM410:
	b.bgtsi  	r6,0,.L473
	b.addi  	r7,r6,8
	bw.sw    	(_bits_to_go)(r0),r7	   # movsi store
.L473:
	.stabn	68,0,872,.LM411-.LFBB5
.LM411:
	bw.lwz   	r7,-2147155944(r0)	    # movsi load
	b.beqi  	r7,0,.L473
	.stabn	68,0,873,.LM412-.LFBB5
.LM412:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r5,0
	b.mov  	r12,r5	     # movsi
.L476:
	.stabn	68,0,881,.LM413-.LFBB5
.LM413:
	bw.lwz   	r7,-2146828276(r0)	    # movsi load
	b.beqi  	r7,0,.L476
.L477:
	.stabn	68,0,882,.LM414-.LFBB5
.LM414:
	bw.lwz   	r7,-805175212(r0)	    # movsi load
	b.bnei  	r7,0,.L477
	.stabn	68,0,884,.LM415-.LFBB5
.LM415:
	b.beqi  	r20,0,.L365
	.stabn	68,0,885,.LM416-.LFBB5
.LM416:
	b.addi  	r13,r13,1
	.stabn	68,0,886,.LM417-.LFBB5
.LM417:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	b.movi 	r12,0	     # movsi imm P
	b.beq   	r7,r11,.L369
	.stabn	68,0,887,.LM418-.LFBB5
.LM418:
	b.addi  	r12,r11,1
	.stabn	68,0,890,.LM419-.LFBB5
.LM419:
	b.bnei  	r12,0,.L370
.L369:
	.stabn	68,0,891,.LM420-.LFBB5
.LM420:
	b.jal  	_SODBtoRBSP
	b.mov  	r3,r13	     # movsi
	b.jal  	_start_slice
	bw.lwz   	r7,(_slice_no)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_slice_no)(r0),r7	   # movsi store
.L370:
	.stabn	68,0,895,.LM421-.LFBB5
.LM421:
	bw.lwz   	r7,-2147221248(r0)	    # movsi load
	b.andi  	r7,r7,15
	b.bnei  	r7,0,.L371
	.stabn	68,0,896,.LM422-.LFBB5
.LM422:
	bw.sw    	(_qp_delta)(r0),r0	   # movsi store
	.stabn	68,0,897,.LM423-.LFBB5
.LM423:
	bw.sw    	-2147352488(r0),r0	   # movsi store
	b.j    	.L373
.L371:
	.stabn	68,0,899,.LM424-.LFBB5
.LM424:
	bw.lwz   	r7,(_img+20)(r0)	    # movsi load
	bw.lwz   	r6,(_img+16)(r0)	    # movsi load
	b.beq   	r7,r6,.L374
	b.sub   	r7,r6,r7
	bw.sw    	(_qp_delta)(r0),r7	   # movsi store
	b.j    	.L376
.L374:
	.stabn	68,0,900,.LM425-.LFBB5
.LM425:
	bw.sw    	(_qp_delta)(r0),r0	   # movsi store
.L376:
	.stabn	68,0,901,.LM426-.LFBB5
.LM426:
	bw.lbz   	r7,(_qp_delta+3)(r0)
	b.slli  	r7,r7,6
	bw.sw    	-2147352488(r0),r7	   # movsi store
	.stabn	68,0,902,.LM427-.LFBB5
.LM427:
	bw.sw    	(_img+20)(r0),r6	   # movsi store
.L373:
	.stabn	68,0,905,.LM428-.LFBB5
.LM428:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147352436(r0),r7	   # movsi store
	.stabn	68,0,907,.LM429-.LFBB5
.LM429:
	b.andi  	r7,r19,65535
	b.or    	r7,r7,r21
	bw.sw    	-2147352576(r0),r7	   # movsi store
	.stabn	68,0,908,.LM430-.LFBB5
.LM430:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.or    	r4,r22,r7
	b.beqi  	r4,0,.L377
	bw.lwz   	r7,(_img)(r0)	    # movsi load
	b.andi  	r7,r7,127
	b.slli  	r7,r7,1
	b.ori   	r7,r7,1
	bw.sw    	-2147352444(r0),r7	   # movsi store
.L377:
	.stabn	68,0,909,.LM431-.LFBB5
.LM431:
	b.addi  	r19,r19,1
.LBB17:
	.stabn	68,0,910,.LM432-.LFBB5
.LM432:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mfspr r10,r7,0
.LBE17:
	b.ori  	r6,r0,17	  # movsi imm J
	b.andi  	r7,r10,-7
	l.mtspr r6,r7,0
	.stabn	68,0,911,.LM433-.LFBB5
.LM433:
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	-2147155940(r0),r7	   # movsi store
	.stabn	68,0,916,.LM434-.LFBB5
.LM434:
	b.beqi  	r4,0,.L479
.L478:
	.stabn	68,0,917,.LM435-.LFBB5
.LM435:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	b.andi  	r7,r7,1
	b.beqi  	r7,0,.L478
	.stabn	68,0,918,.LM436-.LFBB5
.LM436:
	bw.lwz   	r7,-2147352440(r0)	    # movsi load
	.stabn	68,0,919,.LM437-.LFBB5
.LM437:
	b.srai  	r7,r7,1
	b.andi  	r7,r7,7
	bw.lwz   	r6,(_bits_to_go)(r0)	    # movsi load
	b.sub   	r6,r6,r7
	bw.sw    	(_bits_to_go)(r0),r6	   # movsi store
	.stabn	68,0,920,.LM438-.LFBB5
.LM438:
	b.bgtsi  	r6,0,.L479
	b.addi  	r7,r6,8
	bw.sw    	(_bits_to_go)(r0),r7	   # movsi store
.L479:
	.stabn	68,0,922,.LM439-.LFBB5
.LM439:
	bw.lwz   	r7,-2147155944(r0)	    # movsi load
	b.beqi  	r7,0,.L479
	.stabn	68,0,923,.LM440-.LFBB5
.LM440:
	b.ori  	r7,r0,17	  # movsi imm J
	l.mtspr r7,r10,0
	.stabn	68,0,924,.LM441-.LFBB5
.LM441:
	b.addi  	r17,r13,1
	.stabn	68,0,925,.LM442-.LFBB5
.LM442:
	bw.lwz   	r5,(_input+156)(r0)	    # movsi load
	b.addi  	r7,r5,-1
	b.addi  	r6,r12,1
	b.sfne  	r7,r12
	b.cmov  	r15,r6,r0
	.stabn	68,0,927,.LM443-.LFBB5
.LM443:
	bw.sw    	(_end_of_slice)(r0),r0	   # movsi store
	bw.lwz   	r7,(_slice_no)(r0)	    # movsi load
	b.addi  	r7,r7,1
	b.mul   	r7,r7,r5
	b.bne   	r7,r17,.L387
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	(_end_of_slice)(r0),r7	   # movsi store
.L387:
	.stabn	68,0,928,.LM444-.LFBB5
.LM444:
	bw.sw    	(_end_of_last_slice)(r0),r0	   # movsi store
	b.lwz   	r6,24(r1)	    # movsi load
	b.bne   	r17,r6,.L388
	b.movi 	r7,1	     # movsi imm P
	bw.sw    	(_end_of_last_slice)(r0),r7	   # movsi store
.L388:
	.stabn	68,0,929,.LM445-.LFBB5
.LM445:
	b.lwz   	r7,24(r1)	    # movsi load
	b.bne   	r17,r7,.L389
	.stabn	68,0,930,.LM446-.LFBB5
.LM446:
	b.bnei  	r4,0,.L391
	.stabn	68,0,932,.LM447-.LFBB5
.LM447:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,0,.L393
	.stabn	68,0,933,.LM448-.LFBB5
.LM448:
	b.ori  	r7,r0,40	  # movsi imm J
	bw.sw    	(_img+76)(r0),r7	   # movsi store
	b.j    	.L395
.L393:
	.stabn	68,0,935,.LM449-.LFBB5
.LM449:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,1,.L395
	.stabn	68,0,936,.LM450-.LFBB5
.LM450:
	b.ori  	r7,r0,20	  # movsi imm J
	bw.sw    	(_img+76)(r0),r7	   # movsi store
.L395:
	.stabn	68,0,938,.LM451-.LFBB5
.LM451:
	b.jal  	_terminate_frame
.L391:
	.stabn	68,0,940,.LM452-.LFBB5
.LM452:
	b.jal  	_SODBtoRBSP
	bw.lwz   	r7,(_slice_no)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_slice_no)(r0),r7	   # movsi store
	b.lwz   	r17,24(r1)	    # movsi load
	b.mov  	r12,r10	     # movsi
	b.j    	.L397
.L389:
	.stabn	68,0,942,.LM453-.LFBB5
.LM453:
	b.mov  	r12,r10	     # movsi
	b.bnei  	r15,0,.L397
	.stabn	68,0,943,.LM454-.LFBB5
.LM454:
	b.bnei  	r4,0,.L400
	.stabn	68,0,944,.LM455-.LFBB5
.LM455:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,0,.L402
	.stabn	68,0,945,.LM456-.LFBB5
.LM456:
	b.ori  	r7,r0,40	  # movsi imm J
	bw.sw    	(_img+76)(r0),r7	   # movsi store
	b.j    	.L404
.L402:
	.stabn	68,0,947,.LM457-.LFBB5
.LM457:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,1,.L404
	.stabn	68,0,948,.LM458-.LFBB5
.LM458:
	b.ori  	r7,r0,20	  # movsi imm J
	bw.sw    	(_img+76)(r0),r7	   # movsi store
.L404:
	.stabn	68,0,950,.LM459-.LFBB5
.LM459:
	b.jal  	_terminate_frame
.L400:
	.stabn	68,0,952,.LM460-.LFBB5
.LM460:
	b.jal  	_SODBtoRBSP
	b.mov  	r3,r19	     # movsi
	b.jal  	_start_slice
	bw.lwz   	r7,(_slice_no)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_slice_no)(r0),r7	   # movsi store
	b.mov  	r12,r10	     # movsi
	b.j    	.L397
.L365:
	.stabn	68,0,959,.LM461-.LFBB5
.LM461:
	b.addi  	r17,r13,1
	.stabn	68,0,960,.LM462-.LFBB5
.LM462:
	bw.lwz   	r7,(_input+156)(r0)	    # movsi load
	b.addi  	r7,r7,-1
	b.addi  	r6,r11,1
	b.sfne  	r7,r11
	b.cmov  	r15,r6,r0
	.stabn	68,0,965,.LM463-.LFBB5
.LM463:
	b.lwz   	r23,24(r1)	    # movsi load
	b.bne   	r17,r23,.L409
	.stabn	68,0,966,.LM464-.LFBB5
.LM464:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.or    	r7,r22,r7
	b.bnei  	r7,0,.L411
	.stabn	68,0,967,.LM465-.LFBB5
.LM465:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,0,.L413
	.stabn	68,0,968,.LM466-.LFBB5
.LM466:
	b.ori  	r7,r0,40	  # movsi imm J
	bw.sw    	(_img+76)(r0),r7	   # movsi store
	b.j    	.L415
.L413:
	.stabn	68,0,970,.LM467-.LFBB5
.LM467:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,1,.L415
	.stabn	68,0,971,.LM468-.LFBB5
.LM468:
	b.ori  	r7,r0,20	  # movsi imm J
	bw.sw    	(_img+76)(r0),r7	   # movsi store
.L415:
	.stabn	68,0,973,.LM469-.LFBB5
.LM469:
	b.jal  	_terminate_frame
.L411:
	.stabn	68,0,975,.LM470-.LFBB5
.LM470:
	b.jal  	_SODBtoRBSP
	bw.lwz   	r7,(_slice_no)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_slice_no)(r0),r7	   # movsi store
	b.lwz   	r17,24(r1)	    # movsi load
	b.j    	.L397
.L409:
	.stabn	68,0,978,.LM471-.LFBB5
.LM471:
	b.bnei  	r15,0,.L397
	.stabn	68,0,979,.LM472-.LFBB5
.LM472:
	bw.lwz   	r7,(_img+12)(r0)	    # movsi load
	b.or    	r7,r22,r7
	b.bnei  	r7,0,.L418
	.stabn	68,0,980,.LM473-.LFBB5
.LM473:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,0,.L420
	.stabn	68,0,981,.LM474-.LFBB5
.LM474:
	b.ori  	r7,r0,40	  # movsi imm J
	bw.sw    	(_img+76)(r0),r7	   # movsi store
	b.j    	.L422
.L420:
	.stabn	68,0,983,.LM475-.LFBB5
.LM475:
	bw.lwz   	r7,-536735720(r0)	    # movsi load
	b.andi  	r7,r7,3
	b.bnei  	r7,1,.L422
	.stabn	68,0,984,.LM476-.LFBB5
.LM476:
	b.ori  	r7,r0,20	  # movsi imm J
	bw.sw    	(_img+76)(r0),r7	   # movsi store
.L422:
	.stabn	68,0,986,.LM477-.LFBB5
.LM477:
	b.jal  	_terminate_frame
.L418:
	.stabn	68,0,988,.LM478-.LFBB5
.LM478:
	b.jal  	_SODBtoRBSP
	b.mov  	r3,r19	     # movsi
	b.jal  	_start_slice
	bw.lwz   	r7,(_slice_no)(r0)	    # movsi load
	b.addi  	r7,r7,1
	bw.sw    	(_slice_no)(r0),r7	   # movsi store
.L397:
	.stabn	68,0,1001,.LM479-.LFBB5
.LM479:
	bw.lwz   	r23,-2146828288(r0)	    # movsi load
	.stabn	68,0,1003,.LM480-.LFBB5
.LM480:
	b.blesi  	r23,0,.L424
	b.movi 	r4,0	     # movsi imm P
.L426:
	.stabn	68,0,1008,.LM481-.LFBB5
.LM481:
	b.bnei  	r20,1,.L427
	.stabn	68,0,1010,.LM482-.LFBB5
.LM482:
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.slli  	r7,r7,2
	b.addi  	r7,r7,_h264DualStreamBuf
	b.lwz   	r7,0(r7)	    # movsi load
	b.ori  	r6,r0,36864	  # movsi imm i
	b.bles   	r7,r6,.L429
	.stabn	68,0,1012,.LM483-.LFBB5
.LM483:
	bw.lwz   	r7,-2146795520(r0)	    # movsi load
	b.sw    	44(r1),r7	   # movsi store
	b.j    	.L431
.L429:
	.stabn	68,0,1016,.LM484-.LFBB5
.LM484:
	bw.lbz   	r6,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r6,r6
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.slli  	r7,r7,2
	b.addi  	r7,r7,_h264DualStreamBuf
	b.lwz   	r5,0(r7)	    # movsi load
	b.ori  	r7,r0,36864	  # movsi imm i
	b.mul   	r6,r6,r7
	b.add   	r6,r6,r5
	bw.lwz   	r7,-2146795520(r0)	    # movsi load
	bw.sw    	-251633408(r6),r7	   # movsi store
	b.j    	.L431
.L427:
	.stabn	68,0,1022,.LM485-.LFBB5
.LM485:
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.slli  	r7,r7,2
	b.addi  	r7,r7,_h264DualStreamBuf
	b.lwz   	r7,0(r7)	    # movsi load
	b.ori  	r6,r0,73728	  # movsi imm i
	b.bles   	r7,r6,.L432
	.stabn	68,0,1024,.LM486-.LFBB5
.LM486:
	bw.lwz   	r7,-2146795520(r0)	    # movsi load
	b.sw    	44(r1),r7	   # movsi store
	b.j    	.L431
.L432:
	.stabn	68,0,1028,.LM487-.LFBB5
.LM487:
	bw.lbz   	r6,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r6,r6
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.slli  	r7,r7,2
	b.addi  	r7,r7,_h264DualStreamBuf
	b.lwz   	r5,0(r7)	    # movsi load
	b.ori  	r7,r0,36864	  # movsi imm i
	b.mul   	r6,r6,r7
	b.add   	r6,r6,r5
	bw.lwz   	r7,-2146795520(r0)	    # movsi load
	bw.sw    	-251633408(r6),r7	   # movsi store
.L431:
	.stabn	68,0,1033,.LM488-.LFBB5
.LM488:
	bw.lbz   	r7,(_h264DualStreamBuf+18)(r0)
	b.extbs 	r7,r7
	b.slli  	r7,r7,2
	b.addi  	r7,r7,_h264DualStreamBuf
	b.lwz   	r6,0(r7)	    # movsi load
	b.addi  	r6,r6,4
	b.sw    	0(r7),r6	   # movsi store
	.stabn	68,0,1004,.LM489-.LFBB5
.LM489:
	b.addi  	r4,r4,4
	.stabn	68,0,1003,.LM490-.LFBB5
.LM490:
	b.bgts   	r23,r4,.L426
.L424:
	.stabn	68,0,317,.LM491-.LFBB5
.LM491:
	b.addi  	r18,r18,1
	b.lwz   	r7,28(r1)	    # movsi load
	b.bne   	r18,r7,.L69
.L434:
	.stabn	68,0,1075,.LM492-.LFBB5
.LM492:
	b.reti  	14,12
	.size	_encode_one_slice, .-_encode_one_slice
	.stabs	"i:r(0,1)",64,0,132,10
	.stabs	"j:r(0,1)",64,0,132,13
	.stabs	"j2:r(0,1)",64,0,132,12
	.stabs	"k:r(0,1)",64,0,132,10
	.stabs	"l:(0,1)",128,0,132,20
	.stabs	"total_mb_nr:(0,1)",128,0,133,24
	.stabs	"img_width_in_mb:r(0,1)",64,0,134,10
	.stabs	"img_height_in_mb:(0,1)",128,0,134,28
	.stabs	"mb_sub_groups:r(0,1)",64,0,137,5
	.stabs	"select_num:r(0,1)",64,0,137,6
	.stabs	"mbx:r(0,1)",64,0,147,13
	.stabs	"mby:r(0,1)",64,0,147,18
	.stabs	"sbx:r(0,1)",64,0,147,14
	.stabs	"sby:(0,1)",128,0,147,32
	.stabs	"temp:(16,6)",128,0,156,44
	.stabs	"intentional_islice:r(0,1)",64,0,157,16
	.stabs	"intra_line_curr:r(0,1)",64,0,159,22
	.stabs	"img_type:r(0,1)",64,0,163,20
	.stabs	"osb_fifo_i:r(0,1)",64,0,166,4
	.stabs	"osb_fifo_filled_num:r(0,1)",64,0,167,23
	.stabs	"cpu_sr:r(18,11)",64,0,168,12
	.stabn	192,0,0,.LFBB5-.LFBB5
	.stabs	"val:r(0,4)",64,0,422,5
	.stabn	192,0,0,.LBB8-.LFBB5
	.stabn	224,0,0,.LBE8-.LFBB5
	.stabs	"val:r(0,4)",64,0,442,5
	.stabn	192,0,0,.LBB9-.LFBB5
	.stabn	224,0,0,.LBE9-.LFBB5
	.stabs	"val:r(0,4)",64,0,519,5
	.stabn	192,0,0,.LBB10-.LFBB5
	.stabn	224,0,0,.LBE10-.LFBB5
	.stabs	"val:r(0,4)",64,0,594,5
	.stabn	192,0,0,.LBB11-.LFBB5
	.stabn	224,0,0,.LBE11-.LFBB5
	.stabs	"val:r(0,4)",64,0,646,5
	.stabn	192,0,0,.LBB12-.LFBB5
	.stabn	224,0,0,.LBE12-.LFBB5
	.stabs	"val:r(0,4)",64,0,692,11
	.stabn	192,0,0,.LBB13-.LFBB5
	.stabn	224,0,0,.LBE13-.LFBB5
	.stabs	"val:r(0,4)",64,0,765,5
	.stabn	192,0,0,.LBB14-.LFBB5
	.stabn	224,0,0,.LBE14-.LFBB5
	.stabs	"val:r(0,4)",64,0,818,5
	.stabn	192,0,0,.LBB15-.LFBB5
	.stabn	224,0,0,.LBE15-.LFBB5
	.stabs	"val:r(0,4)",64,0,864,5
	.stabn	192,0,0,.LBB16-.LFBB5
	.stabn	224,0,0,.LBE16-.LFBB5
	.stabs	"val:r(0,4)",64,0,910,10
	.stabn	192,0,0,.LBB17-.LFBB5
	.stabn	224,0,0,.LBE17-.LFBB5
	.stabn	224,0,0,.Lscope5-.LFBB5
.Lscope5:
	.stabs	"",36,0,0,.Lscope5-.LFBB5
	.stabd	78,0,0
	.global _random_temp
.section .bss
	.align 4
	.type	_random_temp, @object
	.size	_random_temp, 20
_random_temp:
	.zero	20
	.global _NAL_BIT_SIZE
	.align 4
	.type	_NAL_BIT_SIZE, @object
	.size	_NAL_BIT_SIZE, 4
_NAL_BIT_SIZE:
	.zero	4
	.comm	_cam_cb_offset_aligned_temp,4,4
	.comm	_cam_cr_offset_aligned_temp,4,4
	.comm	_end_of_slice,4,4
	.comm	_end_of_last_slice,4,4
	.comm	_slice_no,4,4
	.comm	_qp_delta,4,4
	.comm	_result_size_byte_until_5,2,2
	.stabs	"cam_cb_offset_aligned_temp:G(0,1)",32,0,436,0
	.stabs	"cam_cr_offset_aligned_temp:G(0,1)",32,0,437,0
	.stabs	"end_of_slice:G(0,1)",32,0,48,0
	.stabs	"end_of_last_slice:G(0,1)",32,0,49,0
	.stabs	"slice_no:G(0,1)",32,0,50,0
	.stabs	"qp_delta:G(0,1)",32,0,51,0
	.stabs	"random_temp:G(0,17)=ar(4,8);0;4;(0,1)",32,0,57,0
	.stabs	"NAL_BIT_SIZE:G(0,1)",32,0,72,0
	.stabs	"result_size_byte_until_5:G(0,8)",32,0,1115,0
.section .internalrom, "ax"
	.stabs	"",100,0,0,.Letext0
.Letext0:
	.ident	"GCC: (GNU) 4.2.1"
